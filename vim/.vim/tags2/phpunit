!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
AllTests	D:\www\lib\phpunit\Tests\AllTests.php	/^class AllTests$/;"	c
AnInterface	D:\www\lib\phpunit\Tests\_files\AnInterface.php	/^interface AnInterface$/;"	i
BankAccount	D:\www\lib\phpunit\Samples\BankAccount\BankAccount.php	/^class BankAccount$/;"	c
BankAccountDBTest	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccountDBTest.php	/^class BankAccountDBTest extends PHPUnit_Extensions_Database_TestCase$/;"	c
BankAccountDBTestMySQL	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccountDBTestMySQL.php	/^class BankAccountDBTestMySQL extends PHPUnit_Extensions_Database_TestCase$/;"	c
BankAccountException	D:\www\lib\phpunit\Samples\BankAccount\BankAccount.php	/^class BankAccountException extends RuntimeException {}$/;"	c
BankAccountTest	D:\www\lib\phpunit\Samples\BankAccount\BankAccountTest.php	/^class BankAccountTest extends PHPUnit_Framework_TestCase$/;"	c
CLEAN_INSERT	D:\www\lib\phpunit\Extensions\Database\Operation\Factory.php	/^    public static function CLEAN_INSERT()$/;"	f
CPD_IGNORE_LIST	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected static $CPD_IGNORE_LIST = array($/;"	v
ClassWithNonPublicAttributes	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^class ClassWithNonPublicAttributes extends ParentClassWithPrivateAttributes$/;"	c
DELETE	D:\www\lib\phpunit\Extensions\Database\Operation\Factory.php	/^    public static function DELETE()$/;"	f
DELETE_ALL	D:\www\lib\phpunit\Extensions\Database\Operation\Factory.php	/^    public static function DELETE_ALL()$/;"	f
DoubleTestCase	D:\www\lib\phpunit\Tests\_files\DoubleTestCase.php	/^class DoubleTestCase implements PHPUnit_Framework_Test$/;"	c
Error	D:\www\lib\phpunit\Tests\_files\Error.php	/^class Error extends PHPUnit_Framework_TestCase$/;"	c
Extensions_AllTests	D:\www\lib\phpunit\Tests\Extensions\AllTests.php	/^class Extensions_AllTests$/;"	c
Extensions_Database_AllTests	D:\www\lib\phpunit\Tests\Extensions\Database\AllTests.php	/^class Extensions_Database_AllTests$/;"	c
Extensions_Database_DataSet_AllTests	D:\www\lib\phpunit\Tests\Extensions\Database\DataSet\AllTests.php	/^class Extensions_Database_DataSet_AllTests$/;"	c
Extensions_Database_DataSet_FilterTest	D:\www\lib\phpunit\Tests\Extensions\Database\DataSet\FilterTest.php	/^class Extensions_Database_DataSet_FilterTest extends PHPUnit_Framework_TestCase  $/;"	c
Extensions_Database_DataSet_XmlDataSetsTest	D:\www\lib\phpunit\Tests\Extensions\Database\DataSet\XmlDataSetsTest.php	/^class Extensions_Database_DataSet_XmlDataSetsTest extends PHPUnit_Framework_TestCase  $/;"	c
Extensions_Database_Operation_AllTests	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\AllTests.php	/^class Extensions_Database_Operation_AllTests$/;"	c
Extensions_Database_Operation_OperationsTest	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^class Extensions_Database_Operation_OperationsTest extends PHPUnit_Extensions_Database_TestCase $/;"	c
Extensions_Database_Operation_RowBasedTest	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\RowBasedTest.php	/^class Extensions_Database_Operation_RowBasedTest extends PHPUnit_Extensions_Database_TestCase $/;"	c
Extensions_OutputTestCaseTest	D:\www\lib\phpunit\Tests\Extensions\OutputTestCaseTest.php	/^class Extensions_OutputTestCaseTest extends PHPUnit_Framework_TestCase$/;"	c
Extensions_PerformanceTestCaseTest	D:\www\lib\phpunit\Tests\Extensions\PerformanceTestCaseTest.php	/^class Extensions_PerformanceTestCaseTest extends PHPUnit_Framework_TestCase$/;"	c
Extensions_RepeatedTestTest	D:\www\lib\phpunit\Tests\Extensions\RepeatedTestTest.php	/^class Extensions_RepeatedTestTest extends PHPUnit_Framework_TestCase$/;"	c
Extensions_SeleniumTestCaseTest	D:\www\lib\phpunit\Tests\Extensions\SeleniumTestCaseTest.php	/^class Extensions_SeleniumTestCaseTest extends PHPUnit_Extensions_SeleniumTestCase$/;"	c
Failure	D:\www\lib\phpunit\Tests\_files\Failure.php	/^class Failure extends PHPUnit_Framework_TestCase$/;"	c
FailureTest	D:\www\lib\phpunit\Samples\FailureTest.php	/^class FailureTest extends PHPUnit_Framework_TestCase$/;"	c
Framework_AllTests	D:\www\lib\phpunit\Tests\Framework\AllTests.php	/^class Framework_AllTests$/;"	c
Framework_AssertTest	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^class Framework_AssertTest extends PHPUnit_Framework_TestCase$/;"	c
Framework_ComparisonFailureTest	D:\www\lib\phpunit\Tests\Framework\ComparisonFailureTest.php	/^class Framework_ComparisonFailureTest extends PHPUnit_Framework_TestCase$/;"	c
Framework_ConstraintTest	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^class Framework_ConstraintTest extends PHPUnit_Framework_TestCase$/;"	c
Framework_MockObjectTest	D:\www\lib\phpunit\Tests\Framework\MockObjectTest.php	/^class Framework_MockObjectTest extends PHPUnit_Framework_TestCase$/;"	c
Framework_SuiteTest	D:\www\lib\phpunit\Tests\Framework\SuiteTest.php	/^class Framework_SuiteTest extends PHPUnit_Framework_TestCase {$/;"	c
Framework_TestCaseTest	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^class Framework_TestCaseTest extends PHPUnit_Framework_TestCase$/;"	c
Framework_TestImplementorTest	D:\www\lib\phpunit\Tests\Framework\TestImplementorTest.php	/^class Framework_TestImplementorTest extends PHPUnit_Framework_TestCase$/;"	c
Framework_TestListenerTest	D:\www\lib\phpunit\Tests\Framework\TestListenerTest.php	/^class Framework_TestListenerTest extends PHPUnit_Framework_TestCase implements PHPUnit_Framework_TestListener$/;"	c
GLOBALS	D:\www\lib\phpunit\Framework\TestCase.php	/^            $GLOBALS = unserialize($globalsBackup);$/;"	v
IMoney	D:\www\lib\phpunit\Samples\Money\IMoney.php	/^interface IMoney$/;"	i
INSERT	D:\www\lib\phpunit\Extensions\Database\Operation\Factory.php	/^    public static function INSERT()$/;"	f
InheritedTestCase	D:\www\lib\phpunit\Tests\_files\InheritedTestCase.php	/^class InheritedTestCase extends OneTestCase$/;"	c
MathTest	D:\www\lib\phpunit\Framework\TestCase.php	/^ * class MathTest extends PHPUnit_Framework_TestCase$/;"	c
MockRunner	D:\www\lib\phpunit\Tests\_files\MockRunner.php	/^class MockRunner extends PHPUnit_Runner_BaseTestRunner$/;"	c
Money	D:\www\lib\phpunit\Samples\Money\Money.php	/^class Money implements IMoney$/;"	c
MoneyBag	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^class MoneyBag implements IMoney$/;"	c
MoneyTest	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^class MoneyTest extends PHPUnit_Framework_TestCase$/;"	c
NONE	D:\www\lib\phpunit\Extensions\Database\Operation\Factory.php	/^    public static function NONE()$/;"	f
NoArgTestCaseTest	D:\www\lib\phpunit\Tests\_files\NoArgTestCaseTest.php	/^class NoArgTestCaseTest extends PHPUnit_Framework_TestCase$/;"	c
NoTestCaseClass	D:\www\lib\phpunit\Tests\_files\NoTestCaseClass.php	/^class NoTestCaseClass$/;"	c
NoTestCases	D:\www\lib\phpunit\Tests\_files\NoTestCases.php	/^class NoTestCases extends PHPUnit_Framework_TestCase$/;"	c
NonStatic	D:\www\lib\phpunit\Tests\_files\NonStatic.php	/^class NonStatic$/;"	c
NotPublicTestCase	D:\www\lib\phpunit\Tests\_files\NotPublicTestCase.php	/^class NotPublicTestCase extends PHPUnit_Framework_TestCase$/;"	c
NotVoidTestCase	D:\www\lib\phpunit\Tests\_files\NotVoidTestCase.php	/^class NotVoidTestCase extends PHPUnit_Framework_TestCase$/;"	c
OneTestCase	D:\www\lib\phpunit\Tests\_files\OneTestCase.php	/^class OneTestCase extends PHPUnit_Framework_TestCase$/;"	c
OutputTestCase	D:\www\lib\phpunit\Tests\_files\OutputTestCase.php	/^class OutputTestCase extends PHPUnit_Extensions_OutputTestCase$/;"	c
OverrideTestCase	D:\www\lib\phpunit\Tests\_files\OverrideTestCase.php	/^class OverrideTestCase extends OneTestCase$/;"	c
PHPUNIT_TESTSUITE_WHITELIST_PREPARED	D:\www\lib\phpunit\Tests\Util\AllTests.php	/^            define('PHPUNIT_TESTSUITE_WHITELIST_PREPARED', TRUE);$/;"	d
PHPUnit_Extensions_Database_AbstractTester	D:\www\lib\phpunit\Extensions\Database\AbstractTester.php	/^abstract class PHPUnit_Extensions_Database_AbstractTester implements PHPUnit_Extensions_Database_ITester$/;"	c
PHPUnit_Extensions_Database_Constraint_DataSetIsEqual	D:\www\lib\phpunit\Extensions\Database\Constraint\DataSetIsEqual.php	/^class PHPUnit_Extensions_Database_Constraint_DataSetIsEqual extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Extensions_Database_Constraint_TableIsEqual	D:\www\lib\phpunit\Extensions\Database\Constraint\TableIsEqual.php	/^class PHPUnit_Extensions_Database_Constraint_TableIsEqual extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Extensions_Database_DB_DataSet	D:\www\lib\phpunit\Extensions\Database\DB\DataSet.php	/^class PHPUnit_Extensions_Database_DB_DataSet extends PHPUnit_Extensions_Database_DataSet_AbstractDataSet$/;"	c
PHPUnit_Extensions_Database_DB_DefaultDatabaseConnection	D:\www\lib\phpunit\Extensions\Database\DB\DefaultDatabaseConnection.php	/^class PHPUnit_Extensions_Database_DB_DefaultDatabaseConnection implements PHPUnit_Extensions_Database_DB_IDatabaseConnection$/;"	c
PHPUnit_Extensions_Database_DB_FilteredDataSet	D:\www\lib\phpunit\Extensions\Database\DB\FilteredDataSet.php	/^class PHPUnit_Extensions_Database_DB_FilteredDataSet extends PHPUnit_Extensions_Database_DB_DataSet$/;"	c
PHPUnit_Extensions_Database_DB_IDatabaseConnection	D:\www\lib\phpunit\Extensions\Database\DB\IDatabaseConnection.php	/^interface PHPUnit_Extensions_Database_DB_IDatabaseConnection$/;"	i
PHPUnit_Extensions_Database_DB_IMetaData	D:\www\lib\phpunit\Extensions\Database\DB\IMetaData.php	/^interface PHPUnit_Extensions_Database_DB_IMetaData$/;"	i
PHPUnit_Extensions_Database_DB_MetaData	D:\www\lib\phpunit\Extensions\Database\DB\MetaData.php	/^abstract class PHPUnit_Extensions_Database_DB_MetaData implements PHPUnit_Extensions_Database_DB_IMetaData$/;"	c
PHPUnit_Extensions_Database_DB_MetaData_InformationSchema	D:\www\lib\phpunit\Extensions\Database\DB\MetaData\InformationSchema.php	/^class PHPUnit_Extensions_Database_DB_MetaData_InformationSchema extends PHPUnit_Extensions_Database_DB_MetaData$/;"	c
PHPUnit_Extensions_Database_DB_MetaData_Oci	D:\www\lib\phpunit\Extensions\Database\DB\MetaData\Oci.php	/^class PHPUnit_Extensions_Database_DB_MetaData_Oci extends PHPUnit_Extensions_Database_DB_MetaData$/;"	c
PHPUnit_Extensions_Database_DB_MetaData_Sqlite	D:\www\lib\phpunit\Extensions\Database\DB\MetaData\Sqlite.php	/^class PHPUnit_Extensions_Database_DB_MetaData_Sqlite extends PHPUnit_Extensions_Database_DB_MetaData$/;"	c
PHPUnit_Extensions_Database_DB_ResultSetTable	D:\www\lib\phpunit\Extensions\Database\DB\ResultSetTable.php	/^class PHPUnit_Extensions_Database_DB_ResultSetTable extends PHPUnit_Extensions_Database_DataSet_AbstractTable$/;"	c
PHPUnit_Extensions_Database_DB_Table	D:\www\lib\phpunit\Extensions\Database\DB\Table.php	/^class PHPUnit_Extensions_Database_DB_Table extends PHPUnit_Extensions_Database_DataSet_AbstractTable$/;"	c
PHPUnit_Extensions_Database_DB_TableIterator	D:\www\lib\phpunit\Extensions\Database\DB\TableIterator.php	/^class PHPUnit_Extensions_Database_DB_TableIterator implements PHPUnit_Extensions_Database_DataSet_ITableIterator$/;"	c
PHPUnit_Extensions_Database_DB_TableMetaData	D:\www\lib\phpunit\Extensions\Database\DB\TableMetaData.php	/^class PHPUnit_Extensions_Database_DB_TableMetaData extends PHPUnit_Extensions_Database_DataSet_DefaultTableMetaData$/;"	c
PHPUnit_Extensions_Database_DataSet_AbstractDataSet	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractDataSet.php	/^abstract class PHPUnit_Extensions_Database_DataSet_AbstractDataSet implements PHPUnit_Extensions_Database_DataSet_IDataSet$/;"	c
PHPUnit_Extensions_Database_DataSet_AbstractTable	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractTable.php	/^class PHPUnit_Extensions_Database_DataSet_AbstractTable implements PHPUnit_Extensions_Database_DataSet_ITable$/;"	c
PHPUnit_Extensions_Database_DataSet_AbstractTableMetaData	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractTableMetaData.php	/^abstract class PHPUnit_Extensions_Database_DataSet_AbstractTableMetaData implements PHPUnit_Extensions_Database_DataSet_ITableMetaData$/;"	c
PHPUnit_Extensions_Database_DataSet_AbstractXmlDataSet	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractXmlDataSet.php	/^abstract class PHPUnit_Extensions_Database_DataSet_AbstractXmlDataSet extends PHPUnit_Extensions_Database_DataSet_AbstractDataSet$/;"	c
PHPUnit_Extensions_Database_DataSet_DataSetFilter	D:\www\lib\phpunit\Extensions\Database\DataSet\DataSetFilter.php	/^class PHPUnit_Extensions_Database_DataSet_DataSetFilter extends PHPUnit_Extensions_Database_DataSet_AbstractDataSet$/;"	c
PHPUnit_Extensions_Database_DataSet_DefaultDataSet	D:\www\lib\phpunit\Extensions\Database\DataSet\DefaultDataSet.php	/^class PHPUnit_Extensions_Database_DataSet_DefaultDataSet extends PHPUnit_Extensions_Database_DataSet_AbstractDataSet$/;"	c
PHPUnit_Extensions_Database_DataSet_DefaultTable	D:\www\lib\phpunit\Extensions\Database\DataSet\DefaultTable.php	/^class PHPUnit_Extensions_Database_DataSet_DefaultTable extends PHPUnit_Extensions_Database_DataSet_AbstractTable$/;"	c
PHPUnit_Extensions_Database_DataSet_DefaultTableIterator	D:\www\lib\phpunit\Extensions\Database\DataSet\DefaultTableIterator.php	/^class PHPUnit_Extensions_Database_DataSet_DefaultTableIterator implements PHPUnit_Extensions_Database_DataSet_ITableIterator$/;"	c
PHPUnit_Extensions_Database_DataSet_DefaultTableMetaData	D:\www\lib\phpunit\Extensions\Database\DataSet\DefaultTableMetaData.php	/^class PHPUnit_Extensions_Database_DataSet_DefaultTableMetaData extends PHPUnit_Extensions_Database_DataSet_AbstractTableMetaData$/;"	c
PHPUnit_Extensions_Database_DataSet_FlatXmlDataSet	D:\www\lib\phpunit\Extensions\Database\DataSet\FlatXmlDataSet.php	/^class PHPUnit_Extensions_Database_DataSet_FlatXmlDataSet extends PHPUnit_Extensions_Database_DataSet_AbstractXmlDataSet$/;"	c
PHPUnit_Extensions_Database_DataSet_IDataSet	D:\www\lib\phpunit\Extensions\Database\DataSet\IDataSet.php	/^interface PHPUnit_Extensions_Database_DataSet_IDataSet extends IteratorAggregate$/;"	i
PHPUnit_Extensions_Database_DataSet_ITable	D:\www\lib\phpunit\Extensions\Database\DataSet\ITable.php	/^interface PHPUnit_Extensions_Database_DataSet_ITable$/;"	i
PHPUnit_Extensions_Database_DataSet_ITableIterator	D:\www\lib\phpunit\Extensions\Database\DataSet\ITableIterator.php	/^interface PHPUnit_Extensions_Database_DataSet_ITableIterator extends Iterator$/;"	i
PHPUnit_Extensions_Database_DataSet_ITableMetaData	D:\www\lib\phpunit\Extensions\Database\DataSet\ITableMetaData.php	/^interface PHPUnit_Extensions_Database_DataSet_ITableMetaData$/;"	i
PHPUnit_Extensions_Database_DataSet_TableFilter	D:\www\lib\phpunit\Extensions\Database\DataSet\TableFilter.php	/^class PHPUnit_Extensions_Database_DataSet_TableFilter extends PHPUnit_Extensions_Database_DataSet_AbstractTable$/;"	c
PHPUnit_Extensions_Database_DataSet_TableMetaDataFilter	D:\www\lib\phpunit\Extensions\Database\DataSet\TableMetaDataFilter.php	/^class PHPUnit_Extensions_Database_DataSet_TableMetaDataFilter extends PHPUnit_Extensions_Database_DataSet_AbstractTableMetaData$/;"	c
PHPUnit_Extensions_Database_DataSet_XmlDataSet	D:\www\lib\phpunit\Extensions\Database\DataSet\XmlDataSet.php	/^class PHPUnit_Extensions_Database_DataSet_XmlDataSet extends PHPUnit_Extensions_Database_DataSet_AbstractXmlDataSet$/;"	c
PHPUnit_Extensions_Database_DefaultTester	D:\www\lib\phpunit\Extensions\Database\DefaultTester.php	/^class PHPUnit_Extensions_Database_DefaultTester extends PHPUnit_Extensions_Database_AbstractTester$/;"	c
PHPUnit_Extensions_Database_ITester	D:\www\lib\phpunit\Extensions\Database\ITester.php	/^interface PHPUnit_Extensions_Database_ITester$/;"	i
PHPUnit_Extensions_Database_Operation_Composite	D:\www\lib\phpunit\Extensions\Database\Operation\Composite.php	/^class PHPUnit_Extensions_Database_Operation_Composite implements PHPUnit_Extensions_Database_Operation_IDatabaseOperation$/;"	c
PHPUnit_Extensions_Database_Operation_Delete	D:\www\lib\phpunit\Extensions\Database\Operation\Delete.php	/^class PHPUnit_Extensions_Database_Operation_Delete extends PHPUnit_Extensions_Database_Operation_RowBased$/;"	c
PHPUnit_Extensions_Database_Operation_DeleteAll	D:\www\lib\phpunit\Extensions\Database\Operation\DeleteAll.php	/^class PHPUnit_Extensions_Database_Operation_DeleteAll implements PHPUnit_Extensions_Database_Operation_IDatabaseOperation$/;"	c
PHPUnit_Extensions_Database_Operation_Exception	D:\www\lib\phpunit\Extensions\Database\Operation\Exception.php	/^class PHPUnit_Extensions_Database_Operation_Exception extends RuntimeException$/;"	c
PHPUnit_Extensions_Database_Operation_Factory	D:\www\lib\phpunit\Extensions\Database\Operation\Factory.php	/^class PHPUnit_Extensions_Database_Operation_Factory$/;"	c
PHPUnit_Extensions_Database_Operation_IDatabaseOperation	D:\www\lib\phpunit\Extensions\Database\Operation\IDatabaseOperation.php	/^interface PHPUnit_Extensions_Database_Operation_IDatabaseOperation$/;"	i
PHPUnit_Extensions_Database_Operation_Insert	D:\www\lib\phpunit\Extensions\Database\Operation\Insert.php	/^class PHPUnit_Extensions_Database_Operation_Insert extends PHPUnit_Extensions_Database_Operation_RowBased$/;"	c
PHPUnit_Extensions_Database_Operation_Null	D:\www\lib\phpunit\Extensions\Database\Operation\Null.php	/^class PHPUnit_Extensions_Database_Operation_Null implements PHPUnit_Extensions_Database_Operation_IDatabaseOperation$/;"	c
PHPUnit_Extensions_Database_Operation_Replace	D:\www\lib\phpunit\Extensions\Database\Operation\Replace.php	/^class PHPUnit_Extensions_Database_Operation_Replace extends PHPUnit_Extensions_Database_Operation_RowBased$/;"	c
PHPUnit_Extensions_Database_Operation_RowBased	D:\www\lib\phpunit\Extensions\Database\Operation\RowBased.php	/^abstract class PHPUnit_Extensions_Database_Operation_RowBased implements PHPUnit_Extensions_Database_Operation_IDatabaseOperation$/;"	c
PHPUnit_Extensions_Database_Operation_Truncate	D:\www\lib\phpunit\Extensions\Database\Operation\Truncate.php	/^class PHPUnit_Extensions_Database_Operation_Truncate implements PHPUnit_Extensions_Database_Operation_IDatabaseOperation$/;"	c
PHPUnit_Extensions_Database_Operation_Update	D:\www\lib\phpunit\Extensions\Database\Operation\Update.php	/^class PHPUnit_Extensions_Database_Operation_Update extends PHPUnit_Extensions_Database_Operation_RowBased$/;"	c
PHPUnit_Extensions_Database_TestCase	D:\www\lib\phpunit\Extensions\Database\TestCase.php	/^abstract class PHPUnit_Extensions_Database_TestCase extends PHPUnit_Framework_TestCase$/;"	c
PHPUnit_Extensions_ExceptionTestCase	D:\www\lib\phpunit\Extensions\ExceptionTestCase.php	/^abstract class PHPUnit_Extensions_ExceptionTestCase extends PHPUnit_Framework_TestCase$/;"	c
PHPUnit_Extensions_OutputTestCase	D:\www\lib\phpunit\Extensions\OutputTestCase.php	/^abstract class PHPUnit_Extensions_OutputTestCase extends PHPUnit_Framework_TestCase$/;"	c
PHPUnit_Extensions_PerformanceTestCase	D:\www\lib\phpunit\Extensions\PerformanceTestCase.php	/^abstract class PHPUnit_Extensions_PerformanceTestCase extends PHPUnit_Framework_TestCase$/;"	c
PHPUnit_Extensions_PhptTestCase	D:\www\lib\phpunit\Extensions\PhptTestCase.php	/^class PHPUnit_Extensions_PhptTestCase implements PHPUnit_Framework_Test$/;"	c
PHPUnit_Extensions_PhptTestCase_Logger	D:\www\lib\phpunit\Extensions\PhptTestCase\Logger.php	/^class PHPUnit_Extensions_PhptTestCase_Logger$/;"	c
PHPUnit_Extensions_PhptTestSuite	D:\www\lib\phpunit\Extensions\PhptTestSuite.php	/^class PHPUnit_Extensions_PhptTestSuite extends PHPUnit_Framework_TestSuite$/;"	c
PHPUnit_Extensions_RepeatedTest	D:\www\lib\phpunit\Extensions\RepeatedTest.php	/^class PHPUnit_Extensions_RepeatedTest extends PHPUnit_Extensions_TestDecorator$/;"	c
PHPUnit_Extensions_SeleniumTestCase	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^abstract class PHPUnit_Extensions_SeleniumTestCase extends PHPUnit_Framework_TestCase$/;"	c
PHPUnit_Extensions_TestDecorator	D:\www\lib\phpunit\Extensions\TestDecorator.php	/^class PHPUnit_Extensions_TestDecorator extends PHPUnit_Framework_Assert implements PHPUnit_Framework_Test, PHPUnit_Framework_SelfDescribing$/;"	c
PHPUnit_Extensions_TestSetup	D:\www\lib\phpunit\Extensions\TestSetup.php	/^class PHPUnit_Extensions_TestSetup extends PHPUnit_Extensions_TestDecorator$/;"	c
PHPUnit_Framework_Assert	D:\www\lib\phpunit\Framework\Assert.php	/^abstract class PHPUnit_Framework_Assert$/;"	c
PHPUnit_Framework_AssertionFailedError	D:\www\lib\phpunit\Framework\AssertionFailedError.php	/^class PHPUnit_Framework_AssertionFailedError extends Exception implements PHPUnit_Framework_SelfDescribing$/;"	c
PHPUnit_Framework_ComparisonFailure	D:\www\lib\phpunit\Framework\ComparisonFailure.php	/^abstract class PHPUnit_Framework_ComparisonFailure extends PHPUnit_Framework_AssertionFailedError$/;"	c
PHPUnit_Framework_ComparisonFailure_Array	D:\www\lib\phpunit\Framework\ComparisonFailure\Array.php	/^class PHPUnit_Framework_ComparisonFailure_Array extends PHPUnit_Framework_ComparisonFailure$/;"	c
PHPUnit_Framework_ComparisonFailure_Object	D:\www\lib\phpunit\Framework\ComparisonFailure\Object.php	/^class PHPUnit_Framework_ComparisonFailure_Object extends PHPUnit_Framework_ComparisonFailure$/;"	c
PHPUnit_Framework_ComparisonFailure_Scalar	D:\www\lib\phpunit\Framework\ComparisonFailure\Scalar.php	/^class PHPUnit_Framework_ComparisonFailure_Scalar extends PHPUnit_Framework_ComparisonFailure$/;"	c
PHPUnit_Framework_ComparisonFailure_String	D:\www\lib\phpunit\Framework\ComparisonFailure\String.php	/^class PHPUnit_Framework_ComparisonFailure_String extends PHPUnit_Framework_ComparisonFailure$/;"	c
PHPUnit_Framework_ComparisonFailure_Type	D:\www\lib\phpunit\Framework\ComparisonFailure\Type.php	/^class PHPUnit_Framework_ComparisonFailure_Type extends PHPUnit_Framework_ComparisonFailure$/;"	c
PHPUnit_Framework_Constraint	D:\www\lib\phpunit\Framework\Constraint.php	/^abstract class PHPUnit_Framework_Constraint implements PHPUnit_Framework_SelfDescribing$/;"	c
PHPUnit_Framework_Constraint_And	D:\www\lib\phpunit\Framework\Constraint\And.php	/^class PHPUnit_Framework_Constraint_And extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_ArrayHasKey	D:\www\lib\phpunit\Framework\Constraint\ArrayHasKey.php	/^class PHPUnit_Framework_Constraint_ArrayHasKey extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_Attribute	D:\www\lib\phpunit\Framework\Constraint\Attribute.php	/^class PHPUnit_Framework_Constraint_Attribute extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_ClassHasAttribute	D:\www\lib\phpunit\Framework\Constraint\ClassHasAttribute.php	/^class PHPUnit_Framework_Constraint_ClassHasAttribute extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_ClassHasStaticAttribute	D:\www\lib\phpunit\Framework\Constraint\ClassHasStaticAttribute.php	/^class PHPUnit_Framework_Constraint_ClassHasStaticAttribute extends PHPUnit_Framework_Constraint_ClassHasAttribute$/;"	c
PHPUnit_Framework_Constraint_FileExists	D:\www\lib\phpunit\Framework\Constraint\FileExists.php	/^class PHPUnit_Framework_Constraint_FileExists extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_GreaterThan	D:\www\lib\phpunit\Framework\Constraint\GreaterThan.php	/^class PHPUnit_Framework_Constraint_GreaterThan extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_IsAnything	D:\www\lib\phpunit\Framework\Constraint\IsAnything.php	/^class PHPUnit_Framework_Constraint_IsAnything extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_IsEqual	D:\www\lib\phpunit\Framework\Constraint\IsEqual.php	/^class PHPUnit_Framework_Constraint_IsEqual extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_IsIdentical	D:\www\lib\phpunit\Framework\Constraint\IsIdentical.php	/^class PHPUnit_Framework_Constraint_IsIdentical extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_IsInstanceOf	D:\www\lib\phpunit\Framework\Constraint\IsInstanceOf.php	/^class PHPUnit_Framework_Constraint_IsInstanceOf extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_IsType	D:\www\lib\phpunit\Framework\Constraint\IsType.php	/^class PHPUnit_Framework_Constraint_IsType extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_LessThan	D:\www\lib\phpunit\Framework\Constraint\LessThan.php	/^class PHPUnit_Framework_Constraint_LessThan extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_Not	D:\www\lib\phpunit\Framework\Constraint\Not.php	/^class PHPUnit_Framework_Constraint_Not extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_ObjectHasAttribute	D:\www\lib\phpunit\Framework\Constraint\ObjectHasAttribute.php	/^class PHPUnit_Framework_Constraint_ObjectHasAttribute extends PHPUnit_Framework_Constraint_ClassHasAttribute$/;"	c
PHPUnit_Framework_Constraint_Or	D:\www\lib\phpunit\Framework\Constraint\Or.php	/^class PHPUnit_Framework_Constraint_Or extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_PCREMatch	D:\www\lib\phpunit\Framework\Constraint\PCREMatch.php	/^class PHPUnit_Framework_Constraint_PCREMatch extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_StringContains	D:\www\lib\phpunit\Framework\Constraint\StringContains.php	/^class PHPUnit_Framework_Constraint_StringContains extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_TraversableContains	D:\www\lib\phpunit\Framework\Constraint\TraversableContains.php	/^class PHPUnit_Framework_Constraint_TraversableContains extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_TraversableContainsOnly	D:\www\lib\phpunit\Framework\Constraint\TraversableContainsOnly.php	/^class PHPUnit_Framework_Constraint_TraversableContainsOnly extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Constraint_Xor	D:\www\lib\phpunit\Framework\Constraint\Xor.php	/^class PHPUnit_Framework_Constraint_Xor extends PHPUnit_Framework_Constraint$/;"	c
PHPUnit_Framework_Error	D:\www\lib\phpunit\Framework\Error.php	/^class PHPUnit_Framework_Error extends Exception$/;"	c
PHPUnit_Framework_ExpectationFailedException	D:\www\lib\phpunit\Framework\ExpectationFailedException.php	/^class PHPUnit_Framework_ExpectationFailedException extends PHPUnit_Framework_AssertionFailedError$/;"	c
PHPUnit_Framework_IncompleteTest	D:\www\lib\phpunit\Framework\IncompleteTest.php	/^interface PHPUnit_Framework_IncompleteTest$/;"	i
PHPUnit_Framework_IncompleteTestError	D:\www\lib\phpunit\Framework\IncompleteTestError.php	/^class PHPUnit_Framework_IncompleteTestError extends PHPUnit_Framework_AssertionFailedError implements PHPUnit_Framework_IncompleteTest$/;"	c
PHPUnit_Framework_MockObject_Builder_Identity	D:\www\lib\phpunit\Framework\MockObject\Builder\Identity.php	/^interface PHPUnit_Framework_MockObject_Builder_Identity$/;"	i
PHPUnit_Framework_MockObject_Builder_InvocationMocker	D:\www\lib\phpunit\Framework\MockObject\Builder\InvocationMocker.php	/^class PHPUnit_Framework_MockObject_Builder_InvocationMocker implements PHPUnit_Framework_MockObject_Builder_MethodNameMatch$/;"	c
PHPUnit_Framework_MockObject_Builder_Match	D:\www\lib\phpunit\Framework\MockObject\Builder\Match.php	/^interface PHPUnit_Framework_MockObject_Builder_Match extends PHPUnit_Framework_MockObject_Builder_Stub$/;"	i
PHPUnit_Framework_MockObject_Builder_MethodNameMatch	D:\www\lib\phpunit\Framework\MockObject\Builder\MethodNameMatch.php	/^interface PHPUnit_Framework_MockObject_Builder_MethodNameMatch extends PHPUnit_Framework_MockObject_Builder_ParametersMatch$/;"	i
PHPUnit_Framework_MockObject_Builder_Namespace	D:\www\lib\phpunit\Framework\MockObject\Builder\Namespace.php	/^interface PHPUnit_Framework_MockObject_Builder_Namespace$/;"	i
PHPUnit_Framework_MockObject_Builder_ParametersMatch	D:\www\lib\phpunit\Framework\MockObject\Builder\ParametersMatch.php	/^interface PHPUnit_Framework_MockObject_Builder_ParametersMatch extends PHPUnit_Framework_MockObject_Builder_Match$/;"	i
PHPUnit_Framework_MockObject_Builder_Stub	D:\www\lib\phpunit\Framework\MockObject\Builder\Stub.php	/^interface PHPUnit_Framework_MockObject_Builder_Stub extends PHPUnit_Framework_MockObject_Builder_Identity$/;"	i
PHPUnit_Framework_MockObject_Invocation	D:\www\lib\phpunit\Framework\MockObject\Invocation.php	/^class PHPUnit_Framework_MockObject_Invocation implements PHPUnit_Framework_SelfDescribing$/;"	c
PHPUnit_Framework_MockObject_InvocationMocker	D:\www\lib\phpunit\Framework\MockObject\InvocationMocker.php	/^class PHPUnit_Framework_MockObject_InvocationMocker implements PHPUnit_Framework_MockObject_Stub_MatcherCollection, PHPUnit_Framework_MockObject_Invokable, PHPUnit_Framework_MockObject_Builder_Namespace$/;"	c
PHPUnit_Framework_MockObject_Invokable	D:\www\lib\phpunit\Framework\MockObject\Invokable.php	/^interface PHPUnit_Framework_MockObject_Invokable extends PHPUnit_Framework_MockObject_Verifiable$/;"	i
PHPUnit_Framework_MockObject_Matcher	D:\www\lib\phpunit\Framework\MockObject\Matcher.php	/^class PHPUnit_Framework_MockObject_Matcher implements PHPUnit_Framework_MockObject_Matcher_Invocation$/;"	c
PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount	D:\www\lib\phpunit\Framework\MockObject\Matcher\AnyInvokedCount.php	/^class PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount extends PHPUnit_Framework_MockObject_Matcher_InvokedRecorder$/;"	c
PHPUnit_Framework_MockObject_Matcher_AnyParameters	D:\www\lib\phpunit\Framework\MockObject\Matcher\AnyParameters.php	/^class PHPUnit_Framework_MockObject_Matcher_AnyParameters extends PHPUnit_Framework_MockObject_Matcher_StatelessInvocation$/;"	c
PHPUnit_Framework_MockObject_Matcher_Invocation	D:\www\lib\phpunit\Framework\MockObject\Matcher\Invocation.php	/^interface PHPUnit_Framework_MockObject_Matcher_Invocation extends PHPUnit_Framework_SelfDescribing, PHPUnit_Framework_MockObject_Verifiable$/;"	i
PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex	D:\www\lib\phpunit\Framework\MockObject\Matcher\InvokedAtIndex.php	/^class PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex implements PHPUnit_Framework_MockObject_Matcher_Invocation$/;"	c
PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce	D:\www\lib\phpunit\Framework\MockObject\Matcher\InvokedAtLeastOnce.php	/^class PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce extends PHPUnit_Framework_MockObject_Matcher_InvokedRecorder$/;"	c
PHPUnit_Framework_MockObject_Matcher_InvokedCount	D:\www\lib\phpunit\Framework\MockObject\Matcher\InvokedCount.php	/^class PHPUnit_Framework_MockObject_Matcher_InvokedCount extends PHPUnit_Framework_MockObject_Matcher_InvokedRecorder$/;"	c
PHPUnit_Framework_MockObject_Matcher_InvokedRecorder	D:\www\lib\phpunit\Framework\MockObject\Matcher\InvokedRecorder.php	/^abstract class PHPUnit_Framework_MockObject_Matcher_InvokedRecorder implements PHPUnit_Framework_MockObject_Matcher_Invocation$/;"	c
PHPUnit_Framework_MockObject_Matcher_MethodName	D:\www\lib\phpunit\Framework\MockObject\Matcher\MethodName.php	/^class PHPUnit_Framework_MockObject_Matcher_MethodName extends PHPUnit_Framework_MockObject_Matcher_StatelessInvocation$/;"	c
PHPUnit_Framework_MockObject_Matcher_Parameters	D:\www\lib\phpunit\Framework\MockObject\Matcher\Parameters.php	/^class PHPUnit_Framework_MockObject_Matcher_Parameters extends PHPUnit_Framework_MockObject_Matcher_StatelessInvocation$/;"	c
PHPUnit_Framework_MockObject_Matcher_StatelessInvocation	D:\www\lib\phpunit\Framework\MockObject\Matcher\StatelessInvocation.php	/^abstract class PHPUnit_Framework_MockObject_Matcher_StatelessInvocation implements PHPUnit_Framework_MockObject_Matcher_Invocation$/;"	c
PHPUnit_Framework_MockObject_Mock	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^class PHPUnit_Framework_MockObject_Mock$/;"	c
PHPUnit_Framework_MockObject_MockObject	D:\www\lib\phpunit\Framework\MockObject\MockObject.php	/^interface PHPUnit_Framework_MockObject_MockObject extends PHPUnit_Framework_MockObject_Verifiable$/;"	i
PHPUnit_Framework_MockObject_Stub	D:\www\lib\phpunit\Framework\MockObject\Stub.php	/^interface PHPUnit_Framework_MockObject_Stub extends PHPUnit_Framework_SelfDescribing$/;"	i
PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls	D:\www\lib\phpunit\Framework\MockObject\Stub\ConsecutiveCalls.php	/^class PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls implements PHPUnit_Framework_MockObject_Stub$/;"	c
PHPUnit_Framework_MockObject_Stub_Exception	D:\www\lib\phpunit\Framework\MockObject\Stub\Exception.php	/^class PHPUnit_Framework_MockObject_Stub_Exception implements PHPUnit_Framework_MockObject_Stub$/;"	c
PHPUnit_Framework_MockObject_Stub_MatcherCollection	D:\www\lib\phpunit\Framework\MockObject\Stub\MatcherCollection.php	/^interface PHPUnit_Framework_MockObject_Stub_MatcherCollection$/;"	i
PHPUnit_Framework_MockObject_Stub_Return	D:\www\lib\phpunit\Framework\MockObject\Stub\Return.php	/^class PHPUnit_Framework_MockObject_Stub_Return implements PHPUnit_Framework_MockObject_Stub$/;"	c
PHPUnit_Framework_MockObject_Verifiable	D:\www\lib\phpunit\Framework\MockObject\Verifiable.php	/^interface PHPUnit_Framework_MockObject_Verifiable$/;"	i
PHPUnit_Framework_Notice	D:\www\lib\phpunit\Framework\Notice.php	/^class PHPUnit_Framework_Notice extends PHPUnit_Framework_Error$/;"	c
PHPUnit_Framework_SelfDescribing	D:\www\lib\phpunit\Framework\SelfDescribing.php	/^interface PHPUnit_Framework_SelfDescribing$/;"	i
PHPUnit_Framework_SkippedTest	D:\www\lib\phpunit\Framework\SkippedTest.php	/^interface PHPUnit_Framework_SkippedTest$/;"	i
PHPUnit_Framework_SkippedTestError	D:\www\lib\phpunit\Framework\SkippedTestError.php	/^class PHPUnit_Framework_SkippedTestError extends PHPUnit_Framework_AssertionFailedError implements PHPUnit_Framework_SkippedTest$/;"	c
PHPUnit_Framework_SkippedTestSuiteError	D:\www\lib\phpunit\Framework\SkippedTestSuiteError.php	/^class PHPUnit_Framework_SkippedTestSuiteError extends PHPUnit_Framework_AssertionFailedError implements PHPUnit_Framework_SkippedTest$/;"	c
PHPUnit_Framework_Test	D:\www\lib\phpunit\Framework\Test.php	/^interface PHPUnit_Framework_Test extends Countable$/;"	i
PHPUnit_Framework_TestCase	D:\www\lib\phpunit\Framework\TestCase.php	/^abstract class PHPUnit_Framework_TestCase extends PHPUnit_Framework_Assert implements PHPUnit_Framework_Test, PHPUnit_Framework_SelfDescribing$/;"	c
PHPUnit_Framework_TestFailure	D:\www\lib\phpunit\Framework\TestFailure.php	/^class PHPUnit_Framework_TestFailure$/;"	c
PHPUnit_Framework_TestListener	D:\www\lib\phpunit\Framework\TestListener.php	/^interface PHPUnit_Framework_TestListener$/;"	i
PHPUnit_Framework_TestResult	D:\www\lib\phpunit\Framework\TestResult.php	/^class PHPUnit_Framework_TestResult implements Countable$/;"	c
PHPUnit_Framework_TestSuite	D:\www\lib\phpunit\Framework\TestSuite.php	/^class PHPUnit_Framework_TestSuite implements PHPUnit_Framework_Test, PHPUnit_Framework_SelfDescribing, IteratorAggregate$/;"	c
PHPUnit_Framework_Warning	D:\www\lib\phpunit\Framework\Warning.php	/^class PHPUnit_Framework_Warning extends PHPUnit_Framework_TestCase$/;"	c
PHPUnit_MAIN_METHOD	D:\www\lib\phpunit\TextUI\Command.php	/^define('PHPUnit_MAIN_METHOD', 'PHPUnit_TextUI_Command::main');$/;"	d
PHPUnit_Runner_BaseTestRunner	D:\www\lib\phpunit\Runner\BaseTestRunner.php	/^abstract class PHPUnit_Runner_BaseTestRunner implements PHPUnit_Framework_TestListener$/;"	c
PHPUnit_Runner_IncludePathTestCollector	D:\www\lib\phpunit\Runner\IncludePathTestCollector.php	/^class PHPUnit_Runner_IncludePathTestCollector implements PHPUnit_Runner_TestCollector$/;"	c
PHPUnit_Runner_StandardTestSuiteLoader	D:\www\lib\phpunit\Runner\StandardTestSuiteLoader.php	/^class PHPUnit_Runner_StandardTestSuiteLoader implements PHPUnit_Runner_TestSuiteLoader$/;"	c
PHPUnit_Runner_TestCollector	D:\www\lib\phpunit\Runner\TestCollector.php	/^interface PHPUnit_Runner_TestCollector$/;"	i
PHPUnit_Runner_TestSuiteLoader	D:\www\lib\phpunit\Runner\TestSuiteLoader.php	/^interface PHPUnit_Runner_TestSuiteLoader$/;"	i
PHPUnit_Runner_Version	D:\www\lib\phpunit\Runner\Version.php	/^class PHPUnit_Runner_Version$/;"	c
PHPUnit_TextUI_Command	D:\www\lib\phpunit\TextUI\Command.php	/^class PHPUnit_TextUI_Command$/;"	c
PHPUnit_TextUI_ResultPrinter	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^class PHPUnit_TextUI_ResultPrinter extends PHPUnit_Util_Printer implements PHPUnit_Framework_TestListener$/;"	c
PHPUnit_TextUI_TestRunner	D:\www\lib\phpunit\TextUI\TestRunner.php	/^class PHPUnit_TextUI_TestRunner extends PHPUnit_Runner_BaseTestRunner$/;"	c
PHPUnit_Util_Class	D:\www\lib\phpunit\Util\Class.php	/^class PHPUnit_Util_Class$/;"	c
PHPUnit_Util_CodeCoverage	D:\www\lib\phpunit\Util\CodeCoverage.php	/^abstract class PHPUnit_Util_CodeCoverage$/;"	c
PHPUnit_Util_Configuration	D:\www\lib\phpunit\Util\Configuration.php	/^class PHPUnit_Util_Configuration$/;"	c
PHPUnit_Util_ErrorHandler	D:\www\lib\phpunit\Util\ErrorHandler.php	/^function PHPUnit_Util_ErrorHandler($errno, $errstr, $errfile, $errline)$/;"	f
PHPUnit_Util_Fileloader	D:\www\lib\phpunit\Util\Fileloader.php	/^class PHPUnit_Util_Fileloader$/;"	c
PHPUnit_Util_Filesystem	D:\www\lib\phpunit\Util\Filesystem.php	/^class PHPUnit_Util_Filesystem$/;"	c
PHPUnit_Util_Filter	D:\www\lib\phpunit\Util\Filter.php	/^class PHPUnit_Util_Filter$/;"	c
PHPUnit_Util_FilterIterator	D:\www\lib\phpunit\Util\FilterIterator.php	/^class PHPUnit_Util_FilterIterator extends FilterIterator$/;"	c
PHPUnit_Util_Getopt	D:\www\lib\phpunit\Util\Getopt.php	/^class PHPUnit_Util_Getopt {$/;"	c
PHPUnit_Util_Log_CPD	D:\www\lib\phpunit\Util\Log\CPD.php	/^class PHPUnit_Util_Log_CPD extends PHPUnit_Util_Printer$/;"	c
PHPUnit_Util_Log_CodeCoverage_Database	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^class PHPUnit_Util_Log_CodeCoverage_Database$/;"	c
PHPUnit_Util_Log_CodeCoverage_XML	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^class PHPUnit_Util_Log_CodeCoverage_XML extends PHPUnit_Util_Printer$/;"	c
PHPUnit_Util_Log_Database	D:\www\lib\phpunit\Util\Log\Database.php	/^class PHPUnit_Util_Log_Database implements PHPUnit_Framework_TestListener$/;"	c
PHPUnit_Util_Log_GraphViz	D:\www\lib\phpunit\Util\Log\GraphViz.php	/^class PHPUnit_Util_Log_GraphViz extends PHPUnit_Util_Printer implements PHPUnit_Framework_TestListener$/;"	c
PHPUnit_Util_Log_JSON	D:\www\lib\phpunit\Util\Log\JSON.php	/^class PHPUnit_Util_Log_JSON extends PHPUnit_Util_Printer implements PHPUnit_Framework_TestListener$/;"	c
PHPUnit_Util_Log_Metrics	D:\www\lib\phpunit\Util\Log\Metrics.php	/^class PHPUnit_Util_Log_Metrics extends PHPUnit_Util_Printer$/;"	c
PHPUnit_Util_Log_PEAR	D:\www\lib\phpunit\Util\Log\PEAR.php	/^class PHPUnit_Util_Log_PEAR implements PHPUnit_Framework_TestListener$/;"	c
PHPUnit_Util_Log_PMD	D:\www\lib\phpunit\Util\Log\PMD.php	/^class PHPUnit_Util_Log_PMD extends PHPUnit_Util_Printer$/;"	c
PHPUnit_Util_Log_PMD_Rule	D:\www\lib\phpunit\Util\Log\PMD\Rule.php	/^abstract class PHPUnit_Util_Log_PMD_Rule$/;"	c
PHPUnit_Util_Log_PMD_Rule_Class	D:\www\lib\phpunit\Util\Log\PMD\Rule\Class.php	/^abstract class PHPUnit_Util_Log_PMD_Rule_Class extends PHPUnit_Util_Log_PMD_Rule$/;"	c
PHPUnit_Util_Log_PMD_Rule_Class_DepthOfInheritanceTree	D:\www\lib\phpunit\Util\Log\PMD\Rule\Class\DepthOfInheritanceTree.php	/^class PHPUnit_Util_Log_PMD_Rule_Class_DepthOfInheritanceTree extends PHPUnit_Util_Log_PMD_Rule_Class$/;"	c
PHPUnit_Util_Log_PMD_Rule_Class_EfferentCoupling	D:\www\lib\phpunit\Util\Log\PMD\Rule\Class\EfferentCoupling.php	/^class PHPUnit_Util_Log_PMD_Rule_Class_EfferentCoupling extends PHPUnit_Util_Log_PMD_Rule_Class$/;"	c
PHPUnit_Util_Log_PMD_Rule_Class_ExcessiveClassLength	D:\www\lib\phpunit\Util\Log\PMD\Rule\Class\ExcessiveClassLength.php	/^class PHPUnit_Util_Log_PMD_Rule_Class_ExcessiveClassLength extends PHPUnit_Util_Log_PMD_Rule_Class$/;"	c
PHPUnit_Util_Log_PMD_Rule_Class_ExcessivePublicCount	D:\www\lib\phpunit\Util\Log\PMD\Rule\Class\ExcessivePublicCount.php	/^class PHPUnit_Util_Log_PMD_Rule_Class_ExcessivePublicCount extends PHPUnit_Util_Log_PMD_Rule_Class$/;"	c
PHPUnit_Util_Log_PMD_Rule_Class_TooManyFields	D:\www\lib\phpunit\Util\Log\PMD\Rule\Class\TooManyFields.php	/^class PHPUnit_Util_Log_PMD_Rule_Class_TooManyFields extends PHPUnit_Util_Log_PMD_Rule_Class$/;"	c
PHPUnit_Util_Log_PMD_Rule_File	D:\www\lib\phpunit\Util\Log\PMD\Rule\File.php	/^abstract class PHPUnit_Util_Log_PMD_Rule_File extends PHPUnit_Util_Log_PMD_Rule$/;"	c
PHPUnit_Util_Log_PMD_Rule_Function	D:\www\lib\phpunit\Util\Log\PMD\Rule\Function.php	/^abstract class PHPUnit_Util_Log_PMD_Rule_Function extends PHPUnit_Util_Log_PMD_Rule$/;"	c
PHPUnit_Util_Log_PMD_Rule_Function_CRAP	D:\www\lib\phpunit\Util\Log\PMD\Rule\Function\CRAP.php	/^class PHPUnit_Util_Log_PMD_Rule_Function_CRAP extends PHPUnit_Util_Log_PMD_Rule_Function$/;"	c
PHPUnit_Util_Log_PMD_Rule_Function_CodeCoverage	D:\www\lib\phpunit\Util\Log\PMD\Rule\Function\CodeCoverage.php	/^class PHPUnit_Util_Log_PMD_Rule_Function_CodeCoverage extends PHPUnit_Util_Log_PMD_Rule_Function$/;"	c
PHPUnit_Util_Log_PMD_Rule_Function_CyclomaticComplexity	D:\www\lib\phpunit\Util\Log\PMD\Rule\Function\CyclomaticComplexity.php	/^class PHPUnit_Util_Log_PMD_Rule_Function_CyclomaticComplexity extends PHPUnit_Util_Log_PMD_Rule_Function$/;"	c
PHPUnit_Util_Log_PMD_Rule_Function_ExcessiveMethodLength	D:\www\lib\phpunit\Util\Log\PMD\Rule\Function\ExcessiveMethodLength.php	/^class PHPUnit_Util_Log_PMD_Rule_Function_ExcessiveMethodLength extends PHPUnit_Util_Log_PMD_Rule_Function$/;"	c
PHPUnit_Util_Log_PMD_Rule_Function_ExcessiveParameterList	D:\www\lib\phpunit\Util\Log\PMD\Rule\Function\ExcessiveParameterList.php	/^class PHPUnit_Util_Log_PMD_Rule_Function_ExcessiveParameterList extends PHPUnit_Util_Log_PMD_Rule_Function$/;"	c
PHPUnit_Util_Log_PMD_Rule_Function_NPathComplexity	D:\www\lib\phpunit\Util\Log\PMD\Rule\Function\NPathComplexity.php	/^class PHPUnit_Util_Log_PMD_Rule_Function_NPathComplexity extends PHPUnit_Util_Log_PMD_Rule_Function$/;"	c
PHPUnit_Util_Log_PMD_Rule_Project	D:\www\lib\phpunit\Util\Log\PMD\Rule\Project.php	/^abstract class PHPUnit_Util_Log_PMD_Rule_Project extends PHPUnit_Util_Log_PMD_Rule$/;"	c
PHPUnit_Util_Log_PMD_Rule_Project_CRAP	D:\www\lib\phpunit\Util\Log\PMD\Rule\Project\CRAP.php	/^class PHPUnit_Util_Log_PMD_Rule_Project_CRAP extends PHPUnit_Util_Log_PMD_Rule_Project$/;"	c
PHPUnit_Util_Log_TAP	D:\www\lib\phpunit\Util\Log\TAP.php	/^class PHPUnit_Util_Log_TAP extends PHPUnit_Util_Printer implements PHPUnit_Framework_TestListener$/;"	c
PHPUnit_Util_Log_XML	D:\www\lib\phpunit\Util\Log\XML.php	/^class PHPUnit_Util_Log_XML extends PHPUnit_Util_Printer implements PHPUnit_Framework_TestListener$/;"	c
PHPUnit_Util_Metrics	D:\www\lib\phpunit\Util\Metrics.php	/^abstract class PHPUnit_Util_Metrics$/;"	c
PHPUnit_Util_Metrics_Class	D:\www\lib\phpunit\Util\Metrics\Class.php	/^class PHPUnit_Util_Metrics_Class extends PHPUnit_Util_Metrics$/;"	c
PHPUnit_Util_Metrics_File	D:\www\lib\phpunit\Util\Metrics\File.php	/^class PHPUnit_Util_Metrics_File extends PHPUnit_Util_Metrics$/;"	c
PHPUnit_Util_Metrics_Function	D:\www\lib\phpunit\Util\Metrics\Function.php	/^class PHPUnit_Util_Metrics_Function extends PHPUnit_Util_Metrics$/;"	c
PHPUnit_Util_Metrics_Project	D:\www\lib\phpunit\Util\Metrics\Project.php	/^class PHPUnit_Util_Metrics_Project extends PHPUnit_Util_Metrics$/;"	c
PHPUnit_Util_PDO	D:\www\lib\phpunit\Util\PDO.php	/^class PHPUnit_Util_PDO$/;"	c
PHPUnit_Util_Printer	D:\www\lib\phpunit\Util\Printer.php	/^abstract class PHPUnit_Util_Printer$/;"	c
PHPUnit_Util_Report	D:\www\lib\phpunit\Util\Report.php	/^abstract class PHPUnit_Util_Report$/;"	c
PHPUnit_Util_Report_Node	D:\www\lib\phpunit\Util\Report\Node.php	/^abstract class PHPUnit_Util_Report_Node$/;"	c
PHPUnit_Util_Report_Node_Directory	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^class PHPUnit_Util_Report_Node_Directory extends PHPUnit_Util_Report_Node$/;"	c
PHPUnit_Util_Report_Node_File	D:\www\lib\phpunit\Util\Report\Node\File.php	/^class PHPUnit_Util_Report_Node_File extends PHPUnit_Util_Report_Node$/;"	c
PHPUnit_Util_Skeleton	D:\www\lib\phpunit\Util\Skeleton.php	/^class PHPUnit_Util_Skeleton$/;"	c
PHPUnit_Util_Template	D:\www\lib\phpunit\Util\Template.php	/^class PHPUnit_Util_Template$/;"	c
PHPUnit_Util_Test	D:\www\lib\phpunit\Util\Test.php	/^class PHPUnit_Util_Test$/;"	c
PHPUnit_Util_TestDox_NamePrettifier	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^class PHPUnit_Util_TestDox_NamePrettifier$/;"	c
PHPUnit_Util_TestDox_ResultPrinter	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^abstract class PHPUnit_Util_TestDox_ResultPrinter extends PHPUnit_Util_Printer implements PHPUnit_Framework_TestListener$/;"	c
PHPUnit_Util_TestDox_ResultPrinter_HTML	D:\www\lib\phpunit\Util\TestDox\ResultPrinter\HTML.php	/^class PHPUnit_Util_TestDox_ResultPrinter_HTML extends PHPUnit_Util_TestDox_ResultPrinter$/;"	c
PHPUnit_Util_TestDox_ResultPrinter_Text	D:\www\lib\phpunit\Util\TestDox\ResultPrinter\Text.php	/^class PHPUnit_Util_TestDox_ResultPrinter_Text extends PHPUnit_Util_TestDox_ResultPrinter$/;"	c
PHPUnit_Util_TestSuiteIterator	D:\www\lib\phpunit\Util\TestSuiteIterator.php	/^class PHPUnit_Util_TestSuiteIterator implements RecursiveIterator$/;"	c
PHPUnit_Util_Timer	D:\www\lib\phpunit\Util\Timer.php	/^class PHPUnit_Util_Timer$/;"	c
PHPUnit_Util_Type	D:\www\lib\phpunit\Util\Type.php	/^class PHPUnit_Util_Type$/;"	c
PHPUnit_Util_XML	D:\www\lib\phpunit\Util\XML.php	/^class PHPUnit_Util_XML$/;"	c
ParentClassWithPrivateAttributes	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^class ParentClassWithPrivateAttributes$/;"	c
Runner_AllTests	D:\www\lib\phpunit\Tests\Runner\AllTests.php	/^class Runner_AllTests$/;"	c
Runner_BaseTestRunnerTest	D:\www\lib\phpunit\Tests\Runner\BaseTestRunnerTest.php	/^class Runner_BaseTestRunnerTest extends PHPUnit_Framework_TestCase$/;"	c
SHALL	D:\www\lib\phpunit\Util\Log\Database\MySQL.sql	/^# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE$/;"	e
SampleClass	D:\www\lib\phpunit\Tests\_files\SampleClass.php	/^class SampleClass$/;"	c
_className	D:\www\lib\phpunit\Util\Metrics\Class.php	/^            foreach ($dependencies as $_className => $_dependencies) {$/;"	v
_dataName	D:\www\lib\phpunit\Framework\TestSuite.php	/^                    foreach ($data as $_dataName => $_data) {$/;"	v
_file	D:\www\lib\phpunit\Util\CodeCoverage.php	/^                foreach ($test['files'] as $_file => $lines) {$/;"	v
_files	D:\www\lib\phpunit\Util\CodeCoverage.php	/^            $_files = array_keys($test['files']);$/;"	v
_group	D:\www\lib\phpunit\Framework\TestSuite.php	/^            foreach ($this->groups as $_group => $_tests) {$/;"	v
_line	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^            foreach ($lines as $_line => $_data) {$/;"	v
_method	D:\www\lib\phpunit\Util\Test.php	/^                        $_method   = new ReflectionMethod($className, $methodName);$/;"	v
_paths	D:\www\lib\phpunit\Util\Filesystem.php	/^        $_paths = array();$/;"	v
_test	D:\www\lib\phpunit\Framework\TestSuite.php	/^                        $_test = new $className($name, $_data, $_dataName);$/;"	v
a	D:\www\lib\phpunit\Util\Metrics\Project.php	/^        foreach ($this->classes as $a => $b) {$/;"	v
a1	D:\www\lib\phpunit\Util\Type.php	/^            $a1 = array_slice($value, 0, 1, TRUE);$/;"	v
a2	D:\www\lib\phpunit\Util\Type.php	/^            $a2 = FALSE;$/;"	v
aTestRunner	D:\www\lib\phpunit\TextUI\TestRunner.php	/^        $aTestRunner = new PHPUnit_TextUI_TestRunner;$/;"	v
accept	D:\www\lib\phpunit\Util\FilterIterator.php	/^    public function accept()$/;"	f
accountNumber	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccount.php	/^    protected $accountNumber = 0;$/;"	v
action	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^            $action    = NULL;$/;"	v
actual	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^        $actual = new DOMDocument;$/;"	v
actualAttribute	D:\www\lib\phpunit\Framework\ComparisonFailure\Object.php	/^                $actualAttribute = $actualReflection->getProperty($expectedAttribute->getName());$/;"	v
actualClass	D:\www\lib\phpunit\Framework\ComparisonFailure\Object.php	/^        $actualClass   = get_class($this->actual);$/;"	v
actualFile	D:\www\lib\phpunit\Framework\ComparisonFailure.php	/^        $actualFile = tempnam('\/tmp', 'actual');$/;"	v
actualKey	D:\www\lib\phpunit\Framework\ComparisonFailure\Array.php	/^        foreach($this->actual as $actualKey => $actualValue) {$/;"	v
actualLen	D:\www\lib\phpunit\Framework\ComparisonFailure\String.php	/^        $actualLen   = strlen($actual);$/;"	v
actualOnly	D:\www\lib\phpunit\Framework\ComparisonFailure\Array.php	/^        $actualOnly   = array();$/;"	v
actualReflection	D:\www\lib\phpunit\Framework\ComparisonFailure\Object.php	/^            $actualReflection   = new ReflectionClass($actualClass);$/;"	v
actualString	D:\www\lib\phpunit\Framework\ComparisonFailure\Scalar.php	/^            $actualString     = str_pad($actualString, $maxLen, ' ', STR_PAD_LEFT);$/;"	v
actualType	D:\www\lib\phpunit\Framework\ComparisonFailure\Object.php	/^                    $actualType   = gettype($actualValue);$/;"	v
actualValue	D:\www\lib\phpunit\Framework\ComparisonFailure\Object.php	/^                $actualValue    = $actualAttribute->getValue($this->actual);$/;"	v
addDirectory	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^    public function addDirectory($name)$/;"	f
addDirectoryToFilter	D:\www\lib\phpunit\Util\Filter.php	/^    public static function addDirectoryToFilter($directory, $suffix = '.php', $group = 'DEFAULT')$/;"	f
addDirectoryToWhitelist	D:\www\lib\phpunit\Util\Filter.php	/^    public static function addDirectoryToWhitelist($directory, $suffix = '.php')$/;"	f
assertAlertPresent	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertAlertPresent($message = 'No alert present.')$/;"	f
assertAnnotationFound	D:\www\lib\phpunit\Util\Skeleton.php	/^                $assertAnnotationFound = FALSE;$/;"	v
assertArrayHasKey	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertArrayHasKey($key, array $array, $message = '')$/;"	f
assertArrayNotHasKey	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertArrayNotHasKey($key, array $array, $message = '')$/;"	f
assertAttributeContains	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertAttributeContains($needle, $haystackAttributeName, $haystackClassOrObject, $message = '')$/;"	f
assertAttributeContainsOnly	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertAttributeContainsOnly($type, $haystackAttributeName, $haystackClassOrObject, $isNativeType = NULL, $message = '')$/;"	f
assertAttributeEquals	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertAttributeEquals($expected, $actualAttributeName, $actualClassOrObject, $message = '', $delta = 0, $maxDepth = 10)$/;"	f
assertAttributeGreaterThan	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertAttributeGreaterThan($expected, $actualAttributeName, $actualClassOrObject, $message = '')$/;"	f
assertAttributeGreaterThanOrEqual	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertAttributeGreaterThanOrEqual($expected, $actualAttributeName, $actualClassOrObject, $message = '')$/;"	f
assertAttributeLessThan	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertAttributeLessThan($expected, $actualAttributeName, $actualClassOrObject, $message = '')$/;"	f
assertAttributeLessThanOrEqual	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertAttributeLessThanOrEqual($expected, $actualAttributeName, $actualClassOrObject, $message = '')$/;"	f
assertAttributeNotContains	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertAttributeNotContains($needle, $haystackAttributeName, $haystackClassOrObject, $message = '')$/;"	f
assertAttributeNotContainsOnly	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertAttributeNotContainsOnly($type, $haystackAttributeName, $haystackClassOrObject, $isNativeType = NULL, $message = '')$/;"	f
assertAttributeNotEquals	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertAttributeNotEquals($expected, $actualAttributeName, $actualClassOrObject, $message = '', $delta = 0, $maxDepth = 10)$/;"	f
assertAttributeNotSame	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertAttributeNotSame($expected, $actualAttributeName, $actualClassOrObject, $message = '')$/;"	f
assertAttributeSame	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertAttributeSame($expected, $actualAttributeName, $actualClassOrObject, $message = '')$/;"	f
assertChecked	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertChecked($locator, $message = '')$/;"	f
assertClassHasAttribute	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertClassHasAttribute($attributeName, $className, $message = '')$/;"	f
assertClassHasStaticAttribute	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertClassHasStaticAttribute($attributeName, $className, $message = '')$/;"	f
assertClassNotHasAttribute	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertClassNotHasAttribute($attributeName, $className, $message = '')$/;"	f
assertClassNotHasStaticAttribute	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertClassNotHasStaticAttribute($attributeName, $className, $message = '')$/;"	f
assertConfirmationPresent	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertConfirmationPresent($message = 'No confirmation present.')$/;"	f
assertContains	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertContains($needle, $haystack, $message = '')$/;"	f
assertContainsOnly	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertContainsOnly($type, $haystack, $isNativeType = NULL, $message = '')$/;"	f
assertDataSetsEqual	D:\www\lib\phpunit\Extensions\Database\TestCase.php	/^    public static function assertDataSetsEqual(PHPUnit_Extensions_Database_DataSet_IDataSet $expected, PHPUnit_Extensions_Database_DataSet_IDataSet $actual, $message = '')$/;"	f
assertEditable	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertEditable($locator, $message = '')$/;"	f
assertElementContainsText	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertElementContainsText($locator, $text, $message = '')$/;"	f
assertElementNotContainsText	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertElementNotContainsText($locator, $text, $message = '')$/;"	f
assertElementNotPresent	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertElementNotPresent($locator, $message = '')$/;"	f
assertElementPresent	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertElementPresent($locator, $message = '')$/;"	f
assertElementValueEquals	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertElementValueEquals($locator, $text, $message = '')$/;"	f
assertElementValueNotEquals	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertElementValueNotEquals($locator, $text, $message = '')$/;"	f
assertFalse	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertFalse($condition, $message = '')$/;"	f
assertFileExists	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertFileExists($filename, $message = '')$/;"	f
assertFileNotExists	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertFileNotExists($filename, $message = '')$/;"	f
assertGreaterThan	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertGreaterThan($expected, $actual, $message = '')$/;"	f
assertGreaterThanOrEqual	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertGreaterThanOrEqual($expected, $actual, $message = '')$/;"	f
assertIsNotSelected	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertIsNotSelected($selectLocator, $value, $message = '')$/;"	f
assertIsSelected	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertIsSelected($selectLocator, $value, $message = '')$/;"	f
assertLessThan	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertLessThan($expected, $actual, $message = '')$/;"	f
assertLessThanOrEqual	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertLessThanOrEqual($expected, $actual, $message = '')$/;"	f
assertLocationEquals	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertLocationEquals($location, $message = '')$/;"	f
assertLocationNotEquals	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertLocationNotEquals($location, $message = '')$/;"	f
assertNoAlertPresent	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertNoAlertPresent($message = 'Alert present.')$/;"	f
assertNoConfirmationPresent	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertNoConfirmationPresent($message = 'Confirmation present.')$/;"	f
assertNoPromptPresent	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertNoPromptPresent($message = 'Prompt present.')$/;"	f
assertNotChecked	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertNotChecked($locator, $message = '')$/;"	f
assertNotContains	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertNotContains($needle, $haystack, $message = '')$/;"	f
assertNotContainsOnly	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertNotContainsOnly($type, $haystack, $isNativeType = NULL, $message = '')$/;"	f
assertNotEditable	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertNotEditable($locator, $message = '')    $/;"	f
assertNotEquals	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertNotEquals($expected, $actual, $message = '', $delta = 0, $maxDepth = 10)$/;"	f
assertNotNull	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertNotNull($actual, $message = '')$/;"	f
assertNotRegExp	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertNotRegExp($pattern, $string, $message = '')$/;"	f
assertNotSame	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertNotSame($expected, $actual, $message = '')$/;"	f
assertNotSelected	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertNotSelected($selectLocator, $option, $message = '')$/;"	f
assertNotType	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertNotType($expected, $actual, $message = '')$/;"	f
assertNotVisible	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertNotVisible($locator, $message = '')$/;"	f
assertNothingSelected	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertNothingSelected($selectLocator, $message = '')$/;"	f
assertNull	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertNull($actual, $message = '')$/;"	f
assertObjectHasAttribute	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertObjectHasAttribute($attributeName, $object, $message = '')$/;"	f
assertObjectNotHasAttribute	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertObjectNotHasAttribute($attributeName, $object, $message = '')$/;"	f
assertPostConditions	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function assertPostConditions()$/;"	f
assertPreConditions	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function assertPreConditions()$/;"	f
assertPromptPresent	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertPromptPresent($message = 'No prompt present.')$/;"	f
assertRegExp	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertRegExp($pattern, $string, $message = '')$/;"	f
assertSame	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertSame($expected, $actual, $message = '')$/;"	f
assertSelectHasOption	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertSelectHasOption($selectLocator, $option, $message = '')$/;"	f
assertSelectNotHasOption	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertSelectNotHasOption($selectLocator, $option, $message = '')$/;"	f
assertSelected	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertSelected($selectLocator, $option, $message = '')$/;"	f
assertSomethingSelected	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertSomethingSelected($selectLocator, $message = '')$/;"	f
assertTablesEqual	D:\www\lib\phpunit\Extensions\Database\TestCase.php	/^    public static function assertTablesEqual(PHPUnit_Extensions_Database_DataSet_ITable $expected, PHPUnit_Extensions_Database_DataSet_ITable $actual, $message = '')$/;"	f
assertTextNotPresent	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertTextNotPresent($pattern, $message = '')$/;"	f
assertTextPresent	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertTextPresent($pattern, $message = '')$/;"	f
assertThat	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertThat($value, PHPUnit_Framework_Constraint $constraint, $message = '')$/;"	f
assertTitleEquals	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertTitleEquals($title, $message = '')$/;"	f
assertTitleNotEquals	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertTitleNotEquals($title, $message = '')$/;"	f
assertTrue	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertTrue($condition, $message = '')$/;"	f
assertType	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertType($expected, $actual, $message = '')$/;"	f
assertVisible	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function assertVisible($locator, $message = '')$/;"	f
assertXmlFileEqualsXmlFile	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertXmlFileEqualsXmlFile($expectedFile, $actualFile, $message = '')$/;"	f
assertXmlFileNotEqualsXmlFile	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertXmlFileNotEqualsXmlFile($expectedFile, $actualFile, $message = '')$/;"	f
assertXmlStringEqualsXmlString	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertXmlStringEqualsXmlString($expectedXml, $actualXml, $message = '')$/;"	f
assertXmlStringNotEqualsXmlString	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function assertXmlStringNotEqualsXmlString($expectedXml, $actualXml, $message = '')$/;"	f
atLeastOnce	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function atLeastOnce()$/;"	f
attachCurrentTestCase	D:\www\lib\phpunit\Util\Log\XML.php	/^    protected $attachCurrentTestCase = TRUE;$/;"	v
attribute	D:\www\lib\phpunit\Framework\Constraint\ClassHasStaticAttribute.php	/^            $attribute = $class->getProperty($this->attributeName);$/;"	v
attributeEqualTo	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function attributeEqualTo($attributeName, $value, $delta = 0, $maxDepth = 10)$/;"	f
attributes	D:\www\lib\phpunit\Util\Metrics\Class.php	/^        $attributes          = 0;$/;"	v
autoStop	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    protected $autoStop = TRUE;$/;"	v
backupGlobals	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected $backupGlobals = TRUE;$/;"	v
bag1	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^        $bag1 = MoneyBag::create($this->f12EUR, $this->f7USD);$/;"	v
bag2	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^        $bag2 = new Money(12, 'CHF');$/;"	v
balance	D:\www\lib\phpunit\Samples\BankAccount\BankAccount.php	/^    protected $balance = 0;$/;"	v
bar	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    public $bar = 2;$/;"	v
base	D:\www\lib\phpunit\Extensions\PhptTestCase.php	/^        $base         = basename($this->filename);$/;"	v
basedir	D:\www\lib\phpunit\Util\Log\PMD.php	/^        $basedir = dirname(__FILE__) . DIRECTORY_SEPARATOR .$/;"	v
basicRun	D:\www\lib\phpunit\Extensions\TestDecorator.php	/^    public function basicRun(PHPUnit_Framework_TestResult $result)$/;"	f
binary	D:\www\lib\phpunit\Framework\ComparisonFailure.php	/^            $binary = 'diff';$/;"	v
blackListConverstionForWindowsDone	D:\www\lib\phpunit\Util\Filter.php	/^    protected static $blackListConverstionForWindowsDone = FALSE;$/;"	v
blacklistedFiles	D:\www\lib\phpunit\Util\Filter.php	/^    protected static $blacklistedFiles = array($/;"	v
browserSuite	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^                $browserSuite = new PHPUnit_Framework_TestSuite;$/;"	v
buildDirectoryStructure	D:\www\lib\phpunit\Util\Report.php	/^    protected static function buildDirectoryStructure($files)$/;"	f
buildPreparedColumnArray	D:\www\lib\phpunit\Extensions\Database\Operation\RowBased.php	/^    protected function buildPreparedColumnArray($columns, PHPUnit_Extensions_Database_DB_IDatabaseConnection $connection)$/;"	f
buildTableSelect	D:\www\lib\phpunit\Extensions\Database\DB\DataSet.php	/^    public static function buildTableSelect(PHPUnit_Extensions_Database_DataSet_ITableMetaData $tableMetaData)$/;"	f
builder	D:\www\lib\phpunit\Framework\MockObject\Matcher.php	/^            $builder = $invocation->object->getInvocationMocker()->lookupId($this->afterMatchBuilderId);$/;"	v
builderMap	D:\www\lib\phpunit\Framework\MockObject\InvocationMocker.php	/^    protected $builderMap = array();$/;"	v
c	D:\www\lib\phpunit\Util\Metrics\Project.php	/^            foreach ($this->classes as $c => $d) {$/;"	v
ca	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $ca            = 0;$/;"	v
cache	D:\www\lib\phpunit\Util\Report\Node.php	/^    protected $cache = array();$/;"	v
calculateAttributeMetrics	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected function calculateAttributeMetrics()$/;"	f
calculateCCN	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    protected function calculateCCN()$/;"	f
calculateCodeCoverage	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    protected function calculateCodeCoverage(&$codeCoverage)$/;"	f
calculateCrapIndex	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    protected function calculateCrapIndex()$/;"	f
calculateDependencies	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    protected function calculateDependencies()$/;"	f
calculateDependencyMetrics	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected function calculateDependencyMetrics()$/;"	f
calculateMethodMetrics	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected function calculateMethodMetrics()$/;"	f
calculateNPath	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    protected function calculateNPath()$/;"	f
calculateNumberOfChildren	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected function calculateNumberOfChildren()$/;"	f
calculatePercent	D:\www\lib\phpunit\Util\Report\Node.php	/^    protected function calculatePercent($a, $b)$/;"	f
calculatePolymorphismFactor	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected function calculatePolymorphismFactor()$/;"	f
calculateStatistics	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected function calculateStatistics()$/;"	f
callOriginalConstructor	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^            $callOriginalConstructor = FALSE;$/;"	v
calledClassesPercent	D:\www\lib\phpunit\Util\Report\Node\File.php	/^            $calledClassesPercent = $numCalledClasses == 1          ? 100 : 0;$/;"	v
calledMethodsPercent	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                $calledMethodsPercent = $numCalledMethods == 1           ? 100 : 0;$/;"	v
can	D:\www\lib\phpunit\Util\Log\PMD\Rule\Class\ExcessivePublicCount.php	/^              'declared in a class can indicate the class may need ' .$/;"	c
canMockMethod	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^    protected function canMockMethod(ReflectionMethod $method)$/;"	f
case	D:\www\lib\phpunit\Framework\Constraint\StringContains.php	/^    public function __construct($string, $case = TRUE)$/;"	v
category	D:\www\lib\phpunit\Framework\TestCase.php	/^        foreach ($this->locale as $category => $locale) {$/;"	v
ccn	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    protected $ccn           = 1;$/;"	v
ce	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $ce            = 0;$/;"	v
checkAndLoad	D:\www\lib\phpunit\Util\Fileloader.php	/^    public static function checkAndLoad($filename, $syntaxCheck = TRUE)$/;"	f
child	D:\www\lib\phpunit\Util\Report.php	/^                $child = $root->addDirectory($key);$/;"	v
children	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^    protected $children = array();$/;"	v
classAhf	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classAhf           = $classMetrics->getAHF();$/;"	v
classAif	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classAif           = $classMetrics->getAIF();$/;"	v
classCis	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classCis           = $classMetrics->getCIS();$/;"	v
classConditionals	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $classConditionals        = 0;$/;"	v
classCoverage	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classCoverage      = $classMetrics->getCoverage();$/;"	v
classCoveredConditionals	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $classCoveredConditionals = 0;$/;"	v
classCoveredMethods	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $classCoveredMethods      = 0;$/;"	v
classCoveredStatements	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $classCoveredStatements   = 0;$/;"	v
classCsz	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classCsz           = $classMetrics->getCSZ();$/;"	v
classDit	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classDit           = $classMetrics->getDIT();$/;"	v
classEndLine	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                $classEndLine   = $class->getEndLine();$/;"	v
classGroups	D:\www\lib\phpunit\Framework\TestSuite.php	/^        $classGroups = PHPUnit_Util_Test::getGroups($theClass);$/;"	v
classHasAttribute	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function classHasAttribute($attributeName)$/;"	f
classHasStaticAttribute	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function classHasStaticAttribute($attributeName)$/;"	f
classId	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classId       = (int)$stmtSelectClassId->fetchColumn();$/;"	v
classImpl	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classImpl          = $classMetrics->getIMPL();$/;"	v
classLoc	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classLoc           = $classMetrics->getLoc();$/;"	v
classLocExecutable	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classLocExecutable = $classMetrics->getLocExecutable();$/;"	v
classLocExecuted	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classLocExecuted   = $classMetrics->getLocExecuted();$/;"	v
classMetricsXML	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $classMetricsXML = $document->createElement('metrics');$/;"	v
classMhf	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classMhf           = $classMetrics->getMHF();$/;"	v
classMif	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classMif           = $classMetrics->getMIF();$/;"	v
className	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        foreach ($this->classes as $className => $classData) {$/;"	v
classNameParts	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^        $classNameParts = explode('::', $className);$/;"	v
classNoc	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classNoc           = $classMetrics->getNOC();$/;"	v
classPackage	D:\www\lib\phpunit\Util\Log\PMD.php	/^                    $classPackage   = $classMetrics->getPackage();$/;"	v
classPf	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classPf            = $classMetrics->getPF();$/;"	v
classSourceFile	D:\www\lib\phpunit\Util\Skeleton.php	/^    public function __construct($className, $classSourceFile = '')$/;"	v
classStartLine	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                $classStartLine = $class->getStartLine();$/;"	v
classStatements	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $classStatements          = 0;$/;"	v
classTemplate	D:\www\lib\phpunit\Util\Skeleton.php	/^        $classTemplate = new PHPUnit_Util_Template($/;"	v
classVars	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classVars          = $classMetrics->getVARS();$/;"	v
classVarsi	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classVarsi         = $classMetrics->getVARSi();$/;"	v
classVarsnp	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classVarsnp        = $classMetrics->getVARSnp();$/;"	v
classWmc	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classWmc           = $classMetrics->getWMC();$/;"	v
classWmci	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classWmci          = $classMetrics->getWMCi();$/;"	v
classWmcnp	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $classWmcnp         = $classMetrics->getWMCnp();$/;"	v
classXML	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $classXML = $document->createElement('class');$/;"	v
classes	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected $classes = array();$/;"	v
cleanId	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $cleanId = PHPUnit_Util_Filesystem::getSafeFilename($this->getId());$/;"	v
clear	D:\www\lib\phpunit\Util\CodeCoverage.php	/^    public static function getSummary(array &$data, $clear = FALSE)$/;"	v
clearStatus	D:\www\lib\phpunit\Runner\BaseTestRunner.php	/^    protected function clearStatus()$/;"	f
cloc	D:\www\lib\phpunit\Util\Metrics\File.php	/^    protected $cloc          = 0;$/;"	v
cloneCode	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^            $cloneCode = $this->generateCloneCodeWithParentCall();$/;"	v
cloneObject	D:\www\lib\phpunit\Framework\MockObject\Invocation.php	/^    protected function cloneObject($original)$/;"	f
close	D:\www\lib\phpunit\Extensions\Database\DB\IDatabaseConnection.php	/^    public function close();$/;"	f
closeConnection	D:\www\lib\phpunit\Extensions\Database\TestCase.php	/^    protected function closeConnection(PHPUnit_Extensions_Database_DB_IDatabaseConnection $connection)$/;"	f
cls	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected $cls     = 0;$/;"	v
clsa	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected $clsa    = 0;$/;"	v
clsc	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected $clsc    = 0;$/;"	v
code	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^        $code = 'class ';$/;"	v
codeCoverage	D:\www\lib\phpunit\Util\Log\PMD.php	/^        $codeCoverage = $result->getCodeCoverageInformation();$/;"	v
codeCoverageInformation	D:\www\lib\phpunit\Util\Report.php	/^        $codeCoverageInformation = $result->getCodeCoverageInformation();$/;"	v
codeLineId	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                    $codeLineId      = (int)$stmt->fetchColumn(0);$/;"	v
codeLinesFillup	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected $codeLinesFillup = array();$/;"	v
codefragment	D:\www\lib\phpunit\Util\Log\CPD.php	/^            $codefragment = $xmlDuplication->appendChild($/;"	v
collectCodeCoverageInformation	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function collectCodeCoverageInformation($flag)$/;"	f
collectEnd	D:\www\lib\phpunit\Util\Class.php	/^    public static function collectEnd()$/;"	f
collectEndAsFiles	D:\www\lib\phpunit\Util\Class.php	/^    public static function collectEndAsFiles()$/;"	f
collectStart	D:\www\lib\phpunit\Util\Class.php	/^    public static function collectStart()$/;"	f
collectTests	D:\www\lib\phpunit\Runner\TestCollector.php	/^    public function collectTests();$/;"	f
color	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                    $color = 'lineNoCov';$/;"	v
colour	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                            $colour = 'string';$/;"	v
column	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected $column = 0;$/;"	v
columnArray	D:\www\lib\phpunit\Extensions\Database\Operation\RowBased.php	/^        $columnArray = array();$/;"	v
columnList	D:\www\lib\phpunit\Extensions\Database\DB\DataSet.php	/^        $columnList = implode(', ', $tableMetaData->getColumns());$/;"	v
columnName	D:\www\lib\phpunit\Extensions\Database\DataSet\XmlDataSet.php	/^                $columnName = (string)$columnElement;$/;"	v
columnNames	D:\www\lib\phpunit\Extensions\Database\DataSet\DefaultTable.php	/^        $columnNames = $this->getTableMetaData()->getColumns();$/;"	v
columnQuery	D:\www\lib\phpunit\Extensions\Database\DB\MetaData\InformationSchema.php	/^        $columnQuery = "$/;"	v
columnStatement	D:\www\lib\phpunit\Extensions\Database\DB\MetaData\InformationSchema.php	/^        $columnStatement = $this->pdo->prepare($columnQuery);$/;"	v
columns	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^            $columns   = $xpath->query('td', $row);$/;"	v
common	D:\www\lib\phpunit\Util\Filesystem.php	/^        $common = '';$/;"	v
commonPath	D:\www\lib\phpunit\Util\Report.php	/^        $commonPath = '';$/;"	v
comparisonFailure	D:\www\lib\phpunit\Framework\TestFailure.php	/^                $comparisonFailure = $e->getComparisonFailure();$/;"	v
configuration	D:\www\lib\phpunit\Util\Log\PMD.php	/^    public function __construct($out = NULL, array $configuration = array())$/;"	v
connection	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\RowBasedTest.php	/^		$connection = $this->getConnection();$/;"	v
constraint	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^        $constraint = new PHPUnit_Framework_Constraint_TraversableContains('foo');$/;"	v
constraints	D:\www\lib\phpunit\Framework\Constraint\Xor.php	/^    protected $constraints = array();$/;"	v
constructor	D:\www\lib\phpunit\Framework\TestSuite.php	/^        $constructor = $theClass->getConstructor();$/;"	v
constructorCode	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^            $constructorCode = $this->generateConstructorCodeWithParentCall($class);$/;"	v
contains	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^    protected function contains(Money $m)$/;"	f
containsOnly	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function containsOnly($type)$/;"	f
copyFiles	D:\www\lib\phpunit\Util\Report.php	/^    protected static function copyFiles($target)$/;"	f
copyFixtureToTest	D:\www\lib\phpunit\Extensions\TestSetup.php	/^    private function copyFixtureToTest()$/;"	f
copyPasteDetection	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected function copyPasteDetection($minLines, $minMatches)$/;"	f
count	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                $count = '';$/;"	v
countLines	D:\www\lib\phpunit\Util\Metrics\File.php	/^    protected function countLines()$/;"	f
coverage	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    protected $coverage      = 0;$/;"	v
coverageFile	D:\www\lib\phpunit\Extensions\PhptTestCase.php	/^        $coverageFile = $path . DIRECTORY_SEPARATOR . str_replace('.phpt', '.xdebug', $base);$/;"	v
coverageScriptUrl	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    protected $coverageScriptUrl = '';$/;"	v
covered	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                    $covered = isset($summary[$file][$i]) ? 1 : 0;$/;"	v
coveredFiles	D:\www\lib\phpunit\Util\Filter.php	/^            $coveredFiles    = array();$/;"	v
coveringTests	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $coveringTests = PHPUnit_Util_CodeCoverage::getCoveringTests($/;"	v
cpd	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function __construct(Array $files, &$codeCoverage = array(), $cpd = FALSE, $cpdMinLines = 5, $cpdMinMatches = 70)$/;"	v
cpdDuplicates	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected $cpdDuplicates = array();$/;"	v
cpdHashes	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected $cpdHashes     = array();$/;"	v
crap	D:\www\lib\phpunit\Util\Log\PMD\Rule\Function\CRAP.php	/^        $crap = $metrics->getCrapIndex();$/;"	v
create	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^    public static function create(IMoney $m1, IMoney $m2)$/;"	f
createDataSet	D:\www\lib\phpunit\Extensions\Database\DB\IDatabaseConnection.php	/^    public function createDataSet(Array $tableNames = null);$/;"	f
createDefaultDBConnection	D:\www\lib\phpunit\Extensions\Database\TestCase.php	/^    protected function createDefaultDBConnection(PDO $connection, $schema)$/;"	f
createFlatXMLDataSet	D:\www\lib\phpunit\Extensions\Database\TestCase.php	/^    protected function createFlatXMLDataSet($xmlFile)$/;"	f
createIterator	D:\www\lib\phpunit\Extensions\Database\DataSet\DefaultDataSet.php	/^    protected function createIterator($reverse = false)$/;"	f
createMetaData	D:\www\lib\phpunit\Extensions\Database\DB\MetaData.php	/^    public static function createMetaData(PDO $pdo, $schema)$/;"	f
createQueryTable	D:\www\lib\phpunit\Extensions\Database\DB\IDatabaseConnection.php	/^    public function createQueryTable($resultName, $sql);$/;"	f
createResult	D:\www\lib\phpunit\Framework\TestSuite.php	/^    protected function createResult()$/;"	f
createTable	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccount.php	/^    static public function createTable(PDO $pdo)$/;"	f
createTables	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractXmlDataSet.php	/^    protected function createTables(Array &$tableColumns, Array &$tableValues)$/;"	f
createTest	D:\www\lib\phpunit\Framework\TestSuite.php	/^    public static function createTest(ReflectionClass $theClass, $name)$/;"	f
createTestResult	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    protected function createTestResult()$/;"	f
createXMLDataSet	D:\www\lib\phpunit\Extensions\Database\TestCase.php	/^    protected function createXMLDataSet($xmlFile)$/;"	f
css	D:\www\lib\phpunit\Util\Report\Node\File.php	/^            $css = '';$/;"	v
csv	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^        $csv     = $this->getString($command, $arguments);$/;"	v
currency	D:\www\lib\phpunit\Samples\Money\Money.php	/^    public function currency()$/;"	f
current	D:\www\lib\phpunit\Util\Timer.php	/^    public static function current()$/;"	f
currentClass	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                    $currentClass = &$startLines[$lineNumber];$/;"	v
currentIndex	D:\www\lib\phpunit\Framework\MockObject\Matcher\InvokedAtIndex.php	/^    protected $currentIndex = -1;$/;"	v
currentMethod	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                    $currentMethod = &$startLines[$lineNumber];$/;"	v
currentSignature	D:\www\lib\phpunit\Util\Metrics\Project.php	/^            $currentSignature      = '';$/;"	v
currentTestCase	D:\www\lib\phpunit\Util\Log\XML.php	/^    protected $currentTestCase = NULL;$/;"	v
currentTestName	D:\www\lib\phpunit\Util\Log\JSON.php	/^    protected $currentTestName = '';$/;"	v
currentTestPass	D:\www\lib\phpunit\Util\Log\JSON.php	/^    protected $currentTestPass = TRUE;$/;"	v
currentTestSuccess	D:\www\lib\phpunit\Util\Log\GraphViz.php	/^    protected $currentTestSuccess = TRUE;$/;"	v
currentTestSuiteName	D:\www\lib\phpunit\Util\Log\JSON.php	/^    protected $currentTestSuiteName = '';$/;"	v
currentTokenPositions	D:\www\lib\phpunit\Util\Metrics\Project.php	/^            $currentTokenPositions = array();$/;"	v
currentValue	D:\www\lib\phpunit\Framework\TestCase.php	/^        $currentValue = ini_set($varName, $newValue);$/;"	v
data	D:\www\lib\phpunit\Framework\TestSuite.php	/^                $data = PHPUnit_Util_Test::getProvidedData($className, $name);$/;"	v
dataName	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected $dataName = '';$/;"	v
dataProvider	D:\www\lib\phpunit\Util\Test.php	/^                $dataProvider           = explode('::', $matches[1]);$/;"	v
dataProviderClassName	D:\www\lib\phpunit\Util\Test.php	/^                    $dataProviderClassName = join('::', $dataProvider);$/;"	v
dataProviderMethod	D:\www\lib\phpunit\Util\Test.php	/^                $dataProviderMethod = new ReflectionMethod($/;"	v
dataProviderMethodName	D:\www\lib\phpunit\Util\Test.php	/^                $dataProviderMethodName = array_pop($dataProvider);$/;"	v
dataSet	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\RowBasedTest.php	/^		$dataSet = new PHPUnit_Extensions_Database_DataSet_DefaultDataSet(array($table1, $table2));$/;"	v
dataSetString	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractDataSet.php	/^        $dataSetString = '';$/;"	v
dataSuite	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^                        $dataSuite = new PHPUnit_Framework_TestSuite($/;"	v
dataToString	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function dataToString($data)$/;"	f
database	D:\www\lib\phpunit\Util\PDO.php	/^                $database      = null;$/;"	v
databaseDataSet	D:\www\lib\phpunit\Extensions\Database\Operation\RowBased.php	/^        $databaseDataSet = $connection->createDataSet();$/;"	v
databaseTableMetaData	D:\www\lib\phpunit\Extensions\Database\Operation\RowBased.php	/^            $databaseTableMetaData = $databaseDataSet->getTableMetaData($table->getTableMetaData()->getTableName());$/;"	v
date	D:\www\lib\phpunit\Util\Template.php	/^    protected static $date = '';$/;"	v
dbListener	D:\www\lib\phpunit\TextUI\TestRunner.php	/^            $dbListener = PHPUnit_Util_Log_Database::getInstance($/;"	v
dbh	D:\www\lib\phpunit\Util\PDO.php	/^                $dbh = new PDO($dsn, $user, $pass, $driverOptions);$/;"	v
default	D:\www\lib\phpunit\Util\Class.php	/^            $default = '';$/;"	v
defaultAssertions	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    protected function defaultAssertions($action)$/;"	f
defines	D:\www\lib\phpunit\Runner\Version.php	/^ * This class defines the current version of PHPUnit.$/;"	c
deleteAllOperation	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^		$deleteAllOperation = new PHPUnit_Extensions_Database_Operation_DeleteAll();$/;"	v
deleteOperation	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^		$deleteOperation = new PHPUnit_Extensions_Database_Operation_Delete();$/;"	v
delta	D:\www\lib\phpunit\Framework\Constraint\IsEqual.php	/^    public function __construct($value, $delta = 0, $maxDepth = 10)$/;"	v
dependencies	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected $dependencies  = array();$/;"	v
depends	D:\www\lib\phpunit\Util\Metrics\Class.php	/^     * The number of other classes that the class depends upon is an indicator$/;"	c
depositMoney	D:\www\lib\phpunit\Samples\BankAccount\BankAccount.php	/^    public function depositMoney($balance)$/;"	f
depth	D:\www\lib\phpunit\Framework\Constraint\IsEqual.php	/^    protected function recursiveComparison($a, $b, $depth = 0)$/;"	v
describe	D:\www\lib\phpunit\Util\Test.php	/^    public static function describe(PHPUnit_Framework_Test $test, $asString = TRUE)$/;"	f
diff	D:\www\lib\phpunit\Framework\ComparisonFailure\Object.php	/^            $diff = "in object of class <{$expectedClass}>:\\n";$/;"	v
diffEqual	D:\www\lib\phpunit\Framework\ComparisonFailure.php	/^    public static function diffEqual($expected, $actual, $message = '')$/;"	f
diffFile	D:\www\lib\phpunit\Extensions\PhptTestCase.php	/^        $diffFile     = $path . DIRECTORY_SEPARATOR . str_replace('.phpt', '.diff', $base);$/;"	v
diffIdentical	D:\www\lib\phpunit\Framework\ComparisonFailure.php	/^    public static function diffIdentical($expected, $actual, $message = '')$/;"	f
diffObject	D:\www\lib\phpunit\Framework\ComparisonFailure\Object.php	/^                        $diffObject = new PHPUnit_Framework_ComparisonFailure_Type($expectedValue, $actualValue, $this->message . 'attribute <' . $expectedAttribute->getName() . '>: ');$/;"	v
differenceLen	D:\www\lib\phpunit\Framework\ComparisonFailure\Scalar.php	/^            $differenceLen    = strlen($differenceString);$/;"	v
differenceString	D:\www\lib\phpunit\Framework\ComparisonFailure\Scalar.php	/^            $differenceString = str_pad($differenceString, $maxLen, ' ', STR_PAD_LEFT);$/;"	v
directories	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^    protected $directories = array();$/;"	v
directory	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^        $directory = new PHPUnit_Util_Report_Node_Directory($name, $this);$/;"	v
dirs	D:\www\lib\phpunit\Util\Log\PMD.php	/^        $dirs = array($/;"	v
dit	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $dit           = 0;$/;"	v
doCommand	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    protected function doCommand($command, array $arguments = array())$/;"	f
doCopyFixtureToTest	D:\www\lib\phpunit\Extensions\TestSetup.php	/^    private function doCopyFixtureToTest($object, $name, &$value)$/;"	f
doEndClass	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^    protected function doEndClass()$/;"	f
doRender	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^    protected function doRender($target, $title, $charset, $highlight, $lowUpperBound, $highLowerBound)$/;"	f
doRenderItem	D:\www\lib\phpunit\Util\Report\Node.php	/^    protected function doRenderItem(array $data, $lowUpperBound, $highLowerBound, $template = 'item.html')$/;"	f
doRenderItemObject	D:\www\lib\phpunit\Util\Report\Node.php	/^    protected function doRenderItemObject(PHPUnit_Util_Report_Node $item, $lowUpperBound, $highLowerBound, $link = NULL)$/;"	f
doRenderItems	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^    protected function doRenderItems(array $items, $lowUpperBound, $highLowerBound)$/;"	f
doRun	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    public function doRun(PHPUnit_Framework_Test $suite, array $arguments = array())$/;"	f
doSkeleton	D:\www\lib\phpunit\TextUI\Command.php	/^    protected static function doSkeleton($test, $testFile)$/;"	f
doSomething	D:\www\lib\phpunit\Tests\_files\AnInterface.php	/^    public function doSomething();$/;"	f
docComment	D:\www\lib\phpunit\Util\Test.php	/^        $docComment = $reflector->getDocComment();$/;"	v
document	D:\www\lib\phpunit\Util\XML.php	/^        $document = new DOMDocument;$/;"	v
does	D:\www\lib\phpunit\Util\Filesystem.php	/^     * This function does not operate on full paths, just filenames.$/;"	f
domToText	D:\www\lib\phpunit\Framework\Constraint\IsEqual.php	/^    protected function domToText(DOMDocument $document)$/;"	f
done	D:\www\lib\phpunit\Util\Report.php	/^        $done = FALSE;$/;"	v
driverName	D:\www\lib\phpunit\Extensions\Database\DB\MetaData.php	/^        $driverName = $pdo->getAttribute(PDO::ATTR_DRIVER_NAME);$/;"	v
driverOptions	D:\www\lib\phpunit\Util\PDO.php	/^                $driverOptions = null;$/;"	v
dsn	D:\www\lib\phpunit\Util\PDO.php	/^        \/\/ $dsn => username:password@protocol+hostspec\/database$/;"	v
e	D:\www\lib\phpunit\Extensions\Database\DB\DataSet.php	/^            $e = new Exception("Empty Table Name");$/;"	v
enabled	D:\www\lib\phpunit\Framework\Notice.php	/^    public static $enabled = TRUE;$/;"	v
encode	D:\www\lib\phpunit\Util\Log\JSON.php	/^    protected function encode($message)$/;"	f
endClass	D:\www\lib\phpunit\Util\TestDox\ResultPrinter\Text.php	/^    protected function endClass($name)$/;"	f
endLine	D:\www\lib\phpunit\Util\Test.php	/^                        $endLine   = $_method->getEndLine();$/;"	v
endLines	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $endLines   = array();$/;"	v
endPos	D:\www\lib\phpunit\Framework\ComparisonFailure\String.php	/^        $endPos   = $minLen;$/;"	v
endRun	D:\www\lib\phpunit\Util\TestDox\ResultPrinter\HTML.php	/^    protected function endRun()$/;"	f
endTest	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^    public function endTest(PHPUnit_Framework_Test $test, $time)$/;"	f
endTestSuite	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^    public function endTestSuite(PHPUnit_Framework_TestSuite $suite)$/;"	f
equal	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^        $equal= new Money(12, 'EUR');$/;"	v
equalMoney	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^        $equalMoney = new Money(12, 'EUR');$/;"	v
equalTo	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function equalTo($value, $delta = 0, $maxDepth = 10)$/;"	f
equals	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^    public function equals($anObject)$/;"	f
errno	D:\www\lib\phpunit\Util\ErrorHandler.php	/^    if ($errno == E_NOTICE || $errno == E_STRICT) {$/;"	v
error	D:\www\lib\phpunit\Util\Log\XML.php	/^        $error = $this->document->createElement('error');$/;"	v
errorCount	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function errorCount()$/;"	f
errorHandlerSet	D:\www\lib\phpunit\Framework\TestResult.php	/^        $errorHandlerSet = FALSE;$/;"	v
errors	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^        $errors = $result->errors();$/;"	v
escape	D:\www\lib\phpunit\Util\Log\JSON.php	/^    protected function escape($value)$/;"	f
evaluate	D:\www\lib\phpunit\Framework\Constraint\Xor.php	/^    public function evaluate($other)$/;"	f
exactly	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function exactly($count)$/;"	f
exception	D:\www\lib\phpunit\Util\ErrorHandler.php	/^        $exception = 'PHPUnit_Framework_Notice';$/;"	v
exceptionMessage	D:\www\lib\phpunit\Framework\TestFailure.php	/^    public function exceptionMessage()$/;"	f
exceptionToString	D:\www\lib\phpunit\Framework\TestFailure.php	/^    public static function exceptionToString(Exception $e, $verbose = FALSE)$/;"	f
excludeGroups	D:\www\lib\phpunit\Extensions\RepeatedTest.php	/^    protected $excludeGroups = array();$/;"	v
execute	D:\www\lib\phpunit\Extensions\Database\Operation\Truncate.php	/^    public function execute(PHPUnit_Extensions_Database_DB_IDatabaseConnection $connection, PHPUnit_Extensions_Database_DataSet_IDataSet $dataSet)$/;"	f
expFile	D:\www\lib\phpunit\Extensions\PhptTestCase.php	/^        $expFile      = $path . DIRECTORY_SEPARATOR . str_replace('.phpt', '.exp', $base);$/;"	v
expectOutputRegex	D:\www\lib\phpunit\Extensions\OutputTestCase.php	/^    public function expectOutputRegex($expectedRegex)$/;"	f
expectOutputString	D:\www\lib\phpunit\Extensions\OutputTestCase.php	/^    public function expectOutputString($expectedString)$/;"	f
expected	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^        $expected = new DOMDocument;$/;"	v
expectedClass	D:\www\lib\phpunit\Framework\ComparisonFailure\Object.php	/^        $expectedClass = get_class($this->expected);$/;"	v
expectedDataSet	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^		$expectedDataSet = new PHPUnit_Extensions_Database_DataSet_DefaultDataSet(array($/;"	v
expectedException	D:\www\lib\phpunit\Framework\TestSuite.php	/^            $expectedException        = $matches[1];$/;"	v
expectedExceptionMessage	D:\www\lib\phpunit\Framework\TestSuite.php	/^                $expectedExceptionMessage = '';$/;"	v
expectedFile	D:\www\lib\phpunit\Framework\ComparisonFailure.php	/^        $expectedFile = tempnam('\/tmp', 'expected');$/;"	v
expectedKey	D:\www\lib\phpunit\Framework\ComparisonFailure\Array.php	/^        foreach($this->expected as $expectedKey => $expectedValue) {$/;"	v
expectedLen	D:\www\lib\phpunit\Framework\ComparisonFailure\String.php	/^        $expectedLen = strlen($expected);$/;"	v
expectedOnly	D:\www\lib\phpunit\Framework\ComparisonFailure\Array.php	/^        $expectedOnly = array();$/;"	v
expectedReflection	D:\www\lib\phpunit\Framework\ComparisonFailure\Object.php	/^            $expectedReflection = new ReflectionClass($expectedClass);$/;"	v
expectedRegex	D:\www\lib\phpunit\Extensions\OutputTestCase.php	/^    public function expectedRegex()$/;"	f
expectedString	D:\www\lib\phpunit\Framework\ComparisonFailure\Scalar.php	/^            $expectedString   = str_pad($expectedString, $maxLen, ' ', STR_PAD_LEFT);$/;"	v
expectedType	D:\www\lib\phpunit\Framework\ComparisonFailure\Object.php	/^                    $expectedType = gettype($expectedValue);$/;"	v
expectedValue	D:\www\lib\phpunit\Framework\ComparisonFailure\Object.php	/^                $expectedValue  = $expectedAttribute->getValue($this->expected);$/;"	v
expects	D:\www\lib\phpunit\Framework\MockObject\MockObject.php	/^    public function expects(PHPUnit_Framework_MockObject_Matcher_Invocation $invocation);$/;"	f
fMonies	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^    protected $fMonies = array();$/;"	v
facilitates	D:\www\lib\phpunit\Extensions\Database\Operation\Composite.php	/^ * This class facilitates combining database operations. To create a composite $/;"	c
factory	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^    public static function factory($type, $out = NULL)$/;"	f
fail	D:\www\lib\phpunit\Framework\Constraint\Xor.php	/^    public function fail($other, $description, $not = FALSE)$/;"	f
failedTest	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^        $failedTest = $defect->failedTest();$/;"	v
fails	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^        $fails = new TornDown;$/;"	v
failure	D:\www\lib\phpunit\Util\Log\XML.php	/^        $failure = $this->document->createElement('failure');$/;"	v
failureCount	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function failureCount()$/;"	f
failureDescription	D:\www\lib\phpunit\Framework\Constraint\IsIdentical.php	/^        $failureDescription = $this->failureDescription($/;"	v
failures	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function failures()$/;"	f
file	D:\www\lib\phpunit\Util\Skeleton.php	/^            $file = $this->testSourceFile;$/;"	v
fileClassMap	D:\www\lib\phpunit\Util\Class.php	/^    protected static $fileClassMap = array();$/;"	v
fileClasses	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^            $fileClasses             = 0;$/;"	v
fileCloc	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^            $fileCloc          = $fileMetrics->getCloc();$/;"	v
fileConditionals	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^            $fileConditionals        = 0;$/;"	v
fileCoverage	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^            $fileCoverage      = $fileMetrics->getCoverage();$/;"	v
fileCoveredConditionals	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^            $fileCoveredConditionals = 0;$/;"	v
fileCoveredMethods	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^            $fileCoveredMethods      = 0;$/;"	v
fileCoveredStatements	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^            $fileCoveredStatements   = 0;$/;"	v
fileExists	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function fileExists()$/;"	f
fileFunctionMap	D:\www\lib\phpunit\Util\Class.php	/^    protected static $fileFunctionMap = array();$/;"	v
fileId	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^            $fileId      = FALSE;$/;"	v
fileLinesExecutable	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $fileLinesExecutable = $fileMetrics->getLocExecutable();$/;"	v
fileLinesExecuted	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $fileLinesExecuted   = $fileMetrics->getLocExecuted();$/;"	v
fileLoc	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $fileLoc             = $fileMetrics->getLoc();$/;"	v
fileLocExecutable	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^            $fileLocExecutable = $fileMetrics->getLocExecutable();$/;"	v
fileLocExecuted	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^            $fileLocExecuted   = $fileMetrics->getLocExecuted();$/;"	v
fileMethods	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^            $fileMethods             = 0;$/;"	v
fileMetrics	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $fileMetrics         = PHPUnit_Util_Metrics_File::factory($filename, $files);$/;"	v
fileMetricsXML	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $fileMetricsXML = $document->createElement('metrics');$/;"	v
fileName	D:\www\lib\phpunit\Util\Test.php	/^                        $fileName  = $_method->getFileName();$/;"	v
fileNcloc	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^                $fileNcloc           = $fileMetrics->getNcloc();$/;"	v
fileStatements	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^            $fileStatements          = 0;$/;"	v
fileSummary	D:\www\lib\phpunit\Util\CodeCoverage.php	/^                    $fileSummary = &self::$summary[$file];$/;"	v
filename	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        foreach ($files as $filename => $data) {$/;"	v
files	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^    protected $files = array();$/;"	v
filesCovered	D:\www\lib\phpunit\Framework\TestResult.php	/^                $filesCovered     = array_keys($data);$/;"	v
filesToBeCovered	D:\www\lib\phpunit\Framework\TestResult.php	/^                $filesToBeCovered = array_keys($linesToBeCovered);$/;"	v
fillup	D:\www\lib\phpunit\Util\Report\Node\File.php	/^            $fillup = array_shift($this->codeLinesFillup);$/;"	v
filter	D:\www\lib\phpunit\Util\Filter.php	/^    protected static $filter = TRUE;$/;"	v
filterConfiguration	D:\www\lib\phpunit\TextUI\TestRunner.php	/^            $filterConfiguration = $arguments['configuration']->getFilterConfiguration();$/;"	v
filterIterator	D:\www\lib\phpunit\Runner\IncludePathTestCollector.php	/^        $filterIterator = new PHPUnit_Util_FilterIterator($/;"	v
filterPHPUnit	D:\www\lib\phpunit\Util\Filter.php	/^    public static $filterPHPUnit = TRUE;$/;"	v
filterTests	D:\www\lib\phpunit\Util\Filter.php	/^    public static function getFilteredStacktrace(Exception $e, $filterTests = TRUE, $asString = TRUE)$/;"	v
filteredDataSet	D:\www\lib\phpunit\Tests\Extensions\Database\DataSet\FilterTest.php	/^		$filteredDataSet = new PHPUnit_Extensions_Database_DataSet_DataSetFilter($dataSet, array($/;"	v
filteredStacktrace	D:\www\lib\phpunit\Util\Filter.php	/^            $filteredStacktrace = array();$/;"	v
findMoney	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^    protected function findMoney($currency)$/;"	f
first	D:\www\lib\phpunit\Util\Log\JSON.php	/^        $first  = TRUE;$/;"	v
firstHash	D:\www\lib\phpunit\Util\Metrics\Project.php	/^                            $firstHash  = $hash;$/;"	v
firstLine	D:\www\lib\phpunit\Util\Metrics\Project.php	/^            $firstLine = 0;$/;"	v
firstToken	D:\www\lib\phpunit\Util\Metrics\Project.php	/^                            $firstToken = $tokenNr;$/;"	v
floorPercent	D:\www\lib\phpunit\Util\Report\Node.php	/^        $floorPercent = floor($percent);$/;"	v
flush	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^    public function flush()$/;"	f
flushListeners	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function flushListeners()$/;"	f
foo	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    public $foo = 1;$/;"	v
for	D:\www\lib\phpunit\Util\Type.php	/^ * Utility class for textual type (and value) representation.$/;"	c
found	D:\www\lib\phpunit\Util\Metrics\Project.php	/^            $found     = FALSE;$/;"	v
from	D:\www\lib\phpunit\Util\Metrics\Project.php	/^            foreach ($this->dependencies as $from => $dependencies) {$/;"	v
function	D:\www\lib\phpunit\Util\Class.php	/^            $function = new ReflectionMethod($className, $methodName);$/;"	v
functionCcn	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $functionCcn           = $functionMetrics->getCCN();$/;"	v
functionCoverage	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $functionCoverage      = $functionMetrics->getCoverage();$/;"	v
functionCrap	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $functionCrap          = $functionMetrics->getCrapIndex();$/;"	v
functionId	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $functionId    = (int)$stmtSelectFunctionId->fetchColumn();$/;"	v
functionLoc	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $functionLoc           = $functionMetrics->getLoc();$/;"	v
functionLocExecutable	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $functionLocExecutable = $functionMetrics->getLocExecutable();$/;"	v
functionLocExecuted	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $functionLocExecuted   = $functionMetrics->getLocExecuted();$/;"	v
functionName	D:\www\lib\phpunit\Util\Log\PMD.php	/^            foreach ($fileMetrics->getFunctions() as $functionName => $functionMetrics) {$/;"	v
functionNpath	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $functionNpath         = $functionMetrics->getNPath();$/;"	v
functions	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected $functions = array();$/;"	v
generate	D:\www\lib\phpunit\Util\Skeleton.php	/^    public function generate($verbose = FALSE)$/;"	f
generateClass	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^    protected function generateClass()$/;"	f
generateClassDefinition	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^    protected function generateClassDefinition(ReflectionClass $class)$/;"	f
generateCloneCode	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^    protected function generateCloneCode()$/;"	f
generateCloneCodeWithParentCall	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^    protected function generateCloneCodeWithParentCall()$/;"	f
generateConstructorCode	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^    protected function generateConstructorCode(ReflectionClass $class)$/;"	f
generateConstructorCodeWithParentCall	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^    protected function generateConstructorCodeWithParentCall(ReflectionClass $class)$/;"	f
generateMethodDefinition	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^    protected function generateMethodDefinition($className, $methodName, $modifier, $reference = '', $parameters = '')$/;"	f
generateMethodDefinitionFromExisting	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^    protected function generateMethodDefinitionFromExisting(ReflectionMethod $method)$/;"	f
generateMockApi	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^    protected function generateMockApi(ReflectionClass $class)$/;"	f
getAHF	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getAHF()$/;"	f
getAIF	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getAIF()$/;"	f
getAccountNumber	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccount.php	/^    public function getAccountNumber()$/;"	f
getActual	D:\www\lib\phpunit\Framework\ComparisonFailure.php	/^    public function getActual()$/;"	f
getActualOutput	D:\www\lib\phpunit\Extensions\OutputTestCase.php	/^    public function getActualOutput()$/;"	f
getArgs	D:\www\lib\phpunit\Extensions\Database\Operation\Exception.php	/^    public function getArgs()$/;"	f
getBalance	D:\www\lib\phpunit\Samples\BankAccount\BankAccount.php	/^    public function getBalance()$/;"	f
getBoolean	D:\www\lib\phpunit\Util\Configuration.php	/^    protected function getBoolean($value, $default)$/;"	f
getCCN	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    public function getCCN()$/;"	f
getCIS	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getCIS()$/;"	f
getCLS	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getCLS()$/;"	f
getCLSa	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getCLSa()$/;"	f
getCLSc	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getCLSc()$/;"	f
getCSZ	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getCSZ()$/;"	f
getCa	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getCa()$/;"	f
getCalledClassesPercent	D:\www\lib\phpunit\Util\Report\Node.php	/^    public function getCalledClassesPercent()$/;"	f
getCalledMethodsPercent	D:\www\lib\phpunit\Util\Report\Node.php	/^    public function getCalledMethodsPercent()$/;"	f
getCe	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getCe()$/;"	f
getChildren	D:\www\lib\phpunit\Util\TestSuiteIterator.php	/^    public function getChildren()$/;"	f
getClass	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getClass($className)$/;"	f
getClasses	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    public function getClasses()$/;"	f
getClassesInFile	D:\www\lib\phpunit\Util\Class.php	/^    public static function getClassesInFile($filename, $commonPath = '', $clearCache = FALSE)$/;"	f
getCloc	D:\www\lib\phpunit\Util\Metrics\File.php	/^    public function getCloc()$/;"	f
getCodeCoverage	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    protected function getCodeCoverage()$/;"	f
getCodeCoverageInformation	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function getCodeCoverageInformation($filterTests = TRUE, $filterPHPUnit = TRUE)$/;"	f
getCollectCodeCoverageInformation	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function getCollectCodeCoverageInformation()$/;"	f
getColorLevel	D:\www\lib\phpunit\Util\Report\Node.php	/^    protected function getColorLevel($percent, $lowUpperBound, $highLowerBound)$/;"	f
getColumns	D:\www\lib\phpunit\Extensions\Database\DataSet\TableMetaDataFilter.php	/^    public function getColumns()$/;"	f
getCommonPath	D:\www\lib\phpunit\Util\Filesystem.php	/^    public static function getCommonPath(array $paths)$/;"	f
getComparisonFailure	D:\www\lib\phpunit\Framework\ExpectationFailedException.php	/^    public function getComparisonFailure()$/;"	f
getConfig	D:\www\lib\phpunit\Extensions\Database\DB\IDatabaseConnection.php	/^    public function getConfig();$/;"	f
getConnection	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\RowBasedTest.php	/^	public function getConnection()$/;"	f
getConstructor	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^    protected function getConstructor(ReflectionClass $class)$/;"	f
getCountString	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected function getCountString($count, $name)$/;"	f
getCoverage	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    public function getCoverage()$/;"	f
getCoveredFiles	D:\www\lib\phpunit\Util\CodeCoverage.php	/^    public static function getCoveredFiles(array &$data)$/;"	f
getCoveringTests	D:\www\lib\phpunit\Util\CodeCoverage.php	/^    public static function getCoveringTests(array &$data, $file, $line, $clear = FALSE)$/;"	f
getCrapIndex	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    public function getCrapIndex()$/;"	f
getCurrentTestId	D:\www\lib\phpunit\Util\Log\Database.php	/^    public function getCurrentTestId()$/;"	f
getDIT	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getDIT()$/;"	f
getDataSet	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\RowBasedTest.php	/^	public function getDataSet()$/;"	f
getDatabaseTester	D:\www\lib\phpunit\Extensions\Database\TestCase.php	/^    protected function getDatabaseTester()$/;"	f
getDate	D:\www\lib\phpunit\Util\Template.php	/^    public static function getDate() {$/;"	f
getDependencies	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getDependencies()$/;"	f
getDependenciesAsDOT	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getDependenciesAsDOT()$/;"	f
getDescription	D:\www\lib\phpunit\Framework\ExpectationFailedException.php	/^    public function getDescription()$/;"	f
getDirectories	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^    public function getDirectories()$/;"	f
getDirectory	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    protected function getDirectory($directory)$/;"	f
getDuplicates	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getDuplicates()$/;"	f
getError	D:\www\lib\phpunit\Extensions\Database\Operation\Exception.php	/^    public function getError()$/;"	f
getExpected	D:\www\lib\phpunit\Framework\ComparisonFailure.php	/^    public function getExpected()$/;"	f
getExpectedException	D:\www\lib\phpunit\Framework\TestCase.php	/^    public function getExpectedException()$/;"	f
getFile	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getFile($filename)$/;"	f
getFiles	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^    public function getFiles()$/;"	f
getFilterConfiguration	D:\www\lib\phpunit\Util\Configuration.php	/^    public function getFilterConfiguration()$/;"	f
getFilteredCodeCoverage	D:\www\lib\phpunit\Util\Filter.php	/^    public static function getFilteredCodeCoverage(array $codeCoverageInformation, $filterTests = TRUE)$/;"	f
getFilteredStacktrace	D:\www\lib\phpunit\Util\Filter.php	/^    public static function getFilteredStacktrace(Exception $e, $filterTests = TRUE, $asString = TRUE)$/;"	f
getFunction	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getFunction($functionName)$/;"	f
getFunctions	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getFunctions()$/;"	f
getFunctionsInFile	D:\www\lib\phpunit\Util\Class.php	/^    public static function getFunctionsInFile($filename, $commonPath = '', $clearCache = FALSE)$/;"	f
getGroupConfiguration	D:\www\lib\phpunit\Util\Configuration.php	/^    public function getGroupConfiguration()$/;"	f
getGroups	D:\www\lib\phpunit\Util\Test.php	/^    public static function getGroups(Reflector $reflector, array $groups = array())$/;"	f
getHierarchy	D:\www\lib\phpunit\Util\Class.php	/^    public static function getHierarchy($className)$/;"	f
getI	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getI()$/;"	f
getIMPL	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getIMPL()$/;"	f
getId	D:\www\lib\phpunit\Util\Report\Node.php	/^    public function getId() {$/;"	f
getInstance	D:\www\lib\phpunit\Util\Log\Database.php	/^    public static function getInstance(PDO $dbh = NULL, $revision = '', $information = '')$/;"	f
getInterfs	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getInterfs()$/;"	f
getInvocationCount	D:\www\lib\phpunit\Framework\MockObject\Matcher\InvokedRecorder.php	/^    public function getInvocationCount()$/;"	f
getInvocationMocker	D:\www\lib\phpunit\Framework\MockObject\MockObject.php	/^    public function getInvocationMocker();$/;"	f
getInvocations	D:\www\lib\phpunit\Framework\MockObject\Matcher\InvokedRecorder.php	/^    public function getInvocations()$/;"	f
getIterator	D:\www\lib\phpunit\Util\Filter.php	/^    protected static function getIterator($directory, $suffix)$/;"	f
getLeafs	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getLeafs()$/;"	f
getLineExecutedPercent	D:\www\lib\phpunit\Util\Report\Node.php	/^    public function getLineExecutedPercent()$/;"	f
getLines	D:\www\lib\phpunit\Util\Metrics\File.php	/^    public function getLines()$/;"	f
getLinesToBeCovered	D:\www\lib\phpunit\Util\Test.php	/^    public static function getLinesToBeCovered($className, $methodName)$/;"	f
getLink	D:\www\lib\phpunit\Util\Report\Node.php	/^    public function getLink($full) {$/;"	f
getLoader	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    public function getLoader()$/;"	f
getLoc	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    public function getLoc()$/;"	f
getLocExecutable	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    public function getLocExecutable()$/;"	f
getLocExecuted	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    public function getLocExecuted()$/;"	f
getLocation	D:\www\lib\phpunit\Framework\AssertionFailedError.php	/^    public function getLocation()$/;"	f
getLoggingConfiguration	D:\www\lib\phpunit\Util\Configuration.php	/^    public function getLoggingConfiguration()$/;"	f
getMHF	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getMHF()$/;"	f
getMIF	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getMIF()$/;"	f
getMatcher	D:\www\lib\phpunit\Framework\MockObject\Builder\InvocationMocker.php	/^    public function getMatcher()$/;"	f
getMaxDit	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getMaxDit()$/;"	f
getMaxRunningTime	D:\www\lib\phpunit\Extensions\PerformanceTestCase.php	/^    public function getMaxRunningTime()$/;"	f
getMessage	D:\www\lib\phpunit\Framework\Warning.php	/^    public function getMessage()$/;"	f
getMetaData	D:\www\lib\phpunit\Extensions\Database\DB\DefaultDatabaseConnection.php	/^    public function getMetaData()$/;"	f
getMethod	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    public function getMethod()$/;"	f
getMethodParameters	D:\www\lib\phpunit\Util\Class.php	/^    public static function getMethodParameters(ReflectionMethod $method)$/;"	f
getMethodSignature	D:\www\lib\phpunit\Util\Class.php	/^    public static function getMethodSignature(ReflectionMethod $method)$/;"	f
getMethodSource	D:\www\lib\phpunit\Util\Class.php	/^    public static function getMethodSource($className, $methodName)$/;"	f
getMethods	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getMethods()$/;"	f
getMock	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function getMock($className, array $methods = array(), array $arguments = array(), $mockClassName = '', $callOriginalConstructor = TRUE, $callOriginalClone = TRUE, $callAutoload = TRUE)$/;"	f
getNOC	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getNOC()$/;"	f
getNPath	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    public function getNPath()$/;"	f
getName	D:\www\lib\phpunit\Util\Report\Node.php	/^    public function getName($includeParent = FALSE, $includeCommonPath = FALSE)$/;"	f
getNcloc	D:\www\lib\phpunit\Util\Metrics\File.php	/^    public function getNcloc()$/;"	f
getNumCalledClasses	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    public function getNumCalledClasses()$/;"	f
getNumCalledMethods	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    public function getNumCalledMethods()$/;"	f
getNumClasses	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    public function getNumClasses()$/;"	f
getNumExecutableLines	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    public function getNumExecutableLines()$/;"	f
getNumExecutedLines	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    public function getNumExecutedLines()$/;"	f
getNumMethods	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    public function getNumMethods()$/;"	f
getNumber	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    protected function getNumber($command, array $arguments)$/;"	f
getObjectAttribute	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function getObjectAttribute($object, $attributeName)$/;"	f
getOperation	D:\www\lib\phpunit\Extensions\Database\Operation\Exception.php	/^    public function getOperation()$/;"	f
getOperations	D:\www\lib\phpunit\Extensions\Database\TestCase.php	/^    protected function getOperations()$/;"	f
getOrCreateTable	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractXmlDataSet.php	/^    protected function getOrCreateTable($tableName, $tableColumns)$/;"	f
getPF	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getPF()$/;"	f
getPHPConfiguration	D:\www\lib\phpunit\Util\Configuration.php	/^    public function getPHPConfiguration()$/;"	f
getPMDConfiguration	D:\www\lib\phpunit\Util\Configuration.php	/^    public function getPMDConfiguration()$/;"	f
getPackage	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getPackage()$/;"	f
getPackageInformation	D:\www\lib\phpunit\Util\Class.php	/^    public static function getPackageInformation($className)$/;"	f
getParameters	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    public function getParameters()$/;"	f
getPath	D:\www\lib\phpunit\Util\Report\Node.php	/^    public function getPath() {$/;"	f
getPrimaryKeys	D:\www\lib\phpunit\Extensions\Database\DataSet\TableMetaDataFilter.php	/^    public function getPrimaryKeys()$/;"	f
getPriority	D:\www\lib\phpunit\Util\Log\PMD\Rule.php	/^    public function getPriority()$/;"	f
getProvidedData	D:\www\lib\phpunit\Util\Test.php	/^    public static function getProvidedData($className, $methodName)$/;"	f
getPublicMethods	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getPublicMethods()$/;"	f
getQuery	D:\www\lib\phpunit\Extensions\Database\Operation\Exception.php	/^    public function getQuery()$/;"	f
getReverseIterator	D:\www\lib\phpunit\Extensions\Database\DataSet\IDataSet.php	/^    public function getReverseIterator();$/;"	f
getRoots	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    public function getRoots()$/;"	f
getRowCount	D:\www\lib\phpunit\Extensions\Database\DataSet\TableFilter.php	/^    public function getRowCount()$/;"	f
getRunId	D:\www\lib\phpunit\Util\Log\Database.php	/^    public function getRunId()$/;"	f
getSafeFilename	D:\www\lib\phpunit\Util\Filesystem.php	/^    public static function getSafeFilename($filename)$/;"	f
getSchema	D:\www\lib\phpunit\Extensions\Database\DB\MetaData.php	/^    public function getSchema()$/;"	f
getSetUpOperation	D:\www\lib\phpunit\Extensions\Database\TestCase.php	/^    protected function getSetUpOperation()$/;"	f
getStaticAttribute	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function getStaticAttribute($className, $attributeName)$/;"	f
getStatistics	D:\www\lib\phpunit\Util\CodeCoverage.php	/^    public static function getStatistics(array &$data, $filename, $startLine = 1, $endLine = FALSE) {$/;"	f
getStatus	D:\www\lib\phpunit\Framework\TestCase.php	/^    public function getStatus()$/;"	f
getString	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    protected function getString($command, array $arguments)$/;"	f
getStringArray	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    protected function getStringArray($command, array $arguments)$/;"	f
getSummary	D:\www\lib\phpunit\Util\CodeCoverage.php	/^    public static function getSummary(array &$data, $clear = FALSE)$/;"	f
getTable	D:\www\lib\phpunit\Extensions\Database\Operation\Exception.php	/^    public function getTable()$/;"	f
getTableColumns	D:\www\lib\phpunit\Extensions\Database\DB\MetaData\Sqlite.php	/^    public function getTableColumns($tableName)$/;"	f
getTableInfo	D:\www\lib\phpunit\Extensions\Database\DataSet\XmlDataSet.php	/^    protected function getTableInfo(Array &$tableColumns, Array &$tableValues)$/;"	f
getTableMetaData	D:\www\lib\phpunit\Extensions\Database\DataSet\ITableIterator.php	/^    public function getTableMetaData();$/;"	f
getTableName	D:\www\lib\phpunit\Extensions\Database\DataSet\TableMetaDataFilter.php	/^    public function getTableName()$/;"	f
getTableNames	D:\www\lib\phpunit\Extensions\Database\DataSet\IDataSet.php	/^    public function getTableNames();$/;"	f
getTablePrimaryKeys	D:\www\lib\phpunit\Extensions\Database\DB\MetaData\Sqlite.php	/^    public function getTablePrimaryKeys($tableName)$/;"	f
getTearDownOperation	D:\www\lib\phpunit\Extensions\Database\TestCase.php	/^    protected function getTearDownOperation()$/;"	f
getTest	D:\www\lib\phpunit\Runner\BaseTestRunner.php	/^    public function getTest($suiteClassName, $suiteClassFile = '', $syntaxCheck = TRUE)$/;"	f
getTestSourceFile	D:\www\lib\phpunit\Util\Skeleton.php	/^    public function getTestSourceFile()$/;"	f
getTestSuiteConfiguration	D:\www\lib\phpunit\Util\Configuration.php	/^    public function getTestSuiteConfiguration()$/;"	f
getTokens	D:\www\lib\phpunit\Util\Metrics\File.php	/^    public function getTokens()$/;"	f
getVARS	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getVARS()$/;"	f
getVARSi	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getVARSi()$/;"	f
getVARSnp	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getVARSnp()$/;"	f
getValue	D:\www\lib\phpunit\Extensions\Database\DataSet\TableFilter.php	/^    public function getValue($row, $column)$/;"	f
getVersionString	D:\www\lib\phpunit\Runner\Version.php	/^    public static function getVersionString()$/;"	f
getWMC	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getWMC()$/;"	f
getWMCi	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getWMCi()$/;"	f
getWMCnp	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function getWMCnp()$/;"	f
getXML	D:\www\lib\phpunit\Util\Log\XML.php	/^    public function getXML()$/;"	f
getopt	D:\www\lib\phpunit\Util\Getopt.php	/^    public static function getopt(array $args, $short_options, $long_options = null)$/;"	f
globalsBackup	D:\www\lib\phpunit\Framework\TestCase.php	/^            $globalsBackup = serialize($GLOBALS);$/;"	v
graph	D:\www\lib\phpunit\Util\Metrics\Project.php	/^            $graph = new Image_GraphViz($/;"	v
greaterThan	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function greaterThan($value)$/;"	f
greaterThanOrEqual	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function greaterThanOrEqual($value)$/;"	f
group	D:\www\lib\phpunit\Util\Filter.php	/^    public static function removeFileFromFilter($filename, $group = 'DEFAULT')$/;"	v
groupConfiguration	D:\www\lib\phpunit\TextUI\TestRunner.php	/^            $groupConfiguration = $arguments['configuration']->getGroupConfiguration();$/;"	v
groups	D:\www\lib\phpunit\Util\Test.php	/^    public static function getGroups(Reflector $reflector, array $groups = array())$/;"	v
handleArguments	D:\www\lib\phpunit\TextUI\Command.php	/^    protected static function handleArguments()$/;"	f
handleConfiguration	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    protected function handleConfiguration(array &$arguments)$/;"	f
handleLoader	D:\www\lib\phpunit\TextUI\Command.php	/^    protected static function handleLoader($loaderName)$/;"	f
has	D:\www\lib\phpunit\Framework\Assert.php	/^     * Asserts that a class has a specified static attribute.$/;"	c
hasBeenInvoked	D:\www\lib\phpunit\Framework\MockObject\Matcher\InvokedRecorder.php	/^    public function hasBeenInvoked()$/;"	f
hasChildren	D:\www\lib\phpunit\Util\TestSuiteIterator.php	/^    public function hasChildren()$/;"	f
hasDiff	D:\www\lib\phpunit\Framework\ComparisonFailure.php	/^    public static function hasDiff()$/;"	f
hasFailed	D:\www\lib\phpunit\Framework\TestCase.php	/^    public function hasFailed()$/;"	f
hasReturnValue	D:\www\lib\phpunit\Framework\MockObject\InvocationMocker.php	/^        $hasReturnValue = FALSE;$/;"	v
hash	D:\www\lib\phpunit\Util\Metrics\Project.php	/^                    $hash = substr($/;"	v
hashCode	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^    public function hashCode()$/;"	f
header	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                            $header = '1 test covers';$/;"	v
hiddenAttributes	D:\www\lib\phpunit\Util\Metrics\Class.php	/^        $hiddenAttributes    = 0;$/;"	v
hiddenMethods	D:\www\lib\phpunit\Util\Metrics\Class.php	/^        $hiddenMethods    = 0;$/;"	v
hierarchy	D:\www\lib\phpunit\Util\Class.php	/^     * Returns the class hierarchy for a given class.$/;"	c
highlight	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected $highlight = FALSE;$/;"	v
host	D:\www\lib\phpunit\Util\PDO.php	/^                $host          = null;$/;"	v
hours	D:\www\lib\phpunit\Util\Timer.php	/^        $hours   = sprintf('%02d', ($time >= 3600) ? floor($time \/ 3600) : 0);$/;"	v
html	D:\www\lib\phpunit\Util\XML.php	/^    public static function load($filename, $html = FALSE)$/;"	v
i	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $i      = 1;$/;"	v
id	D:\www\lib\phpunit\Runner\Version.php	/^  	public static function id()$/;"	f
identical	D:\www\lib\phpunit\Framework\ComparisonFailure.php	/^    public function identical()$/;"	f
identicalTo	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function identicalTo($value)$/;"	f
ignore	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $ignore = FALSE;$/;"	v
ignoreStart	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $ignoreStart = -1;$/;"	v
impl	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $impl          = 0;$/;"	v
inDefaultAssertions	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    protected $inDefaultAssertions = FALSE;$/;"	v
inNew	D:\www\lib\phpunit\Util\Metrics\Function.php	/^        $inNew = FALSE;$/;"	v
includeCommonPath	D:\www\lib\phpunit\Util\Report\Node.php	/^    public function getName($includeParent = FALSE, $includeCommonPath = FALSE)$/;"	v
includePaths	D:\www\lib\phpunit\Runner\StandardTestSuiteLoader.php	/^                $includePaths = explode(PATH_SEPARATOR, get_include_path());$/;"	v
incompleteMethods	D:\www\lib\phpunit\Util\Skeleton.php	/^        $incompleteMethods = '';$/;"	v
indent	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^        $indent = max(0, count($this->testSuiteSize) - 1);$/;"	v
index	D:\www\lib\phpunit\Framework\MockObject\Matcher\Parameters.php	/^        foreach($this->parameters as $index => $parameter) {$/;"	v
info	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^        $info     = stream_get_meta_data($handle);$/;"	v
information	D:\www\lib\phpunit\Util\Log\Database.php	/^    protected function __construct(PDO $dbh, $revision, $information = '')$/;"	v
inheritedAttributes	D:\www\lib\phpunit\Util\Metrics\Class.php	/^        $inheritedAttributes = 0;$/;"	v
inheritedMethods	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $inheritedMethods = array();$/;"	v
ini	D:\www\lib\phpunit\TextUI\Command.php	/^                    $ini = explode('=', $option[1]);$/;"	v
iniSet	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function iniSet($varName, $newValue)$/;"	f
iniSettings	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected $iniSettings = array();$/;"	v
insertArgs	D:\www\lib\phpunit\Extensions\Database\Operation\Replace.php	/^                        $insertArgs = $insertOperation->buildOperationArguments($databaseTableMetaData, $table, $i);$/;"	v
insertNode	D:\www\lib\phpunit\Util\Log\Database.php	/^    protected function insertNode(PHPUnit_Framework_Test $test)$/;"	f
insertOperation	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^		$insertOperation = new PHPUnit_Extensions_Database_Operation_Insert();$/;"	v
insertQuery	D:\www\lib\phpunit\Extensions\Database\Operation\Replace.php	/^            $insertQuery = $insertOperation->buildOperationQuery($databaseTableMetaData, $table, $connection);$/;"	v
insertRootNode	D:\www\lib\phpunit\Util\Log\Database.php	/^    protected function insertRootNode($name)$/;"	f
insertStatement	D:\www\lib\phpunit\Extensions\Database\Operation\Replace.php	/^            $insertStatement = $connection->getConnection()->prepare($insertQuery);$/;"	v
instance	D:\www\lib\phpunit\Util\Log\Database.php	/^    protected static $instance = NULL;$/;"	v
interfaces	D:\www\lib\phpunit\Util\Metrics\Class.php	/^        $interfaces = $this->class->getInterfaces();$/;"	v
interfs	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected $interfs = 0;$/;"	v
invocations	D:\www\lib\phpunit\Framework\MockObject\Matcher\InvokedRecorder.php	/^    protected $invocations = array();$/;"	v
invoke	D:\www\lib\phpunit\Framework\MockObject\Stub\Return.php	/^    public function invoke(PHPUnit_Framework_MockObject_Invocation $invocation)$/;"	f
invoked	D:\www\lib\phpunit\Framework\MockObject\Matcher\StatelessInvocation.php	/^    public function invoked(PHPUnit_Framework_MockObject_Invocation $invocation)$/;"	f
is	D:\www\lib\phpunit\Util\PDO.php	/^     * This function is 'borrowed' from PEAR \/DB.php .$/;"	f
isClass	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^        $isClass     = class_exists($className, $callAutoload);$/;"	v
isFailure	D:\www\lib\phpunit\Framework\TestFailure.php	/^    public function isFailure()$/;"	f
isFile	D:\www\lib\phpunit\Util\CodeCoverage.php	/^    protected static function isFile($file)$/;"	f
isFileCache	D:\www\lib\phpunit\Util\CodeCoverage.php	/^            $isFileCache = array();$/;"	v
isFiltered	D:\www\lib\phpunit\Util\Filter.php	/^    protected static function isFiltered($filename, $filterTests = TRUE, $ignoreWhitelist = FALSE)$/;"	f
isFilteredCache	D:\www\lib\phpunit\Util\Filter.php	/^            $isFilteredCache = array();$/;"	v
isInstanceOf	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function isInstanceOf($className)$/;"	f
isInterface	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^        $isInterface = interface_exists($className, $callAutoload);$/;"	v
isNativeType	D:\www\lib\phpunit\Framework\Constraint\TraversableContainsOnly.php	/^    public function __construct($type, $isNativeType = TRUE)$/;"	v
isNumeric	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^                $isNumeric = is_numeric($testMethodName[$i]);$/;"	v
isPHP52	D:\www\lib\phpunit\Framework\TestResult.php	/^    protected static $isPHP52 = null;$/;"	v
isPublicTestMethod	D:\www\lib\phpunit\Framework\TestSuite.php	/^    public static function isPublicTestMethod(ReflectionMethod $method)$/;"	f
isTestMethod	D:\www\lib\phpunit\Framework\TestSuite.php	/^    public static function isTestMethod(ReflectionMethod $method)$/;"	f
isType	D:\www\lib\phpunit\Util\Type.php	/^    public static function isType($type)$/;"	f
isZero	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^    public function isZero()$/;"	f
it	D:\www\lib\phpunit\Framework\Constraint\ClassHasStaticAttribute.php	/^ * Constraint that asserts that the class it is evaluated for has a given$/;"	c
itemTemplate	D:\www\lib\phpunit\Util\Report\Node.php	/^        $itemTemplate = new PHPUnit_Util_Template($/;"	v
items	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $items = '';$/;"	v
iterator	D:\www\lib\phpunit\Util\Log\PMD.php	/^                $iterator = new PHPUnit_Util_FilterIterator($/;"	v
j	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        foreach ($tokens as $j => $token) {$/;"	v
jj	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                foreach ($lines as $jj => $line) {$/;"	v
k	D:\www\lib\phpunit\Util\Filter.php	/^            foreach ($codeCoverageInformation as $k => $test) {$/;"	v
k1	D:\www\lib\phpunit\Util\Type.php	/^            $k1 = key($a1);$/;"	v
k2	D:\www\lib\phpunit\Util\Type.php	/^                $k2 = key($a2);$/;"	v
key	D:\www\lib\phpunit\Util\TestSuiteIterator.php	/^    public function key()$/;"	f
keyQuery	D:\www\lib\phpunit\Extensions\Database\DB\MetaData\Oci.php	/^       $keyQuery = "SELECT b.column_name$/;"	v
keyStatement	D:\www\lib\phpunit\Extensions\Database\DB\MetaData\InformationSchema.php	/^        $keyStatement = $this->pdo->prepare($keyQuery);$/;"	v
keys	D:\www\lib\phpunit\Util\Template.php	/^        $keys = array();$/;"	v
lastConstraint	D:\www\lib\phpunit\Framework\Constraint\And.php	/^    protected $lastConstraint = NULL;$/;"	v
lastEvent	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected $lastEvent = -1;$/;"	v
lastTestFailed	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected $lastTestFailed = FALSE;$/;"	v
leafs	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected $leafs   = 0;$/;"	v
left	D:\www\lib\phpunit\Util\Log\Database.php	/^        $left     = $right;$/;"	v
lessThan	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function lessThan($value)$/;"	f
lessThanOrEqual	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function lessThanOrEqual($value)$/;"	f
letter	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^            $letter = $letters[$i];$/;"	v
letters	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^        $letters = preg_split('\/\/', $csv, -1, PREG_SPLIT_NO_EMPTY);$/;"	v
level	D:\www\lib\phpunit\Util\Report\Node.php	/^            $level = 'Med';$/;"	v
line	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        foreach ($linesLength as $line => $length) {$/;"	v
lineLength	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractTable.php	/^        $lineLength = strlen($lineSeperator) - 1;$/;"	v
lineNumber	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $lineNumber  = 1;$/;"	v
lineSeperator	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractTable.php	/^        $lineSeperator = str_repeat('+----------------------', count($columns)) . "+\\n";$/;"	v
lineToTestMap	D:\www\lib\phpunit\Util\CodeCoverage.php	/^    protected static $lineToTestMap = array();$/;"	v
lines	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $lines  = explode("\\n", str_replace("\\t", '    ', file_get_contents($file)));$/;"	v
linesCovered	D:\www\lib\phpunit\Framework\TestResult.php	/^                    $linesCovered    = array_keys($data[$file]);$/;"	v
linesLength	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $linesLength = array_map('strlen', $lines);$/;"	v
linesNotToCover	D:\www\lib\phpunit\Framework\TestResult.php	/^                    $linesNotToCover = array_diff($linesCovered, $linesToBeCovered[$file]);$/;"	v
linesToBeCovered	D:\www\lib\phpunit\Framework\TestResult.php	/^            $linesToBeCovered = PHPUnit_Util_Test::getLinesToBeCovered($/;"	v
link	D:\www\lib\phpunit\Util\Report\Node.php	/^    protected function doRenderItemObject(PHPUnit_Util_Report_Node $item, $lowUpperBound, $highLowerBound, $link = NULL)$/;"	v
list	D:\www\lib\phpunit\Framework\MockObject\Matcher.php	/^        $list = array();$/;"	v
listeners	D:\www\lib\phpunit\Framework\TestResult.php	/^    protected $listeners = array();$/;"	v
load	D:\www\lib\phpunit\Util\XML.php	/^    public static function load($filename, $html = FALSE)$/;"	f
loadAccount	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccount.php	/^    protected function loadAccount()$/;"	f
loadClasses	D:\www\lib\phpunit\Util\Log\PMD.php	/^    protected function loadClasses(array $configuration)$/;"	f
loadColumnInfo	D:\www\lib\phpunit\Extensions\Database\DB\MetaData\Sqlite.php	/^    protected function loadColumnInfo($tableName)$/;"	f
loadFile	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected function loadFile($file)$/;"	f
loadSuiteClass	D:\www\lib\phpunit\Runner\BaseTestRunner.php	/^    protected function loadSuiteClass($suiteClassName, $suiteClassFile = '', $syntaxCheck = TRUE)$/;"	f
loaded	D:\www\lib\phpunit\Util\XML.php	/^                $loaded = @$document->loadHTMLFile($filename);$/;"	v
loader	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    protected static $loader = NULL;$/;"	v
loads	D:\www\lib\phpunit\Extensions\Database\DB\TableMetaData.php	/^ * This class loads a table metadata object with database metadata.$/;"	c
loc	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    protected $loc           = 0;$/;"	v
locExecutable	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    protected $locExecutable = 0;$/;"	v
locExecuted	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    protected $locExecuted   = 0;$/;"	v
locale	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected $locale = array();$/;"	v
log	D:\www\lib\phpunit\Extensions\PhptTestCase\Logger.php	/^    public function log($level, $msg, $append_crlf = TRUE)$/;"	f
logFile	D:\www\lib\phpunit\Extensions\PhptTestCase.php	/^        $logFile      = $path . DIRECTORY_SEPARATOR . str_replace('.phpt', '.log', $base);$/;"	v
logIncompleteSkipeed	D:\www\lib\phpunit\Util\Log\XML.php	/^    protected $logIncompleteSkipeed = FALSE;$/;"	v
logIncompleteSkipped	D:\www\lib\phpunit\Util\Log\XML.php	/^    public function __construct($out = NULL, $logIncompleteSkipped = FALSE)$/;"	v
loggingConfiguration	D:\www\lib\phpunit\TextUI\TestRunner.php	/^            $loggingConfiguration = $arguments['configuration']->getLoggingConfiguration();$/;"	v
logicalAnd	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function logicalAnd()$/;"	f
logicalNot	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function logicalNot(PHPUnit_Framework_Constraint $constraint)$/;"	f
logicalOr	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function logicalOr()$/;"	f
logicalXor	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function logicalXor()$/;"	f
longOptions	D:\www\lib\phpunit\TextUI\Command.php	/^        $longOptions = array($/;"	v
long_opt	D:\www\lib\phpunit\Util\Getopt.php	/^            $long_opt  = $long_options[$i];$/;"	v
long_options	D:\www\lib\phpunit\Util\Getopt.php	/^    public static function getopt(array $args, $short_options, $long_options = null)$/;"	v
lookupId	D:\www\lib\phpunit\Framework\MockObject\InvocationMocker.php	/^    public function lookupId($id)$/;"	f
lookupResult	D:\www\lib\phpunit\Util\Test.php	/^    public static function lookupResult(PHPUnit_Framework_Test $test, PHPUnit_Framework_TestResult $result)$/;"	f
m	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^ * $m = PHPUnit_Framework_MockObject::generate('MyClass');$/;"	v
main	D:\www\lib\phpunit\TextUI\Command.php	/^    public static function main()$/;"	f
markTestIncomplete	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function markTestIncomplete($message = '')$/;"	f
markTestSkipped	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function markTestSkipped($message = '')$/;"	f
markTestSuiteSkipped	D:\www\lib\phpunit\Framework\TestSuite.php	/^    public function markTestSuiteSkipped($message = '')$/;"	f
matcher	D:\www\lib\phpunit\Framework\MockObject\Matcher.php	/^            $matcher = $builder->getMatcher();$/;"	v
matchers	D:\www\lib\phpunit\Framework\MockObject\InvocationMocker.php	/^    protected $matchers = array();$/;"	v
matches	D:\www\lib\phpunit\Framework\MockObject\Matcher\Parameters.php	/^    public function matches(PHPUnit_Framework_MockObject_Invocation $invocation)$/;"	f
matchesRegularExpression	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function matchesRegularExpression($pattern)$/;"	f
max	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^        $max = strlen($testMethodName);$/;"	v
maxDepth	D:\www\lib\phpunit\Framework\Constraint\IsEqual.php	/^    protected $maxDepth = 10;$/;"	v
maxDit	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected $maxDit  = 0;$/;"	v
maxLen	D:\www\lib\phpunit\Framework\ComparisonFailure\String.php	/^        $maxLen      = max($expectedLen, $actualLen);$/;"	v
maxRunningTime	D:\www\lib\phpunit\Extensions\PerformanceTestCase.php	/^    protected $maxRunningTime = 0;$/;"	v
may	D:\www\lib\phpunit\Util\Log\PMD\Rule\Class\ExcessiveClassLength.php	/^              'This is an indication that the class may be ' .$/;"	c
merge	D:\www\lib\phpunit\Util\Template.php	/^    public function setVar(array $values, $merge = TRUE) {$/;"	v
message	D:\www\lib\phpunit\Util\XML.php	/^                $message = '';$/;"	v
metaDataClassMap	D:\www\lib\phpunit\Extensions\Database\DB\MetaData.php	/^    protected static $metaDataClassMap = array($/;"	v
method	D:\www\lib\phpunit\Util\Test.php	/^        $method     = new ReflectionMethod($className, $methodName);$/;"	v
methodCcn	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                    $methodCcn           = $methodMetrics->getCCN();$/;"	v
methodCoverage	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                    $methodCoverage      = $methodMetrics->getCoverage();$/;"	v
methodCrap	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                    $methodCrap          = $methodMetrics->getCrapIndex();$/;"	v
methodEndLine	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                        $methodEndLine   = $method->getEndLine();$/;"	v
methodId	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $methodId = (int)$stmt->fetchColumn();$/;"	v
methodLoc	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                    $methodLoc           = $methodMetrics->getLoc();$/;"	v
methodLocExecutable	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                    $methodLocExecutable = $methodMetrics->getLocExecutable();$/;"	v
methodLocExecuted	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                    $methodLocExecuted   = $methodMetrics->getLocExecuted();$/;"	v
methodName	D:\www\lib\phpunit\Util\Skeleton.php	/^                            $methodName     = ucfirst($origMethodName);$/;"	v
methodNameCounter	D:\www\lib\phpunit\Util\Skeleton.php	/^    protected $methodNameCounter = array();$/;"	v
methodNameMatcher	D:\www\lib\phpunit\Framework\MockObject\Matcher.php	/^    public $methodNameMatcher = NULL;$/;"	v
methodNpath	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                    $methodNpath         = $methodMetrics->getNPath();$/;"	v
methodStartLine	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                        $methodStartLine = $method->getStartLine();$/;"	v
methodTemplate	D:\www\lib\phpunit\Util\Skeleton.php	/^                    $methodTemplate = new PHPUnit_Util_Template($/;"	v
methods	D:\www\lib\phpunit\Util\Skeleton.php	/^        $methods           = '';$/;"	v
metrics	D:\www\lib\phpunit\Util\Log\PMD.php	/^        $metrics      = new PHPUnit_Util_Metrics_Project($files, $summary);$/;"	v
mhf	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $mhf           = 0;$/;"	v
mif	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $mif           = 0;$/;"	v
minLen	D:\www\lib\phpunit\Framework\ComparisonFailure\String.php	/^        $minLen      = min($expectedLen, $actualLen);$/;"	v
minLines	D:\www\lib\phpunit\Util\Log\CPD.php	/^    public function process(PHPUnit_Framework_TestResult $result, $minLines = 5, $minMatches = 70)$/;"	v
minutes	D:\www\lib\phpunit\Util\Timer.php	/^        if ($hours == 0 && $minutes == 0) {$/;"	v
mock	D:\www\lib\phpunit\Tests\Framework\MockObjectTest.php	/^        $mock = $this->getMock('AnInterface');$/;"	v
mockClass	D:\www\lib\phpunit\Framework\TestCase.php	/^        $mockClass  = new ReflectionClass($mock->mockClassName);$/;"	v
mockClassName	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^                $mockClassName = 'Mock_' . $className . '_' . substr(md5(microtime()), 0, 8);$/;"	v
mockObject	D:\www\lib\phpunit\Framework\TestCase.php	/^        $mockObject = $mockClass->newInstanceArgs($arguments);$/;"	v
mockObjects	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected $mockObjects = array();$/;"	v
mockOperation	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\RowBasedTest.php	/^		$mockOperation = $this->getMock('PHPUnit_Extensions_Database_Operation_RowBased', $/;"	v
modifier	D:\www\lib\phpunit\Util\Class.php	/^            $modifier = 'public';$/;"	v
money	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^        $money = MoneyBag::create(new Money(26, 'EUR'), new Money(28, 'EUR'));$/;"	v
monies	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^    public function monies()$/;"	f
ms1	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^        $ms1 = MoneyBag::create(new Money(12, 'EUR'), new Money(3, 'USD'));$/;"	v
multiply	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^    public function multiply($factor)$/;"	f
name	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^        foreach ($this->tests as $name => $data) {$/;"	v
names	D:\www\lib\phpunit\Runner\TestCollector.php	/^ * Collects Test class names to be presented$/;"	c
namespaceName	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^            $namespaceName       = join('::', $classNameParts);$/;"	v
ncloc	D:\www\lib\phpunit\Util\Metrics\File.php	/^    protected $ncloc         = 0;$/;"	v
negate	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^    public function negate()$/;"	f
never	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function never()$/;"	f
newClasses	D:\www\lib\phpunit\Framework\TestSuite.php	/^        $newClasses = PHPUnit_Util_Class::collectEnd();$/;"	v
newCoverageFlag	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                    $newCoverageFlag = isset($summary[$file][$lineNumber]) ? 1 : 0;$/;"	v
newDatabaseTester	D:\www\lib\phpunit\Extensions\Database\TestCase.php	/^    protected function newDatabaseTester()$/;"	f
newRow	D:\www\lib\phpunit\Extensions\Database\DataSet\DefaultTable.php	/^            $newRow = array();$/;"	v
new_tables	D:\www\lib\phpunit\Extensions\Database\DataSet\DataSetFilter.php	/^        $new_tables = array();$/;"	v
next	D:\www\lib\phpunit\Util\TestSuiteIterator.php	/^    public function next()$/;"	f
noTestCase	D:\www\lib\phpunit\Tests\_files\OneTestCase.php	/^    public function noTestCase()$/;"	f
noc	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $noc           = 0;$/;"	v
nocCache	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected static $nocCache = array();$/;"	v
non_opts	D:\www\lib\phpunit\Util\Getopt.php	/^        $non_opts = array();$/;"	v
noneSkipped	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function noneSkipped()$/;"	f
normalizeOutput	D:\www\lib\phpunit\Extensions\OutputTestCase.php	/^    public function normalizeOutput($buffer)$/;"	f
not	D:\www\lib\phpunit\Framework\Constraint\Xor.php	/^    public function fail($other, $description, $not = FALSE)$/;"	v
notImplemented	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function notImplemented()$/;"	f
notImplementedCount	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function notImplementedCount()$/;"	f
notifyMethod	D:\www\lib\phpunit\Framework\TestResult.php	/^            $notifyMethod   = 'addError';$/;"	v
npath	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    protected $npath         = 1;$/;"	v
npathStack	D:\www\lib\phpunit\Util\Metrics\Function.php	/^        $npathStack = array();$/;"	v
numCalledClasses	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected $numCalledClasses = 0;$/;"	v
numCalledMethods	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected $numCalledMethods = 0;$/;"	v
numClasses	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected $numClasses = 0;$/;"	v
numCrappyMethods	D:\www\lib\phpunit\Util\Log\PMD\Rule\Project\CRAP.php	/^        $numCrappyMethods = 0;$/;"	v
numExecutableLines	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected $numExecutableLines = 0;$/;"	v
numExecutedLines	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected $numExecutedLines = 0;$/;"	v
numMethods	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected $numMethods = 0;$/;"	v
numTests	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                    $numTests = count($this->executedLines[$i]);$/;"	v
numberOfTests	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected $numberOfTests = array();$/;"	v
numericComparison	D:\www\lib\phpunit\Framework\Constraint\IsEqual.php	/^    protected function numericComparison($a, $b)$/;"	f
o	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^        $o = new stdClass;$/;"	v
obj	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^        $obj = new StdClass;$/;"	v
object	D:\www\lib\phpunit\Util\Log\PMD.php	/^                    $object = new $className;$/;"	v
objectHasAttribute	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function objectHasAttribute($attributeName)$/;"	f
of	D:\www\lib\phpunit\Framework\TestCase.php	/^     * Overwrite this attribute in a child class of TestCase.$/;"	c
offset	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^            $offset = 4;$/;"	v
old	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^        $old = $this->findMoney($aMoney->currency());$/;"	v
oldCoverageFlag	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                    $oldCoverageFlag = (int)$stmt->fetchColumn(1);$/;"	v
oldErrorHandler	D:\www\lib\phpunit\Framework\TestResult.php	/^            $oldErrorHandler = set_error_handler('PHPUnit_Util_ErrorHandler', E_USER_ERROR | E_NOTICE | E_STRICT);$/;"	v
onConsecutiveCalls	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function onConsecutiveCalls()$/;"	f
onSetUp	D:\www\lib\phpunit\Extensions\Database\ITester.php	/^    public function onSetUp();$/;"	f
onTearDown	D:\www\lib\phpunit\Extensions\Database\ITester.php	/^    public function onTearDown();$/;"	f
onTest	D:\www\lib\phpunit\Util\TestDox\ResultPrinter\Text.php	/^    protected function onTest($name)$/;"	f
once	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function once()$/;"	f
operationName	D:\www\lib\phpunit\Extensions\Database\Operation\Update.php	/^    protected $operationName = 'UPDATE';$/;"	v
operations	D:\www\lib\phpunit\Extensions\Database\Operation\Composite.php	/^    protected $operations = array();$/;"	v
opt	D:\www\lib\phpunit\Util\Getopt.php	/^            $opt = $arg{$i};$/;"	v
opt_arg	D:\www\lib\phpunit\Util\Getopt.php	/^            $opt_arg = null;$/;"	v
opt_len	D:\www\lib\phpunit\Util\Getopt.php	/^        $opt_len = strlen($opt);$/;"	v
opt_rest	D:\www\lib\phpunit\Util\Getopt.php	/^            $opt_rest = substr($long_opt, $opt_len);$/;"	v
opt_start	D:\www\lib\phpunit\Util\Getopt.php	/^            $opt_start = substr($long_opt, 0, $opt_len);$/;"	v
options	D:\www\lib\phpunit\TextUI\Command.php	/^            $options = PHPUnit_Util_Getopt::getopt($/;"	v
opts	D:\www\lib\phpunit\Util\PDO.php	/^                    $opts = explode( '&', $dsn );$/;"	v
or	D:\www\lib\phpunit\Util\Test.php	/^     * Returns the groups for a test class or method.$/;"	c
orderBy	D:\www\lib\phpunit\Extensions\Database\DB\DataSet.php	/^            $orderBy = 'ORDER BY ' . implode(' ASC, ', $primaryKeys) . ' ASC';$/;"	v
origMethodName	D:\www\lib\phpunit\Util\Skeleton.php	/^                            $origMethodName = $method->getName();$/;"	v
original	D:\www\lib\phpunit\Util\Report.php	/^        $original = array_keys($files);$/;"	v
original_tables	D:\www\lib\phpunit\Extensions\Database\DataSet\DataSetFilter.php	/^        $original_tables = $this->originalDataSet->getIterator($reverse);$/;"	v
other	D:\www\lib\phpunit\Framework\Constraint\IsEqual.php	/^                $other = $this->domToText($other);$/;"	v
otherMetaData	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractTable.php	/^        $otherMetaData = $other->getTableMetaData();$/;"	v
otherTableNames	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractDataSet.php	/^        $otherTableNames = $other->getTableNames();$/;"	v
out	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^    public static function factory($type, $out = NULL)$/;"	v
outFile	D:\www\lib\phpunit\Extensions\PhptTestCase.php	/^        $outFile      = $path . DIRECTORY_SEPARATOR . str_replace('.phpt', '.out', $base);$/;"	v
output	D:\www\lib\phpunit\Util\Fileloader.php	/^        $output = shell_exec($/;"	v
outputCallback	D:\www\lib\phpunit\Extensions\OutputTestCase.php	/^    protected $outputCallback = FALSE;$/;"	v
overridableMethods	D:\www\lib\phpunit\Util\Metrics\Class.php	/^            $overridableMethods = array();$/;"	v
overriddenMethods	D:\www\lib\phpunit\Util\Metrics\Class.php	/^                $overriddenMethods = 0;$/;"	v
package	D:\www\lib\phpunit\Util\Metrics\Project.php	/^                    $package   = $class->getPackage();$/;"	v
packageInformation	D:\www\lib\phpunit\Util\Metrics\Class.php	/^        $packageInformation = PHPUnit_Util_Class::getPackageInformation($className);$/;"	v
parameter	D:\www\lib\phpunit\Framework\MockObject\Matcher\Parameters.php	/^                $parameter = new PHPUnit_Framework_Constraint_IsEqual($parameter);$/;"	v
parameters	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    protected $parameters    = 0;$/;"	v
parametersMatcher	D:\www\lib\phpunit\Framework\MockObject\Matcher.php	/^    public $parametersMatcher = NULL;$/;"	v
parent	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    public function __construct($name, PHPUnit_Util_Report_Node $parent = NULL, array $executedLines, $yui = TRUE, $highlight = FALSE)$/;"	v
parentClass	D:\www\lib\phpunit\Util\Metrics\Class.php	/^        $parentClass = $this->class->getParentClass();$/;"	v
parentClassId	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $parentClassId   = 0;$/;"	v
parentClassName	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^                $parentClassName = $parentClass->getName();$/;"	v
parentId	D:\www\lib\phpunit\Util\Report\Node.php	/^                $parentId = $this->parent->getId();$/;"	v
parentName	D:\www\lib\phpunit\Util\Metrics\Class.php	/^                    $parentName = $parent->getName();$/;"	v
parseDSN	D:\www\lib\phpunit\Util\PDO.php	/^    public static function parseDSN( $dsn )$/;"	f
parseLongOption	D:\www\lib\phpunit\Util\Getopt.php	/^    protected static function parseLongOption($arg, $long_options, &$opts, &$args)$/;"	f
parseShortOption	D:\www\lib\phpunit\Util\Getopt.php	/^    protected static function parseShortOption($arg, $short_options, &$opts, &$args)$/;"	f
parsed	D:\www\lib\phpunit\Util\PDO.php	/^        $parsed = self::parseDSN($dsn);$/;"	v
pass	D:\www\lib\phpunit\Util\PDO.php	/^                $pass          = null;$/;"	v
path	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $path = $this->getPath();$/;"	v
pathIterator	D:\www\lib\phpunit\Runner\IncludePathTestCollector.php	/^        $pathIterator = new AppendIterator;$/;"	v
paths	D:\www\lib\phpunit\Util\Report.php	/^        $paths      = array_keys($files);$/;"	v
pause	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    protected function pause($wait)$/;"	f
pdoStatement	D:\www\lib\phpunit\Extensions\Database\DB\Table.php	/^        $pdoStatement = $databaseConnection->getConnection()->prepare(PHPUnit_Extensions_Database_DB_DataSet::buildTableSelect($tableMetaData));$/;"	v
percent	D:\www\lib\phpunit\Util\Report\Node.php	/^            $percent = 100;$/;"	v
pf	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $pf            = 0;$/;"	v
phpBinary	D:\www\lib\phpunit\Util\Fileloader.php	/^    public static $phpBinary = NULL;$/;"	v
phpConfiguration	D:\www\lib\phpunit\TextUI\TestRunner.php	/^            $phpConfiguration = $arguments['configuration']->getPHPConfiguration();$/;"	v
phpFile	D:\www\lib\phpunit\Extensions\PhptTestCase.php	/^        $phpFile      = $path . DIRECTORY_SEPARATOR . str_replace('.phpt', '.php', $base);$/;"	v
placeHolders	D:\www\lib\phpunit\Extensions\Database\Operation\Insert.php	/^        $placeHolders = implode(', ', array_fill(0, count($table->getTableMetaData()->getColumns()), '?'));$/;"	v
pmd	D:\www\lib\phpunit\Util\Log\PMD.php	/^        $pmd = $document->createElement('pmd');$/;"	v
pointer	D:\www\lib\phpunit\Util\Report.php	/^            $pointer = &$result;$/;"	v
port	D:\www\lib\phpunit\Util\PDO.php	/^                $port          = null;$/;"	v
pos	D:\www\lib\phpunit\Util\PDO.php	/^        if ( ( $pos = strpos( $dsn, ':\/\/' ) ) !== false )$/;"	v
prefix	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^    protected $prefix = 'Test';$/;"	v
prettifiedName	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^            $prettifiedName = $this->prettifier->prettifyTestMethod($/;"	v
prettifyTestClass	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^    public function prettifyTestClass($testClassName)$/;"	f
prettifyTestMethod	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^    public function prettifyTestMethod($testMethodName)$/;"	f
primaryKeys	D:\www\lib\phpunit\Extensions\Database\DataSet\DefaultTableMetaData.php	/^    public function __construct($tableName, Array $columns, Array $primaryKeys = array())$/;"	v
printDefect	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected function printDefect(PHPUnit_Framework_TestFailure $defect, $count)$/;"	f
printDefectHeader	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected function printDefectHeader(PHPUnit_Framework_TestFailure $defect, $count)$/;"	f
printDefectTrace	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected function printDefectTrace(PHPUnit_Framework_TestFailure $defect)$/;"	f
printDefects	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected function printDefects(array $defects, $count, $type)$/;"	f
printErrors	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected function printErrors(PHPUnit_Framework_TestResult $result)$/;"	f
printFailures	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected function printFailures(PHPUnit_Framework_TestResult $result)$/;"	f
printFooter	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected function printFooter(PHPUnit_Framework_TestResult $result)$/;"	f
printHeader	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected function printHeader($timeElapsed)$/;"	f
printIncompletes	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected function printIncompletes(PHPUnit_Framework_TestResult $result)$/;"	f
printResult	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    public function printResult(PHPUnit_Framework_TestResult $result)$/;"	f
printSkipped	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected function printSkipped(PHPUnit_Framework_TestResult $result)$/;"	f
printVersionString	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    public static function printVersionString()$/;"	f
printWaitPrompt	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    public function printWaitPrompt()$/;"	f
printer	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    protected $printer = NULL;$/;"	v
priority	D:\www\lib\phpunit\Util\Log\PMD\Rule\Project\CRAP.php	/^    public function __construct($threshold = array(5, 30), $priority = 1)$/;"	v
privateArray	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    protected $privateArray = array('baz');$/;"	v
privateAttribute	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    protected $privateAttribute = 'baz';$/;"	v
privateName	D:\www\lib\phpunit\Framework\Assert.php	/^            $privateName = sprintf($/;"	v
privateParentAttribute	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    protected $privateParentAttribute = 'parent';$/;"	v
privateStaticAttribute	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    protected static $privateStaticAttribute = 'baz';$/;"	v
privateStaticParentAttribute	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    protected static $privateStaticParentAttribute = 'parent';$/;"	v
process	D:\www\lib\phpunit\Util\Log\PMD.php	/^    public function process(PHPUnit_Framework_TestResult $result)$/;"	f
processFunctionOrMethod	D:\www\lib\phpunit\Util\Log\PMD.php	/^    protected function processFunctionOrMethod(DOMElement $element, $metrics, $package = '')$/;"	f
project	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $project = $document->createElement('project');$/;"	v
projectClasses	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectClasses             = 0;$/;"	v
projectConditionals	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectConditionals        = 0;$/;"	v
projectCoveredConditionals	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectCoveredConditionals = 0;$/;"	v
projectCoveredMethods	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectCoveredMethods      = 0;$/;"	v
projectCoveredStatements	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectCoveredStatements   = 0;$/;"	v
projectFiles	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectFiles               = 0;$/;"	v
projectLinesExecutable	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectLinesExecutable     = 0;$/;"	v
projectLinesExecuted	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectLinesExecuted       = 0;$/;"	v
projectLoc	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectLoc                 = 0;$/;"	v
projectMethods	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectMethods             = 0;$/;"	v
projectMetrics	D:\www\lib\phpunit\Util\Log\Metrics.php	/^        $projectMetrics = new PHPUnit_Util_Metrics_Project($files, $summary);$/;"	v
projectMetricsXML	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectMetricsXML = $document->createElement('metrics');$/;"	v
projectNcloc	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectNcloc               = 0;$/;"	v
projectStatements	D:\www\lib\phpunit\Util\Log\CodeCoverage\XML.php	/^        $projectStatements          = 0;$/;"	v
protectedArray	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    protected $protectedArray = array('bar');$/;"	v
protectedAttribute	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    protected $protectedAttribute = 'bar';$/;"	v
protectedName	D:\www\lib\phpunit\Framework\Assert.php	/^            $protectedName = '*' . $attributeName;$/;"	v
protectedStaticAttribute	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    protected static $protectedStaticAttribute = 'bar';$/;"	v
proto	D:\www\lib\phpunit\Util\PDO.php	/^            $proto       = $match[1];$/;"	v
proto_opts	D:\www\lib\phpunit\Util\PDO.php	/^        $proto_opts = rawurldecode( $proto_opts );$/;"	v
provides	D:\www\lib\phpunit\Extensions\Database\Operation\Insert.php	/^ * This class provides functionality for inserting rows from a dataset into a database.$/;"	c
publicArray	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    public $publicArray = array('foo');$/;"	v
publicAttribute	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    public $publicAttribute = 'foo';$/;"	v
publicMethods	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $publicMethods = 0;$/;"	v
publicStaticAttribute	D:\www\lib\phpunit\Tests\_files\ClassWithNonPublicAttributes.php	/^    public static $publicStaticAttribute = 'foo';$/;"	v
query	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccount.php	/^    	$query = "UPDATE bank_account SET balance = ? WHERE account_number = ?";$/;"	v
quoteSchemaObject	D:\www\lib\phpunit\Extensions\Database\DB\MetaData.php	/^    public function quoteSchemaObject($object)$/;"	f
readAttribute	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function readAttribute($classOrObject, $attributeName)$/;"	f
readFilterDirectories	D:\www\lib\phpunit\Util\Configuration.php	/^    protected function readFilterDirectories($query)$/;"	f
readFilterFiles	D:\www\lib\phpunit\Util\Configuration.php	/^    protected function readFilterFiles($query)$/;"	f
recursiveComparison	D:\www\lib\phpunit\Framework\Constraint\IsEqual.php	/^    protected function recursiveComparison($a, $b, $depth = 0)$/;"	f
reducePaths	D:\www\lib\phpunit\Util\Report.php	/^    protected static function reducePaths(&$files)$/;"	f
ref	D:\www\lib\phpunit\Util\Class.php	/^            $ref = '';$/;"	v
reference	D:\www\lib\phpunit\Util\Class.php	/^            $reference = '';$/;"	v
reflection	D:\www\lib\phpunit\Extensions\Database\DB\MetaData.php	/^        $reflection = new ReflectionClass($className);$/;"	v
registerClassWithDriver	D:\www\lib\phpunit\Extensions\Database\DB\MetaData.php	/^    public static function registerClassWithDriver($className, $pdoDriver)$/;"	f
registerId	D:\www\lib\phpunit\Framework\MockObject\InvocationMocker.php	/^    public function registerId($id, PHPUnit_Framework_MockObject_Builder_Match $builder)$/;"	f
relates	D:\www\lib\phpunit\Framework\MockObject\Builder\Namespace.php	/^ * This interface relates to PHPUnit_Framework_MockObject_Builder_Identity.$/;"	i
reload	D:\www\lib\phpunit\Runner\TestSuiteLoader.php	/^    public function reload(ReflectionClass $aClass);$/;"	f
removeDirectoryFromFilter	D:\www\lib\phpunit\Util\Filter.php	/^    public static function removeDirectoryFromFilter($directory, $suffix = '.php', $group = 'DEFAULT')$/;"	f
removeDirectoryFromWhitelist	D:\www\lib\phpunit\Util\Filter.php	/^    public static function removeDirectoryFromWhitelist($directory, $suffix = '.php')$/;"	f
removeFileFromFilter	D:\www\lib\phpunit\Util\Filter.php	/^    public static function removeFileFromFilter($filename, $group = 'DEFAULT')$/;"	f
removeFileFromWhitelist	D:\www\lib\phpunit\Util\Filter.php	/^    public static function removeFileFromWhitelist($filename)$/;"	f
removeListener	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function removeListener(PHPUnit_Framework_TestListener $listener)$/;"	f
render	D:\www\lib\phpunit\Util\Template.php	/^    public function render() {$/;"	f
renderItems	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^    protected function renderItems($lowUpperBound, $highLowerBound)$/;"	f
renderTo	D:\www\lib\phpunit\Util\Template.php	/^    public function renderTo($target) {$/;"	f
renderTotalItem	D:\www\lib\phpunit\Util\Report\Node.php	/^    protected function renderTotalItem($lowUpperBound, $highLowerBound, $directory = TRUE)$/;"	f
replaceOperation	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^		$replaceOperation = new PHPUnit_Extensions_Database_Operation_Replace();$/;"	v
represents	D:\www\lib\phpunit\Extensions\Database\Operation\Null.php	/^ * This class represents a null database operation.$/;"	c
requireClassFile	D:\www\lib\phpunit\Util\Skeleton.php	/^            $requireClassFile = sprintf($/;"	v
response	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^        $response = '';$/;"	v
result	D:\www\lib\phpunit\Util\Test.php	/^        $result = array();$/;"	v
returnValue	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function returnValue($value)$/;"	f
reverse	D:\www\lib\phpunit\Extensions\Database\DataSet\DefaultTableIterator.php	/^    public function __construct(Array $tables, $reverse = false)$/;"	v
rewind	D:\www\lib\phpunit\Util\TestSuiteIterator.php	/^    public function rewind()$/;"	f
right	D:\www\lib\phpunit\Util\Log\Database.php	/^        $right = (int)$stmt->fetchColumn();$/;"	v
root	D:\www\lib\phpunit\Util\Report.php	/^        $root = new PHPUnit_Util_Report_Node_Directory($commonPath, NULL);$/;"	v
rootId	D:\www\lib\phpunit\Util\Log\Database.php	/^        $rootId = $this->dbh->lastInsertId();$/;"	v
roots	D:\www\lib\phpunit\Util\Metrics\Project.php	/^    protected $roots   = 0;$/;"	v
rowString	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractTable.php	/^        $rowString = '';$/;"	v
rowToString	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractTable.php	/^    protected function rowToString(Array $row)$/;"	f
rowValues	D:\www\lib\phpunit\Extensions\Database\DataSet\XmlDataSet.php	/^                $rowValues = array();$/;"	v
rows	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^        $rows     = $xpath->query('body\/table\/tbody\/tr');$/;"	v
rule	D:\www\lib\phpunit\Util\Log\PMD.php	/^                $rule = explode('_', $className);$/;"	v
ruleName	D:\www\lib\phpunit\Util\Log\PMD.php	/^        foreach ($this->rules['project'] as $ruleName => $rule) {$/;"	v
rules	D:\www\lib\phpunit\Util\Log\PMD.php	/^    protected $rules = array($/;"	v
run	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    public static function run($test, array $arguments = array())$/;"	f
runAndWait	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    public static function runAndWait(PHPUnit_Framework_Test $suite)$/;"	f
runBare	D:\www\lib\phpunit\Framework\TestCase.php	/^    public function runBare()$/;"	f
runDefaultAssertions	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    private function runDefaultAssertions($action)$/;"	f
runFailed	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    protected function runFailed($message)$/;"	f
runSelenese	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function runSelenese($filename)$/;"	f
runTest	D:\www\lib\phpunit\Tests\_files\WasRun.php	/^    protected function runTest()$/;"	f
runTests	D:\www\lib\phpunit\Framework\TestResult.php	/^    protected $runTests = 0;$/;"	v
runner	D:\www\lib\phpunit\TextUI\Command.php	/^        $runner    = new PHPUnit_TextUI_TestRunner;$/;"	v
schemaObjectQuoteChar	D:\www\lib\phpunit\Extensions\Database\DB\MetaData.php	/^    protected $schemaObjectQuoteChar = '"';$/;"	v
scope	D:\www\lib\phpunit\Util\Metrics\Function.php	/^            $scope = 'global';$/;"	v
seconds	D:\www\lib\phpunit\Util\Timer.php	/^        $seconds = sprintf('%02d', $time - 60 * 60 * $hours - 60 * $minutes);$/;"	v
secondsToTimeString	D:\www\lib\phpunit\Util\Timer.php	/^    public static function secondsToTimeString($time)$/;"	f
selectArgs	D:\www\lib\phpunit\Extensions\Database\Operation\Replace.php	/^                $selectArgs = $this->buildOperationArguments($databaseTableMetaData, $table, $i);$/;"	v
selectQuery	D:\www\lib\phpunit\Extensions\Database\Operation\Replace.php	/^            $selectQuery = $this->buildOperationQuery($databaseTableMetaData, $table, $connection);$/;"	v
selectStatement	D:\www\lib\phpunit\Extensions\Database\Operation\Replace.php	/^            $selectStatement = $connection->getConnection()->prepare($selectQuery);$/;"	v
sessionId	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    protected static $sessionId = array();$/;"	v
set	D:\www\lib\phpunit\Extensions\OutputTestCase.php	/^            $set = TRUE;$/;"	v
setAutoStop	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function setAutoStop($autoStop)$/;"	f
setBalance	D:\www\lib\phpunit\Samples\BankAccount\BankAccount.php	/^    protected function setBalance($balance)$/;"	f
setBrowser	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function setBrowser($browser)$/;"	f
setBrowserUrl	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function setBrowserUrl($browserUrl)$/;"	f
setConstraints	D:\www\lib\phpunit\Framework\Constraint\Xor.php	/^    public function setConstraints(array $constraints)$/;"	f
setCoverage	D:\www\lib\phpunit\Util\Metrics\Function.php	/^    public function setCoverage(array &$codeCoverage)$/;"	f
setDataSet	D:\www\lib\phpunit\Extensions\Database\ITester.php	/^    public function setDataSet(PHPUnit_Extensions_Database_DataSet_IDataSet $dataSet);$/;"	f
setExpectedException	D:\www\lib\phpunit\Framework\TestCase.php	/^    public function setExpectedException($exceptionName, $exceptionMessage = '')$/;"	f
setFile	D:\www\lib\phpunit\Util\Template.php	/^    public function setFile($file) {$/;"	f
setFilter	D:\www\lib\phpunit\Util\Filter.php	/^    public static function setFilter($filter)$/;"	f
setFilterIterator	D:\www\lib\phpunit\Runner\IncludePathTestCollector.php	/^    public function setFilterIterator($filterIterator)$/;"	f
setHost	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function setHost($host)$/;"	f
setLoader	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    public static function setLoader(PHPUnit_Runner_TestSuiteLoader $loader)$/;"	f
setLocale	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function setLocale()$/;"	f
setMaxRunningTime	D:\www\lib\phpunit\Extensions\PerformanceTestCase.php	/^    public function setMaxRunningTime($maxRunningTime)$/;"	f
setName	D:\www\lib\phpunit\Framework\TestSuite.php	/^    public function setName($name)$/;"	f
setOutputCallback	D:\www\lib\phpunit\Extensions\OutputTestCase.php	/^    public function setOutputCallback($callback)$/;"	f
setPort	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function setPort($port)$/;"	f
setPrefix	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^    public function setPrefix($prefix)$/;"	f
setPrinter	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    public function setPrinter(PHPUnit_TextUI_ResultPrinter $resultPrinter)$/;"	f
setProject	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    public function setProject(PHPUnit_Util_Metrics_Project $project)$/;"	f
setSchema	D:\www\lib\phpunit\Extensions\Database\ITester.php	/^    public function setSchema($schema);$/;"	f
setSetUpOperation	D:\www\lib\phpunit\Extensions\Database\ITester.php	/^    public function setSetUpOperation(PHPUnit_Extensions_Database_Operation_IDatabaseOperation $setUpOperation);$/;"	f
setSharedFixture	D:\www\lib\phpunit\Framework\TestSuite.php	/^    public function setSharedFixture($sharedFixture)$/;"	f
setSleep	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function setSleep($seconds)$/;"	f
setStatement	D:\www\lib\phpunit\Extensions\Database\Operation\Update.php	/^        $setStatement = 'SET ' . implode(', ', $this->buildPreparedColumnArray($columns, $connection));$/;"	v
setSuffix	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^    public function setSuffix($suffix)$/;"	f
setTableMetaData	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractTable.php	/^    protected function setTableMetaData(PHPUnit_Extensions_Database_DataSet_ITableMetaData $tableMetaData)$/;"	f
setTearDownOperation	D:\www\lib\phpunit\Extensions\Database\ITester.php	/^    public function setTearDownOperation(PHPUnit_Extensions_Database_Operation_IDatabaseOperation $tearDownOperation);$/;"	f
setTemplateVars	D:\www\lib\phpunit\Util\Report\Node.php	/^   protected function setTemplateVars(PHPUnit_Util_Template $template, $title, $charset)$/;"	f
setTimeout	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    public function setTimeout($timeout)$/;"	f
setUp	D:\www\lib\phpunit\Tests\_files\TornDown5.php	/^    protected function setUp()$/;"	f
setValue	D:\www\lib\phpunit\Extensions\Database\DataSet\DefaultTable.php	/^    public function setValue($row, $column, $value)$/;"	f
setVar	D:\www\lib\phpunit\Util\Template.php	/^    public function setVar(array $values, $merge = TRUE) {$/;"	f
setWriteDocument	D:\www\lib\phpunit\Util\Log\XML.php	/^    public function setWriteDocument($flag)$/;"	f
short	D:\www\lib\phpunit\Util\Type.php	/^    public static function toString($value, $short = FALSE)$/;"	v
shortenedExport	D:\www\lib\phpunit\Util\Type.php	/^    public static function shortenedExport($value)$/;"	f
shortenedString	D:\www\lib\phpunit\Util\Type.php	/^    public static function shortenedString($string)$/;"	f
should	D:\www\lib\phpunit\Framework\MockObject\Builder\InvocationMocker.php	/^ * more natural way of reading the expectation. This class should be together$/;"	c
shouldStop	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function shouldStop()$/;"	f
showError	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    public static function showError($message)$/;"	f
showHelp	D:\www\lib\phpunit\TextUI\Command.php	/^    public static function showHelp()$/;"	f
simplify	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^    protected function simplify()$/;"	f
skeleton	D:\www\lib\phpunit\TextUI\Command.php	/^            $skeleton = new PHPUnit_Util_Skeleton($/;"	v
skipped	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function skipped()$/;"	f
skippedCount	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function skippedCount()$/;"	f
sleep	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    protected $sleep = 0;$/;"	v
socket	D:\www\lib\phpunit\Util\PDO.php	/^                $socket        = null;$/;"	v
source	D:\www\lib\phpunit\Util\Metrics\Function.php	/^        $source = PHPUnit_Util_Class::getMethodSource($/;"	v
stack	D:\www\lib\phpunit\Util\Metrics\Function.php	/^        $stack      = array();$/;"	v
start	D:\www\lib\phpunit\Util\Timer.php	/^    public static function start()$/;"	f
startClass	D:\www\lib\phpunit\Util\TestDox\ResultPrinter\Text.php	/^    protected function startClass($name)$/;"	f
startLine	D:\www\lib\phpunit\Util\Test.php	/^                        $startLine = $_method->getStartLine();$/;"	v
startLines	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $startLines = array();$/;"	v
startPos	D:\www\lib\phpunit\Framework\ComparisonFailure\String.php	/^        $startPos = $i;$/;"	v
startRun	D:\www\lib\phpunit\Util\TestDox\ResultPrinter\HTML.php	/^    protected function startRun()$/;"	f
startTest	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^    public function startTest(PHPUnit_Framework_Test $test)$/;"	f
startTestSuite	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^    public function startTestSuite(PHPUnit_Framework_TestSuite $suite)$/;"	f
startTimes	D:\www\lib\phpunit\Util\Timer.php	/^    protected static $startTimes = array();$/;"	v
statement	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccount.php	/^    	$statement = $this->pdo->prepare($query);$/;"	v
staticProperties	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^        $staticProperties = $class->getStaticProperties();$/;"	v
statistics	D:\www\lib\phpunit\Util\Metrics\Function.php	/^        $statistics = PHPUnit_Util_CodeCoverage::getStatistics($/;"	v
status	D:\www\lib\phpunit\Framework\TestCase.php	/^        return $status == PHPUnit_Runner_BaseTestRunner::STATUS_FAILURE ||$/;"	v
stmt	D:\www\lib\phpunit\Util\Log\Database.php	/^        $stmt = $this->dbh->prepare($/;"	v
stmt2	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^        $stmt2 = $this->dbh->prepare($/;"	v
stmt3	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^            $stmt3 = $this->dbh->prepare($/;"	v
stmtInsertClass	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^            $stmtInsertClass = $this->dbh->prepare($/;"	v
stmtInsertFunction	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^            $stmtInsertFunction = $this->dbh->prepare($/;"	v
stmtInsertMethod	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^            $stmtInsertMethod = $this->dbh->prepare($/;"	v
stmtSelectClassId	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^            $stmtSelectClassId = $this->dbh->prepare($/;"	v
stmtSelectFunctionId	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^            $stmtSelectFunctionId = $this->dbh->prepare($/;"	v
stmtSelectMethodId	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^            $stmtSelectMethodId = $this->dbh->prepare($/;"	v
stmtUpdateResultAndTime	D:\www\lib\phpunit\Util\Log\Database.php	/^        $stmtUpdateResultAndTime = $this->dbh->prepare($/;"	v
stmtUpdateTime	D:\www\lib\phpunit\Util\Log\Database.php	/^        $stmtUpdateTime = $this->dbh->prepare($/;"	v
stop	D:\www\lib\phpunit\Util\Timer.php	/^    public static function stop()$/;"	f
stopOnFailure	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function stopOnFailure($flag)$/;"	f
storeCodeCoverage	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^    public function storeCodeCoverage(PHPUnit_Framework_TestResult $result, $runId, $revision, $commonPath = '')$/;"	f
storeResult	D:\www\lib\phpunit\Util\Log\Database.php	/^    protected function storeResult($result = PHPUnit_Runner_BaseTestRunner::STATUS_PASSED, $time = 0, $message = '')$/;"	f
storedClasses	D:\www\lib\phpunit\Util\Log\CodeCoverage\Database.php	/^        $storedClasses  = array();$/;"	v
str	D:\www\lib\phpunit\Util\PDO.php	/^        \/\/ $str => phptype(dbsyntax)$/;"	v
string	D:\www\lib\phpunit\Util\Type.php	/^        $string = preg_replace('#\\n|\\r\\n|\\r#', ' ', $string);$/;"	v
stringContains	D:\www\lib\phpunit\Framework\Assert.php	/^    public static function stringContains($string, $case = TRUE)$/;"	f
stringFlag	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $stringFlag = FALSE;$/;"	v
strings	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^    protected $strings = array();$/;"	v
stub	D:\www\lib\phpunit\Framework\MockObject\Matcher.php	/^    public $stub = NULL;$/;"	v
subtract	D:\www\lib\phpunit\Samples\Money\MoneyBag.php	/^    public function subtract(IMoney $m)$/;"	f
suffix	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^    protected $suffix = 'Test';$/;"	v
suite	D:\www\lib\phpunit\Util\Configuration.php	/^                $suite = new PHPUnit_Framework_TestSuite;$/;"	v
suiteClassFile	D:\www\lib\phpunit\Runner\TestSuiteLoader.php	/^    public function load($suiteClassName, $suiteClassFile = '');$/;"	v
suiteClassName	D:\www\lib\phpunit\Runner\StandardTestSuiteLoader.php	/^        $suiteClassName = str_replace('.php', '', $suiteClassName);$/;"	v
suiteMethod	D:\www\lib\phpunit\Runner\BaseTestRunner.php	/^            $suiteMethod = $testClass->getMethod(self::SUITE_METHODNAME);$/;"	v
sum	D:\www\lib\phpunit\Util\Metrics\Class.php	/^            $sum = $this->ce + $this->ca;$/;"	v
summary	D:\www\lib\phpunit\Util\Log\PMD.php	/^        $summary      = PHPUnit_Util_CodeCoverage::getSummary($codeCoverage);$/;"	v
syntaxCheck	D:\www\lib\phpunit\Util\Fileloader.php	/^    public static function checkAndLoad($filename, $syntaxCheck = TRUE)$/;"	v
t	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^        $t      = new TornDown4;$/;"	v
table	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractXmlDataSet.php	/^            $table = $this->getOrCreateTable($tableName, $tableColumns[$tableName]);$/;"	v
table1	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\RowBasedTest.php	/^		$table1 = new PHPUnit_Extensions_Database_DataSet_DefaultTable($/;"	v
table1MetaData	D:\www\lib\phpunit\Tests\Extensions\Database\DataSet\XmlDataSetsTest.php	/^		$table1MetaData = new PHPUnit_Extensions_Database_DataSet_DefaultTableMetaData($/;"	v
table2	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\RowBasedTest.php	/^		$table2 = new PHPUnit_Extensions_Database_DataSet_DefaultTable($/;"	v
table2MetaData	D:\www\lib\phpunit\Tests\Extensions\Database\DataSet\XmlDataSetsTest.php	/^		$table2MetaData = new PHPUnit_Extensions_Database_DataSet_DefaultTableMetaData($/;"	v
tableColumns	D:\www\lib\phpunit\Extensions\Database\DataSet\DefaultTable.php	/^        $tableColumns = $this->getTableMetaData()->getColumns();$/;"	v
tableInstanceColumns	D:\www\lib\phpunit\Extensions\Database\DataSet\XmlDataSet.php	/^            $tableInstanceColumns = array();$/;"	v
tableMetaData	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractXmlDataSet.php	/^            $tableMetaData = new PHPUnit_Extensions_Database_DataSet_DefaultTableMetaData($tableName, $tableColumns);$/;"	v
tableName	D:\www\lib\phpunit\Extensions\Database\DataSet\XmlDataSet.php	/^            $tableName = (string)$tableElement['name'];$/;"	v
tableNames	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractDataSet.php	/^        $tableNames = array();$/;"	v
tableString	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractTable.php	/^        $tableString = $lineSeperator;$/;"	v
tableValues	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractXmlDataSet.php	/^        $tableValues = array();$/;"	v
tables	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\RowBasedTest.php	/^		$tables = array($/;"	v
target	D:\www\lib\phpunit\Util\Configuration.php	/^            $target = (string)$log->getAttribute('target');$/;"	v
tearDown	D:\www\lib\phpunit\Tests\_files\TornDown4.php	/^    protected function tearDown()$/;"	f
template	D:\www\lib\phpunit\Util\Template.php	/^    protected $template = '';$/;"	v
test	D:\www\lib\phpunit\TextUI\TestRunner.php	/^            $test = new PHPUnit_Framework_TestSuite($test);$/;"	v
test2	D:\www\lib\phpunit\Tests\_files\InheritedTestCase.php	/^    public function test2()$/;"	f
testAccountBalanceDeposits	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccountDBTestMySQL.php	/^    public function testAccountBalanceDeposits()$/;"	f
testAccountBalanceWithdrawals	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccountDBTestMySQL.php	/^    public function testAccountBalanceWithdrawals()$/;"	f
testAddTestSuite	D:\www\lib\phpunit\Tests\Framework\SuiteTest.php	/^    public function testAddTestSuite()$/;"	f
testAssertArrayContainsObject	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertArrayContainsObject()$/;"	f
testAssertArrayContainsOnlyIntegers	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertArrayContainsOnlyIntegers()$/;"	f
testAssertArrayContainsOnlyStdClass	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertArrayContainsOnlyStdClass()$/;"	f
testAssertArrayContainsString	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertArrayContainsString()$/;"	f
testAssertArrayEqualsArray	D:\www\lib\phpunit\Samples\FailureTest.php	/^    public function testAssertArrayEqualsArray()$/;"	f
testAssertArrayHasIntegerKey	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertArrayHasIntegerKey()$/;"	f
testAssertArrayHasStringKey	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertArrayHasStringKey()$/;"	f
testAssertArrayNotContainsObject	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertArrayNotContainsObject()$/;"	f
testAssertArrayNotContainsOnlyIntegers	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertArrayNotContainsOnlyIntegers()$/;"	f
testAssertArrayNotContainsOnlyStdClass	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertArrayNotContainsOnlyStdClass()$/;"	f
testAssertArrayNotContainsString	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertArrayNotContainsString()$/;"	f
testAssertArrayNotHasIntegerKey	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertArrayNotHasIntegerKey()$/;"	f
testAssertArrayNotHasStringKey	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertArrayNotHasStringKey()$/;"	f
testAssertEqualsArray	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsArray()$/;"	f
testAssertEqualsArrayFloatDelta	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsArrayFloatDelta()$/;"	f
testAssertEqualsArrayOfArrayFloatDelta	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsArrayOfArrayFloatDelta()$/;"	f
testAssertEqualsArrayStructFloatDelta	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsArrayStructFloatDelta()$/;"	f
testAssertEqualsDOMDocument	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsDOMDocument()$/;"	f
testAssertEqualsDOMDocument2	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsDOMDocument2()$/;"	f
testAssertEqualsDOMDocument3	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsDOMDocument3()$/;"	f
testAssertEqualsDOMDocument4	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsDOMDocument4()$/;"	f
testAssertEqualsDOMDocument5	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsDOMDocument5()$/;"	f
testAssertEqualsDOMDocument6	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsDOMDocument6()$/;"	f
testAssertEqualsDOMDocument7	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsDOMDocument7()$/;"	f
testAssertEqualsDOMDocument8	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsDOMDocument8()$/;"	f
testAssertEqualsDOMDocument9	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsDOMDocument9()$/;"	f
testAssertEqualsFloat	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsFloat()$/;"	f
testAssertEqualsFloatDelta	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsFloatDelta()$/;"	f
testAssertEqualsInteger	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsInteger()$/;"	f
testAssertEqualsObject	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsObject()$/;"	f
testAssertEqualsString	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsString()$/;"	f
testAssertEqualsStructFloatDelta	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertEqualsStructFloatDelta()$/;"	f
testAssertFalse	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertFalse()$/;"	f
testAssertFileExists	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertFileExists()$/;"	f
testAssertFileNotExists	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertFileNotExists()$/;"	f
testAssertIntegerEqualsInteger	D:\www\lib\phpunit\Samples\FailureTest.php	/^    public function testAssertIntegerEqualsInteger()$/;"	f
testAssertIteratorContainsObject	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertIteratorContainsObject()$/;"	f
testAssertIteratorContainsString	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertIteratorContainsString()$/;"	f
testAssertNotEqualsArray	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotEqualsArray()$/;"	f
testAssertNotEqualsArrayFloatDelta	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotEqualsArrayFloatDelta()$/;"	f
testAssertNotEqualsArrayOfArrayFloatDelta	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotEqualsArrayOfArrayFloatDelta()$/;"	f
testAssertNotEqualsArrayStructFloatDelta	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotEqualsArrayStructFloatDelta()$/;"	f
testAssertNotEqualsFloat	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotEqualsFloat()$/;"	f
testAssertNotEqualsFloatDelta	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotEqualsFloatDelta()$/;"	f
testAssertNotEqualsInteger	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotEqualsInteger()$/;"	f
testAssertNotEqualsObject	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotEqualsObject()$/;"	f
testAssertNotEqualsString	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotEqualsString()$/;"	f
testAssertNotEqualsStructFloatDelta	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotEqualsStructFloatDelta()$/;"	f
testAssertNotNull	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotNull()$/;"	f
testAssertNotRegExp	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotRegExp()$/;"	f
testAssertNotSame	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotSame()$/;"	f
testAssertNotSame2	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotSame2()$/;"	f
testAssertNotSameFailsNull	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotSameFailsNull()$/;"	f
testAssertNotTypeArray	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotTypeArray()$/;"	f
testAssertNotTypeBool	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotTypeBool()$/;"	f
testAssertNotTypeClass	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotTypeClass()$/;"	f
testAssertNotTypeFloat	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotTypeFloat()$/;"	f
testAssertNotTypeInteger	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotTypeInteger()$/;"	f
testAssertNotTypeNull	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotTypeNull()$/;"	f
testAssertNotTypeObject	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotTypeObject()$/;"	f
testAssertNotTypeString	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNotTypeString()$/;"	f
testAssertNull	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertNull()$/;"	f
testAssertNullEqualsString	D:\www\lib\phpunit\Samples\FailureTest.php	/^    public function testAssertNullEqualsString()$/;"	f
testAssertObjectEqualsObject	D:\www\lib\phpunit\Samples\FailureTest.php	/^    public function testAssertObjectEqualsObject()$/;"	f
testAssertObjectHasAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertObjectHasAttribute()$/;"	f
testAssertObjectNotHasAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertObjectNotHasAttribute()$/;"	f
testAssertObjectSameNull	D:\www\lib\phpunit\Samples\FailureTest.php	/^    public function testAssertObjectSameNull()$/;"	f
testAssertObjectSameObject	D:\www\lib\phpunit\Samples\FailureTest.php	/^    public function testAssertObjectSameObject()$/;"	f
testAssertPrivateAttributeContains	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPrivateAttributeContains()$/;"	f
testAssertPrivateAttributeEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPrivateAttributeEquals()$/;"	f
testAssertPrivateAttributeNotContains	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPrivateAttributeNotContains()$/;"	f
testAssertPrivateAttributeNotEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPrivateAttributeNotEquals()$/;"	f
testAssertPrivateStaticAttributeEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPrivateStaticAttributeEquals()$/;"	f
testAssertPrivateStaticAttributeNotEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPrivateStaticAttributeNotEquals()$/;"	f
testAssertProtectedAttributeContains	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertProtectedAttributeContains()$/;"	f
testAssertProtectedAttributeEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertProtectedAttributeEquals()$/;"	f
testAssertProtectedAttributeNotContains	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertProtectedAttributeNotContains()$/;"	f
testAssertProtectedAttributeNotEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertProtectedAttributeNotEquals()$/;"	f
testAssertProtectedStaticAttributeEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertProtectedStaticAttributeEquals()$/;"	f
testAssertProtectedStaticAttributeNotEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertProtectedStaticAttributeNotEquals()$/;"	f
testAssertPublicAttributeContains	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPublicAttributeContains()$/;"	f
testAssertPublicAttributeContainsOnly	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPublicAttributeContainsOnly()$/;"	f
testAssertPublicAttributeEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPublicAttributeEquals()$/;"	f
testAssertPublicAttributeNotContains	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPublicAttributeNotContains()$/;"	f
testAssertPublicAttributeNotContainsOnly	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPublicAttributeNotContainsOnly()$/;"	f
testAssertPublicAttributeNotEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPublicAttributeNotEquals()$/;"	f
testAssertPublicAttributeNotSame	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPublicAttributeNotSame()$/;"	f
testAssertPublicAttributeSame	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPublicAttributeSame()$/;"	f
testAssertPublicStaticAttributeEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPublicStaticAttributeEquals()$/;"	f
testAssertPublicStaticAttributeNotEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertPublicStaticAttributeNotEquals()$/;"	f
testAssertRegExp	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertRegExp()$/;"	f
testAssertSame	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertSame()$/;"	f
testAssertSame2	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertSame2()$/;"	f
testAssertStringContainsString	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertStringContainsString()$/;"	f
testAssertStringEqualsNumeric	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertStringEqualsNumeric()$/;"	f
testAssertStringEqualsNumeric2	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertStringEqualsNumeric2()$/;"	f
testAssertStringEqualsString	D:\www\lib\phpunit\Samples\FailureTest.php	/^    public function testAssertStringEqualsString()$/;"	f
testAssertStringNotContainsString	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertStringNotContainsString()$/;"	f
testAssertTextEqualsText	D:\www\lib\phpunit\Samples\FailureTest.php	/^    public function testAssertTextEqualsText()$/;"	f
testAssertTextSameText	D:\www\lib\phpunit\Samples\FailureTest.php	/^    public function testAssertTextSameText()$/;"	f
testAssertThatAnything	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatAnything()$/;"	f
testAssertThatAnythingAndAnything	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatAnythingAndAnything()$/;"	f
testAssertThatAnythingOrAnything	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatAnythingOrAnything()$/;"	f
testAssertThatAnythingXorNotAnything	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatAnythingXorNotAnything()$/;"	f
testAssertThatArrayHasKey	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatArrayHasKey()$/;"	f
testAssertThatAttributeEqualTo	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatAttributeEqualTo()$/;"	f
testAssertThatAttributeEquals	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatAttributeEquals()$/;"	f
testAssertThatClassHasAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatClassHasAttribute()$/;"	f
testAssertThatClassHasStaticAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatClassHasStaticAttribute()$/;"	f
testAssertThatContains	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatContains()$/;"	f
testAssertThatContainsOnly	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatContainsOnly()$/;"	f
testAssertThatEqualTo	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatEqualTo()$/;"	f
testAssertThatFileExists	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatFileExists()$/;"	f
testAssertThatGreaterThan	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatGreaterThan()$/;"	f
testAssertThatGreaterThanOrEqual	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatGreaterThanOrEqual()$/;"	f
testAssertThatIdenticalTo	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatIdenticalTo()$/;"	f
testAssertThatIsInstanceOf	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatIsInstanceOf()$/;"	f
testAssertThatIsType	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatIsType()$/;"	f
testAssertThatLessThan	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatLessThan()$/;"	f
testAssertThatLessThanOrEqual	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatLessThanOrEqual()$/;"	f
testAssertThatMatchesRegularExpression	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatMatchesRegularExpression()$/;"	f
testAssertThatObjectHasAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatObjectHasAttribute()$/;"	f
testAssertThatStringContains	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertThatStringContains()$/;"	f
testAssertTrue	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertTrue()$/;"	f
testAssertTypeArray	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertTypeArray()$/;"	f
testAssertTypeBool	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertTypeBool()$/;"	f
testAssertTypeClass	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertTypeClass()$/;"	f
testAssertTypeFloat	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertTypeFloat()$/;"	f
testAssertTypeInteger	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertTypeInteger()$/;"	f
testAssertTypeNull	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertTypeNull()$/;"	f
testAssertTypeObject	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertTypeObject()$/;"	f
testAssertTypeString	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertTypeString()$/;"	f
testAssertXmlFileEqualsXmlFile	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertXmlFileEqualsXmlFile()$/;"	f
testAssertXmlFileNotEqualsXmlFile	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertXmlFileNotEqualsXmlFile()$/;"	f
testAssertXmlStringEqualsXmlString	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertXmlStringEqualsXmlString()$/;"	f
testAssertXmlStringNotEqualsXmlString	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAssertXmlStringNotEqualsXmlString()$/;"	f
testAt	D:\www\lib\phpunit\Framework\TestSuite.php	/^    public function testAt($index)$/;"	f
testAttributeGreaterThan	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAttributeGreaterThan()$/;"	f
testAttributeGreaterThanOrEqual	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAttributeGreaterThanOrEqual()$/;"	f
testAttributeLessThan	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAttributeLessThan()$/;"	f
testAttributeLessThanOrEqual	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testAttributeLessThanOrEqual()$/;"	f
testBagMultiply	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testBagMultiply()$/;"	f
testBagNegate	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testBagNegate()$/;"	f
testBagNotEquals	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testBagNotEquals()$/;"	f
testBagSimpleAdd	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testBagSimpleAdd()$/;"	f
testBagSubtract	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testBagSubtract()$/;"	f
testBagSumAdd	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testBagSumAdd()$/;"	f
testBalanceCannotBecomeNegative	D:\www\lib\phpunit\Samples\BankAccount\BankAccountTest.php	/^    public function testBalanceCannotBecomeNegative()$/;"	f
testBalanceCannotBecomeNegative2	D:\www\lib\phpunit\Samples\BankAccount\BankAccountTest.php	/^    public function testBalanceCannotBecomeNegative2()$/;"	f
testBalanceIsInitiallyZero	D:\www\lib\phpunit\Samples\BankAccount\BankAccountTest.php	/^    public function testBalanceIsInitiallyZero()$/;"	f
testCSS	D:\www\lib\phpunit\Util\Report\Node\File.php	/^                                                $testCSS = '';$/;"	v
testCase	D:\www\lib\phpunit\Util\Log\XML.php	/^        $testCase = $this->document->createElement('testcase');$/;"	v
testCaseToString	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testCaseToString()$/;"	f
testCaterForUserDefinedPrefix	D:\www\lib\phpunit\Tests\Util\TestDox\NamePrettifierTest.php	/^    public function testCaterForUserDefinedPrefix()$/;"	f
testCaterForUserDefinedSuffix	D:\www\lib\phpunit\Tests\Util\TestDox\NamePrettifierTest.php	/^    public function testCaterForUserDefinedSuffix()$/;"	f
testClass	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^    protected $testClass = '';$/;"	v
testClassHasPublicAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testClassHasPublicAttribute()$/;"	f
testClassHasPublicStaticAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testClassHasPublicStaticAttribute()$/;"	f
testClassNotHasPublicAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testClassNotHasPublicAttribute()$/;"	f
testClassNotHasPublicStaticAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testClassNotHasPublicStaticAttribute()$/;"	f
testClick	D:\www\lib\phpunit\Tests\Extensions\SeleniumTestCaseTest.php	/^    public function testClick()$/;"	f
testCollector	D:\www\lib\phpunit\Util\Configuration.php	/^                $testCollector = new PHPUnit_Runner_IncludePathTestCollector($/;"	v
testComparisonErrorEndSame	D:\www\lib\phpunit\Tests\Framework\ComparisonFailureTest.php	/^    public function testComparisonErrorEndSame()$/;"	f
testComparisonErrorEndSameComplete	D:\www\lib\phpunit\Tests\Framework\ComparisonFailureTest.php	/^    public function testComparisonErrorEndSameComplete()$/;"	f
testComparisonErrorMessage	D:\www\lib\phpunit\Tests\Framework\ComparisonFailureTest.php	/^    public function testComparisonErrorMessage()$/;"	f
testComparisonErrorOverlapingMatches	D:\www\lib\phpunit\Tests\Framework\ComparisonFailureTest.php	/^    public function testComparisonErrorOverlapingMatches()$/;"	f
testComparisonErrorOverlapingMatches2	D:\www\lib\phpunit\Tests\Framework\ComparisonFailureTest.php	/^    public function testComparisonErrorOverlapingMatches2()$/;"	f
testComparisonErrorStartAndEndSame	D:\www\lib\phpunit\Tests\Framework\ComparisonFailureTest.php	/^    public function testComparisonErrorStartAndEndSame()$/;"	f
testComparisonErrorStartSame	D:\www\lib\phpunit\Tests\Framework\ComparisonFailureTest.php	/^    public function testComparisonErrorStartSame()$/;"	f
testComparisonErrorStartSameComplete	D:\www\lib\phpunit\Tests\Framework\ComparisonFailureTest.php	/^    public function testComparisonErrorStartSameComplete()$/;"	f
testConstraintArrayHasKey	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintArrayHasKey()$/;"	f
testConstraintArrayNotHasKey	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintArrayNotHasKey()$/;"	f
testConstraintFileExists	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintFileExists()$/;"	f
testConstraintFileNotExists	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintFileNotExists()$/;"	f
testConstraintGreaterThan	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintGreaterThan()$/;"	f
testConstraintIsAnything	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintIsAnything()$/;"	f
testConstraintIsEqual	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintIsEqual()$/;"	f
testConstraintIsIdentical	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintIsIdentical()$/;"	f
testConstraintIsInstanceOf	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintIsInstanceOf()$/;"	f
testConstraintIsNotEqual	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintIsNotEqual()$/;"	f
testConstraintIsNotIdentical	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintIsNotIdentical()$/;"	f
testConstraintIsNotInstanceOf	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintIsNotInstanceOf()$/;"	f
testConstraintIsNotType	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintIsNotType()$/;"	f
testConstraintIsType	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintIsType()$/;"	f
testConstraintLessThan	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintLessThan()$/;"	f
testConstraintNotGreaterThan	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintNotGreaterThan()$/;"	f
testConstraintNotIsAnything	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintNotIsAnything()$/;"	f
testConstraintNotLessThan	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintNotLessThan()$/;"	f
testConstraintObjectHasAttribute	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintObjectHasAttribute()$/;"	f
testConstraintObjectNotHasAttribute	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintObjectNotHasAttribute()$/;"	f
testConstraintPCREMatch	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintPCREMatch()$/;"	f
testConstraintPCRENotMatch	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintPCRENotMatch()$/;"	f
testConstraintStringContains	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintStringContains()$/;"	f
testConstraintStringNotContains	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintStringNotContains()$/;"	f
testConstraintTraversableContains	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintTraversableContains()$/;"	f
testConstraintTraversableNotContains	D:\www\lib\phpunit\Tests\Framework\ConstraintTest.php	/^    public function testConstraintTraversableNotContains()$/;"	f
testCount	D:\www\lib\phpunit\Framework\TestSuite.php	/^    public function testCount()$/;"	f
testDb	D:\www\lib\phpunit\TextUI\TestRunner.php	/^            $testDb = new PHPUnit_Util_Log_CodeCoverage_Database($dbh);$/;"	v
testDelete	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^	public function testDelete()$/;"	f
testDeleteAll	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^	public function testDeleteAll()$/;"	f
testDepositWithdrawMoney	D:\www\lib\phpunit\Samples\BankAccount\BankAccountTest.php	/^    public function testDepositWithdrawMoney()$/;"	f
testDoesNotExceedMaxRunningTime	D:\www\lib\phpunit\Tests\Extensions\PerformanceTestCaseTest.php	/^    public function testDoesNotExceedMaxRunningTime()$/;"	f
testEnded	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    public function testEnded($testName)$/;"	f
testError	D:\www\lib\phpunit\Tests\Framework\TestListenerTest.php	/^    public function testError()$/;"	f
testExcecute	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\RowBasedTest.php	/^	public function testExcecute()$/;"	f
testExceedsMaxRunningTime	D:\www\lib\phpunit\Tests\Extensions\PerformanceTestCaseTest.php	/^    public function testExceedsMaxRunningTime()$/;"	f
testException	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testException()$/;"	f
testExceptionRunningAndTearDown	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testExceptionRunningAndTearDown()$/;"	f
testExpectOutputRegexFooActualBar	D:\www\lib\phpunit\Tests\_files\OutputTestCase.php	/^    public function testExpectOutputRegexFooActualBar()$/;"	f
testExpectOutputRegexFooActualFoo	D:\www\lib\phpunit\Tests\_files\OutputTestCase.php	/^    public function testExpectOutputRegexFooActualFoo()$/;"	f
testExpectOutputStringFooActualBar	D:\www\lib\phpunit\Tests\_files\OutputTestCase.php	/^    public function testExpectOutputStringFooActualBar()$/;"	f
testExpectOutputStringFooActualFoo	D:\www\lib\phpunit\Tests\_files\OutputTestCase.php	/^    public function testExpectOutputStringFooActualFoo()$/;"	f
testFail	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testFail()$/;"	f
testFailed	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^    protected $testFailed = FALSE;$/;"	v
testFailure	D:\www\lib\phpunit\Tests\Framework\TestListenerTest.php	/^    public function testFailure()$/;"	f
testFilteredDataSet	D:\www\lib\phpunit\Tests\Extensions\Database\DataSet\FilterTest.php	/^	public function testFilteredDataSet()$/;"	f
testFlatXmlDataSet	D:\www\lib\phpunit\Tests\Extensions\Database\DataSet\XmlDataSetsTest.php	/^	public function testFlatXmlDataSet()$/;"	f
testGetObjectAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testGetObjectAttribute()$/;"	f
testGetStaticAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testGetStaticAttribute()$/;"	f
testGreaterThan	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testGreaterThan()$/;"	f
testGreaterThanOrEqual	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testGreaterThanOrEqual()$/;"	f
testInPlaceEditor	D:\www\lib\phpunit\Tests\Extensions\SeleniumTestCaseTest.php	/^    public function testInPlaceEditor()$/;"	f
testInheritedTests	D:\www\lib\phpunit\Tests\Framework\SuiteTest.php	/^    public function testInheritedTests()$/;"	f
testInsert	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^	public function testInsert()$/;"	f
testInvokeNonStaticSuite	D:\www\lib\phpunit\Tests\Runner\BaseTestRunnerTest.php	/^    public function testInvokeNonStaticSuite()$/;"	f
testIsZero	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testIsZero()$/;"	f
testLessThan	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testLessThan()$/;"	f
testLessThanOrEqual	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testLessThanOrEqual()$/;"	f
testMarkTestIncomplete	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testMarkTestIncomplete()$/;"	f
testMarkTestSkipped	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testMarkTestSkipped()$/;"	f
testMethodName	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^            $testMethodName = $string;$/;"	v
testMixedSimpleAdd	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testMixedSimpleAdd()$/;"	f
testMockedMethodIsCalledAtLeastOnce	D:\www\lib\phpunit\Tests\Framework\MockObjectTest.php	/^    public function testMockedMethodIsCalledAtLeastOnce()$/;"	f
testMockedMethodIsCalledAtLeastOnce2	D:\www\lib\phpunit\Tests\Framework\MockObjectTest.php	/^    public function testMockedMethodIsCalledAtLeastOnce2()$/;"	f
testMockedMethodIsCalledExactly	D:\www\lib\phpunit\Tests\Framework\MockObjectTest.php	/^    public function testMockedMethodIsCalledExactly()$/;"	f
testMockedMethodIsCalledOnce	D:\www\lib\phpunit\Tests\Framework\MockObjectTest.php	/^    public function testMockedMethodIsCalledOnce()$/;"	f
testMockedMethodIsCalledOnceWithParameter	D:\www\lib\phpunit\Tests\Framework\MockObjectTest.php	/^    public function testMockedMethodIsCalledOnceWithParameter()$/;"	f
testMockedMethodIsNeverCalled	D:\www\lib\phpunit\Tests\Framework\MockObjectTest.php	/^    public function testMockedMethodIsNeverCalled()$/;"	f
testMoneyBagEquals	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testMoneyBagEquals()$/;"	f
testMoneyBagHash	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testMoneyBagHash()$/;"	f
testMoneyEquals	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testMoneyEquals()$/;"	f
testMoneyHash	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testMoneyHash()$/;"	f
testName	D:\www\lib\phpunit\Util\Test.php	/^        $testName = self::describe($test);$/;"	v
testNamelessTestCase	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testNamelessTestCase()$/;"	f
testNewAccountBalanceIsInitiallyZero	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccountDBTestMySQL.php	/^    public function testNewAccountBalanceIsInitiallyZero()$/;"	f
testNewAccountCreation	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccountDBTestMySQL.php	/^    public function testNewAccountCreation()$/;"	f
testNoArgTestCasePasses	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testNoArgTestCasePasses()$/;"	f
testNoException	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testNoException()$/;"	f
testNoTestCaseClass	D:\www\lib\phpunit\Tests\Framework\SuiteTest.php	/^    public function testNoTestCaseClass()$/;"	f
testNoTestCases	D:\www\lib\phpunit\Tests\Framework\SuiteTest.php	/^    public function testNoTestCases()$/;"	f
testNormalize2	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testNormalize2()$/;"	f
testNormalize3	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testNormalize3()$/;"	f
testNormalize4	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testNormalize4()$/;"	f
testNotExistingTestCase	D:\www\lib\phpunit\Tests\Framework\SuiteTest.php	/^    public function testNotExistingTestCase()$/;"	f
testNotPublic	D:\www\lib\phpunit\Tests\_files\NotPublicTestCase.php	/^    protected function testNotPublic()$/;"	f
testNotPublicTestCase	D:\www\lib\phpunit\Tests\Framework\SuiteTest.php	/^    public function testNotPublicTestCase()$/;"	f
testNotVoidTestCase	D:\www\lib\phpunit\Tests\Framework\SuiteTest.php	/^    public function testNotVoidTestCase()$/;"	f
testNothing	D:\www\lib\phpunit\Tests\_files\NoArgTestCaseTest.php	/^    public function testNothing()$/;"	f
testNumber	D:\www\lib\phpunit\Util\Log\TAP.php	/^    protected $testNumber = 0;$/;"	v
testObjectHasOnTheFlyAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testObjectHasOnTheFlyAttribute()$/;"	f
testObjectHasPrivateAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testObjectHasPrivateAttribute()$/;"	f
testObjectHasProtectedAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testObjectHasProtectedAttribute()$/;"	f
testObjectHasPublicAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testObjectHasPublicAttribute()$/;"	f
testObjectNotHasOnTheFlyAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testObjectNotHasOnTheFlyAttribute()$/;"	f
testObjectNotHasPrivateAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testObjectNotHasPrivateAttribute()$/;"	f
testObjectNotHasProtectedAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testObjectNotHasProtectedAttribute()$/;"	f
testObjectNotHasPublicAttribute	D:\www\lib\phpunit\Tests\Framework\AssertTest.php	/^    public function testObjectNotHasPublicAttribute()$/;"	f
testOldAccountInfoInitiallySet	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccountDBTestMySQL.php	/^    public function testOldAccountInfoInitiallySet()$/;"	f
testOneTestCase	D:\www\lib\phpunit\Tests\Framework\SuiteTest.php	/^    public function testOneTestCase()$/;"	f
testOpen	D:\www\lib\phpunit\Tests\Extensions\SeleniumTestCaseTest.php	/^    public function testOpen()$/;"	f
testOpenFail	D:\www\lib\phpunit\Tests\Extensions\SeleniumTestCaseTest.php	/^    public function testOpenFail()$/;"	f
testPass	D:\www\lib\phpunit\Framework\TestCase.php	/^ * public function testPass()$/;"	f
testPrint	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testPrint()$/;"	f
testPublic	D:\www\lib\phpunit\Tests\_files\NotPublicTestCase.php	/^    public function testPublic()$/;"	f
testRepeatedMoreThanOnce	D:\www\lib\phpunit\Tests\Extensions\RepeatedTestTest.php	/^    public function testRepeatedMoreThanOnce()$/;"	f
testRepeatedNegative	D:\www\lib\phpunit\Tests\Extensions\RepeatedTestTest.php	/^    public function testRepeatedNegative()$/;"	f
testRepeatedOnce	D:\www\lib\phpunit\Tests\Extensions\RepeatedTestTest.php	/^    public function testRepeatedOnce()$/;"	f
testRepeatedZero	D:\www\lib\phpunit\Tests\Extensions\RepeatedTestTest.php	/^    public function testRepeatedZero()$/;"	f
testReplace	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^	public function testReplace()$/;"	f
testRunAndTearDownFails	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testRunAndTearDownFails()$/;"	f
testSecondsToTimeString	D:\www\lib\phpunit\Tests\Util\TimerTest.php	/^    public function testSecondsToTimeString()$/;"	f
testSetupFails	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testSetupFails()$/;"	f
testShadowedTests	D:\www\lib\phpunit\Tests\Framework\SuiteTest.php	/^    public function testShadowedTests()$/;"	f
testSimpleAdd	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testSimpleAdd()$/;"	f
testSimpleBagAdd	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testSimpleBagAdd()$/;"	f
testSimpleMultiply	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testSimpleMultiply()$/;"	f
testSimpleNegate	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testSimpleNegate()$/;"	f
testSimpleSubtract	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testSimpleSubtract()$/;"	f
testSimplify	D:\www\lib\phpunit\Samples\Money\MoneyTest.php	/^    public function testSimplify()$/;"	f
testSleepTwoSeconds	D:\www\lib\phpunit\Tests\_files\Sleep.php	/^    public function testSleepTwoSeconds()$/;"	f
testStartStop	D:\www\lib\phpunit\Tests\Framework\TestListenerTest.php	/^    public function testStartStop()$/;"	f
testStarted	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    public function testStarted($testName)$/;"	f
testStubbedException	D:\www\lib\phpunit\Tests\Framework\MockObjectTest.php	/^    public function testStubbedException()$/;"	f
testStubbedReturnValue	D:\www\lib\phpunit\Tests\Framework\MockObjectTest.php	/^    public function testStubbedReturnValue()$/;"	f
testSuccess	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testSuccess()$/;"	f
testSuccessful	D:\www\lib\phpunit\Util\Log\TAP.php	/^    protected $testSuccessful = TRUE;$/;"	v
testSuccessfulRun	D:\www\lib\phpunit\Tests\Framework\TestImplementorTest.php	/^    public function testSuccessfulRun()$/;"	f
testSuite	D:\www\lib\phpunit\Util\Log\XML.php	/^        $testSuite = $this->document->createElement('testsuite');$/;"	v
testSuiteErrors	D:\www\lib\phpunit\Util\Log\XML.php	/^    protected $testSuiteErrors = array(0);$/;"	v
testSuiteFailureOrErrorCount	D:\www\lib\phpunit\Util\Log\GraphViz.php	/^    protected $testSuiteFailureOrErrorCount = array(0);$/;"	v
testSuiteFailures	D:\www\lib\phpunit\Util\Log\XML.php	/^    protected $testSuiteFailures = array(0);$/;"	v
testSuiteId	D:\www\lib\phpunit\Util\Log\Database.php	/^            $testSuiteId = $this->insertRootNode($suite->getName());$/;"	v
testSuiteIncompleteOrSkippedCount	D:\www\lib\phpunit\Util\Log\GraphViz.php	/^    protected $testSuiteIncompleteOrSkippedCount = array(0);$/;"	v
testSuiteLevel	D:\www\lib\phpunit\Util\Log\XML.php	/^    protected $testSuiteLevel = 0;$/;"	v
testSuiteNode	D:\www\lib\phpunit\Util\Configuration.php	/^        $testSuiteNode = $this->xpath->query('testsuite');$/;"	v
testSuiteSize	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected $testSuiteSize = array();$/;"	v
testSuiteTests	D:\www\lib\phpunit\Util\Log\XML.php	/^    protected $testSuiteTests = array(0);$/;"	v
testSuiteTimes	D:\www\lib\phpunit\Util\Log\XML.php	/^    protected $testSuiteTimes = array(0);$/;"	v
testSuites	D:\www\lib\phpunit\Util\Log\XML.php	/^    protected $testSuites = array();$/;"	v
testTearDownAfterError	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testTearDownAfterError()$/;"	f
testTearDownFails	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testTearDownFails()$/;"	f
testTearDownSetupFails	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testTearDownSetupFails()$/;"	f
testTestNameIsConvertedToASentence	D:\www\lib\phpunit\Tests\Util\TestDox\NamePrettifierTest.php	/^    public function testTestNameIsConvertedToASentence()$/;"	f
testTitleHasSensibleDefaults	D:\www\lib\phpunit\Tests\Util\TestDox\NamePrettifierTest.php	/^    public function testTitleHasSensibleDefaults()$/;"	f
testTruncate	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^	public function testTruncate()$/;"	f
testType	D:\www\lib\phpunit\Tests\Extensions\SeleniumTestCaseTest.php	/^    public function testType()$/;"	f
testTypeFail	D:\www\lib\phpunit\Tests\Extensions\SeleniumTestCaseTest.php	/^    public function testTypeFail()$/;"	f
testUpdate	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^	public function testUpdate()$/;"	f
testWasRun	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testWasRun()$/;"	f
testWrongException	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    public function testWrongException()$/;"	f
testXmlDataSet	D:\www\lib\phpunit\Tests\Extensions\Database\DataSet\XmlDataSetsTest.php	/^	public function testXmlDataSet()$/;"	f
tests	D:\www\lib\phpunit\Util\TestDox\ResultPrinter.php	/^    protected $tests = array();$/;"	v
testsFound	D:\www\lib\phpunit\Framework\TestSuite.php	/^        $testsFound = FALSE;$/;"	v
text	D:\www\lib\phpunit\Util\Type.php	/^            $text = 'array( ' . self::toString($k1) . ' => ' . $v1;$/;"	v
that	D:\www\lib\phpunit\Util\Printer.php	/^ * Utility class that can print to STDOUT or write to a file.$/;"	c
theClass	D:\www\lib\phpunit\Framework\TestSuite.php	/^            $theClass = new ReflectionClass($theClass);$/;"	v
thisMetaData	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractTable.php	/^        $thisMetaData = $this->getTableMetaData();$/;"	v
thisTableNames	D:\www\lib\phpunit\Extensions\Database\DataSet\AbstractDataSet.php	/^        $thisTableNames = $this->getTableNames();$/;"	v
threshold	D:\www\lib\phpunit\Util\Configuration.php	/^            $threshold = explode(',', $threshold);$/;"	v
throwException	D:\www\lib\phpunit\Framework\TestCase.php	/^    protected function throwException(Exception $exception)$/;"	f
thrownException	D:\www\lib\phpunit\Framework\TestFailure.php	/^    public function thrownException()$/;"	f
time	D:\www\lib\phpunit\Util\Log\Database.php	/^    protected function storeResult($result = PHPUnit_Runner_BaseTestRunner::STATUS_PASSED, $time = 0, $message = '')$/;"	v
timeout	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^    protected $timeout = 30000;$/;"	v
timesRepeat	D:\www\lib\phpunit\Extensions\RepeatedTest.php	/^    public function __construct(PHPUnit_Framework_Test $test, $timesRepeat = 1, $filter = FALSE, array $groups = array(), array $excludeGroups = array())$/;"	v
timestamp	D:\www\lib\phpunit\Util\Log\Database.php	/^        $timestamp = time();$/;"	v
title	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^        $title = $testClassName;$/;"	v
tmp	D:\www\lib\phpunit\Util\Fileloader.php	/^                    $tmp             = explode(' ', $file[0]);$/;"	v
to	D:\www\lib\phpunit\Util\Metrics\Project.php	/^                foreach ($dependencies as $to => $flag) {$/;"	v
toString	D:\www\lib\phpunit\Util\Type.php	/^    public static function toString($value, $short = FALSE)$/;"	f
toStringVerbose	D:\www\lib\phpunit\Framework\TestFailure.php	/^    public function toStringVerbose($verbose = FALSE)$/;"	f
token	D:\www\lib\phpunit\Util\Metrics\Project.php	/^                $token = $tokens[$key];$/;"	v
tokenNr	D:\www\lib\phpunit\Util\Metrics\Project.php	/^            $tokenNr   = 0;$/;"	v
tokens	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $tokens     = token_get_all(file_get_contents($file));$/;"	v
topTestSuite	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function topTestSuite()$/;"	f
tornDown	D:\www\lib\phpunit\Tests\_files\TornDown.php	/^    public $tornDown = FALSE;$/;"	v
totalClassesPercent	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^        $totalClassesPercent = $this->getCalledClassesPercent();$/;"	v
totalLinesPercent	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^        $totalLinesPercent = $this->getLineExecutedPercent();$/;"	v
totalMethodsPercent	D:\www\lib\phpunit\Util\Report\Node\Directory.php	/^        $totalMethodsPercent = $this->getCalledMethodsPercent();$/;"	v
trace	D:\www\lib\phpunit\Util\Log\JSON.php	/^    protected function writeCase($status, $time, array $trace = array(), $message = '')$/;"	v
truncateOperation	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^		$truncateOperation = new PHPUnit_Extensions_Database_Operation_Truncate();$/;"	v
type	D:\www\lib\phpunit\Util\Type.php	/^            $type = gettype($value) . ':';$/;"	v
typeHint	D:\www\lib\phpunit\Util\Class.php	/^            $typeHint = '';$/;"	v
updateAccount	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccount.php	/^    protected function updateAccount()$/;"	f
updateArgs	D:\www\lib\phpunit\Extensions\Database\Operation\Replace.php	/^                        $updateArgs = $updateOperation->buildOperationArguments($databaseTableMetaData, $table, $i);$/;"	v
updateOperation	D:\www\lib\phpunit\Tests\Extensions\Database\Operation\OperationsTest.php	/^		$updateOperation = new PHPUnit_Extensions_Database_Operation_Update();$/;"	v
updateParents	D:\www\lib\phpunit\Util\Log\Database.php	/^    protected function updateParents($time, $result = NULL)$/;"	f
updateQuery	D:\www\lib\phpunit\Extensions\Database\Operation\Replace.php	/^            $updateQuery = $updateOperation->buildOperationQuery($databaseTableMetaData, $table, $connection);$/;"	v
updateStatement	D:\www\lib\phpunit\Extensions\Database\Operation\Replace.php	/^            $updateStatement = $connection->getConnection()->prepare($updateQuery);$/;"	v
url	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^        $url = sprintf($/;"	v
useXdebug	D:\www\lib\phpunit\Framework\TestResult.php	/^    protected static $useXdebug = null;$/;"	v
user	D:\www\lib\phpunit\Util\PDO.php	/^                $user          = null;$/;"	v
v1	D:\www\lib\phpunit\Util\Type.php	/^            $v1 = $a1[$k1];$/;"	v
v2	D:\www\lib\phpunit\Util\Type.php	/^                $v2 = $a2[$k2];$/;"	v
valid	D:\www\lib\phpunit\Util\TestSuiteIterator.php	/^    public function valid()$/;"	f
value	D:\www\lib\phpunit\Util\Type.php	/^            $value = 'null';$/;"	v
values	D:\www\lib\phpunit\Util\Template.php	/^    protected $values = array();$/;"	v
varName	D:\www\lib\phpunit\Framework\TestCase.php	/^        foreach ($this->iniSettings as $varName => $oldValue) {$/;"	v
variables	D:\www\lib\phpunit\Util\Fileloader.php	/^            $variables = xdebug_get_declared_vars();$/;"	v
vars	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $vars          = 0;$/;"	v
varsI	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $varsI         = 0;$/;"	v
varsNp	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $varsNp        = 0;$/;"	v
verbose	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    public function __construct($out = NULL, $verbose = FALSE)$/;"	v
verify	D:\www\lib\phpunit\Framework\MockObject\Verifiable.php	/^    public function verify();$/;"	f
verifyError	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    protected function verifyError(PHPUnit_Framework_TestCase $test)$/;"	f
verifyFailure	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    protected function verifyFailure(PHPUnit_Framework_TestCase $test)$/;"	f
verifySuccess	D:\www\lib\phpunit\Tests\Framework\TestCaseTest.php	/^    protected function verifySuccess(PHPUnit_Framework_TestCase $test)$/;"	f
versionStringPrinted	D:\www\lib\phpunit\TextUI\TestRunner.php	/^    protected static $versionStringPrinted = FALSE;$/;"	v
violation	D:\www\lib\phpunit\Util\Log\PMD\Rule\Function\CodeCoverage.php	/^            $violation = 'The code coverage is %01.2F which is considered medium.';$/;"	v
violationXml	D:\www\lib\phpunit\Util\Log\PMD.php	/^        $violationXml = $element->appendChild($/;"	v
warning	D:\www\lib\phpunit\Framework\TestSuite.php	/^    protected static function warning($message)$/;"	f
was	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^ * print "original class was: . $m->className;$/;"	c
wasNumeric	D:\www\lib\phpunit\Util\TestDox\NamePrettifier.php	/^        $wasNumeric = FALSE;$/;"	v
wasRun	D:\www\lib\phpunit\Tests\_files\WasRun.php	/^    public $wasRun = FALSE;$/;"	v
wasSuccessful	D:\www\lib\phpunit\Framework\TestResult.php	/^    public function wasSuccessful()$/;"	f
whereClause	D:\www\lib\phpunit\Extensions\Database\DB\IDatabaseConnection.php	/^    public function getRowCount($tableName, $whereClause = null);$/;"	v
whereStatement	D:\www\lib\phpunit\Extensions\Database\Operation\Update.php	/^        $whereStatement = 'WHERE ' . implode(' AND ', $this->buildPreparedColumnArray($keys, $connection));$/;"	v
whitelistedFile	D:\www\lib\phpunit\Util\Filter.php	/^                                    $whitelistedFile => $coverage[$whitelistedFile]$/;"	v
whitelistedFiles	D:\www\lib\phpunit\Util\Filter.php	/^    protected static $whitelistedFiles = array();$/;"	v
width	D:\www\lib\phpunit\Util\Report\Node\File.php	/^        $width       = max($linesLength);$/;"	v
will	D:\www\lib\phpunit\Framework\MockObject\Mock.php	/^ * The mocked class will contain all the methods of the original class but with$/;"	c
with	D:\www\lib\phpunit\Util\Log\PMD\Rule\Class\TooManyFields.php	/^              'example, a class with city\/state\/zip fields could ' .$/;"	c
withAnyParameters	D:\www\lib\phpunit\Framework\MockObject\Builder\ParametersMatch.php	/^    public function withAnyParameters();$/;"	f
withdrawMoney	D:\www\lib\phpunit\Samples\BankAccount\BankAccount.php	/^    public function withdrawMoney($balance)$/;"	f
wmc	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $wmc           = 0;$/;"	v
wmcI	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $wmcI          = 0;$/;"	v
wmcNp	D:\www\lib\phpunit\Util\Metrics\Class.php	/^    protected $wmcNp         = 0;$/;"	v
write	D:\www\lib\phpunit\Util\Skeleton.php	/^    public function write($file = '')$/;"	f
writeCase	D:\www\lib\phpunit\Util\Log\JSON.php	/^    protected function writeCase($status, $time, array $trace = array(), $message = '')$/;"	f
writeDocument	D:\www\lib\phpunit\Util\Log\XML.php	/^    protected $writeDocument = TRUE;$/;"	v
writeNotOk	D:\www\lib\phpunit\Util\Log\TAP.php	/^    protected function writeNotOk(PHPUnit_Framework_Test $test, $prefix = '', $directive = '')$/;"	f
writeProgress	D:\www\lib\phpunit\TextUI\ResultPrinter.php	/^    protected function writeProgress($progress)$/;"	f
writeToTestDatabase	D:\www\lib\phpunit\TextUI\TestRunner.php	/^            $writeToTestDatabase = TRUE;$/;"	v
writer	D:\www\lib\phpunit\TextUI\TestRunner.php	/^            $writer = new PHPUnit_Util_Log_PMD($/;"	v
xdebugCollectVars	D:\www\lib\phpunit\Util\Fileloader.php	/^        $xdebugCollectVars = $xdebugLoaded && ini_get('xdebug.collect_vars') == '1';$/;"	v
xdebugLoaded	D:\www\lib\phpunit\Util\Fileloader.php	/^        $xdebugLoaded      = extension_loaded('xdebug');$/;"	v
xmlClass	D:\www\lib\phpunit\Util\Log\Metrics.php	/^                    $xmlClass = $document->createElement('class');$/;"	v
xmlDataSet	D:\www\lib\phpunit\Tests\Extensions\Database\DataSet\XmlDataSetsTest.php	/^		$xmlDataSet = new PHPUnit_Extensions_Database_DataSet_XmlDataSet(dirname(__FILE__).'\/..\/_files\/XmlDataSets\/XmlDataSet.xml');$/;"	v
xmlDuplication	D:\www\lib\phpunit\Util\Log\CPD.php	/^            $xmlDuplication = $cpd->appendChild($/;"	v
xmlFile	D:\www\lib\phpunit\Util\Log\PMD.php	/^            $xmlFile = $document->createElement('file');$/;"	v
xmlFlatDataSet	D:\www\lib\phpunit\Tests\Extensions\Database\DataSet\XmlDataSetsTest.php	/^		$xmlFlatDataSet = new PHPUnit_Extensions_Database_DataSet_FlatXmlDataSet(dirname(__FILE__).'\/..\/_files\/XmlDataSets\/FlatXmlDataSet.xml');$/;"	v
xmlFunction	D:\www\lib\phpunit\Util\Log\Metrics.php	/^                $xmlFunction = $xmlFile->appendChild($/;"	v
xmlMethod	D:\www\lib\phpunit\Util\Log\Metrics.php	/^                        $xmlMethod = $xmlClass->appendChild($/;"	v
xml_dataset	D:\www\lib\phpunit\Samples\BankAccountDB\BankAccountDBTestMySQL.php	/^        $xml_dataset = $this->createFlatXMLDataSet(dirname(__FILE__).'\/_files\/bank-account-after-withdrawals.xml');$/;"	v
xpath	D:\www\lib\phpunit\Extensions\SeleniumTestCase.php	/^        $xpath    = new DOMXPath($document);$/;"	v
yui	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected $yui = TRUE;$/;"	v
yuiPanelJS	D:\www\lib\phpunit\Util\Report\Node\File.php	/^    protected $yuiPanelJS = '';$/;"	v
yuiTemplate	D:\www\lib\phpunit\Util\Report\Node\File.php	/^            $yuiTemplate = new PHPUnit_Util_Template($/;"	v
